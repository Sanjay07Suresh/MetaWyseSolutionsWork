

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 25 14:30:42 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     PORTA           equ	5	;# 
    79     0006                     PORTB           equ	6	;# 
    80     0007                     PORTC           equ	7	;# 
    81     0008                     PORTD           equ	8	;# 
    82     0009                     PORTE           equ	9	;# 
    83     000A                     PCLATH          equ	10	;# 
    84     000B                     INTCON          equ	11	;# 
    85     000C                     PIR1            equ	12	;# 
    86     000D                     PIR2            equ	13	;# 
    87     000E                     TMR1            equ	14	;# 
    88     000E                     TMR1L           equ	14	;# 
    89     000F                     TMR1H           equ	15	;# 
    90     0010                     T1CON           equ	16	;# 
    91     0011                     TMR2            equ	17	;# 
    92     0012                     T2CON           equ	18	;# 
    93     0013                     SSPBUF          equ	19	;# 
    94     0014                     SSPCON          equ	20	;# 
    95     0015                     CCPR1           equ	21	;# 
    96     0015                     CCPR1L          equ	21	;# 
    97     0016                     CCPR1H          equ	22	;# 
    98     0017                     CCP1CON         equ	23	;# 
    99     0018                     RCSTA           equ	24	;# 
   100     0019                     TXREG           equ	25	;# 
   101     001A                     RCREG           equ	26	;# 
   102     001B                     CCPR2           equ	27	;# 
   103     001B                     CCPR2L          equ	27	;# 
   104     001C                     CCPR2H          equ	28	;# 
   105     001D                     CCP2CON         equ	29	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISA           equ	133	;# 
   110     0086                     TRISB           equ	134	;# 
   111     0087                     TRISC           equ	135	;# 
   112     0088                     TRISD           equ	136	;# 
   113     0089                     TRISE           equ	137	;# 
   114     008C                     PIE1            equ	140	;# 
   115     008D                     PIE2            equ	141	;# 
   116     008E                     PCON            equ	142	;# 
   117     0091                     SSPCON2         equ	145	;# 
   118     0092                     PR2             equ	146	;# 
   119     0093                     SSPADD          equ	147	;# 
   120     0094                     SSPSTAT         equ	148	;# 
   121     0098                     TXSTA           equ	152	;# 
   122     0099                     SPBRG           equ	153	;# 
   123     009C                     CMCON           equ	156	;# 
   124     009D                     CVRCON          equ	157	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     0008                     PORTD           equ	8	;# 
   142     0009                     PORTE           equ	9	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     0088                     TRISD           equ	136	;# 
   173     0089                     TRISE           equ	137	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0094                     SSPSTAT         equ	148	;# 
   181     0098                     TXSTA           equ	152	;# 
   182     0099                     SPBRG           equ	153	;# 
   183     009C                     CMCON           equ	156	;# 
   184     009D                     CVRCON          equ	157	;# 
   185     009E                     ADRESL          equ	158	;# 
   186     009F                     ADCON1          equ	159	;# 
   187     010C                     EEDATA          equ	268	;# 
   188     010D                     EEADR           equ	269	;# 
   189     010E                     EEDATH          equ	270	;# 
   190     010F                     EEADRH          equ	271	;# 
   191     018C                     EECON1          equ	396	;# 
   192     018D                     EECON2          equ	397	;# 
   193     001E                     _ADRESH         set	30
   194     001F                     _ADCON0bits     set	31
   195     000E                     _TMR1L          set	14
   196     000F                     _TMR1H          set	15
   197     0019                     _TXREG          set	25
   198     0018                     _RCSTA          set	24
   199     0012                     _T2CON          set	18
   200     0010                     _T1CON          set	16
   201     001F                     _ADCON0         set	31
   202     0061                     _TMR2IF         set	97
   203     0060                     _TMR1IF         set	96
   204     0064                     _TXIF           set	100
   205     009E                     _ADRESL         set	158
   206     0099                     _SPBRG          set	153
   207     0098                     _TXSTA          set	152
   208     0087                     _TRISC          set	135
   209     009F                     _ADCON1         set	159
   210     0085                     _TRISA          set	133
   211                           
   212                           	psect	strings
   213     0003                     __pstrings:
   214     0003                     stringtab:
   215     0003                     __stringtab:
   216     0003                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219     0003                     stringdir:
   220     0003  3000               	movlw	high stringdir
   221     0004  008A               	movwf	10
   222     0005  0804               	movf	4,w
   223     0006  0A84               	incf	4,f
   224     0007  0782               	addwf	2,f
   225     0008                     __stringbase:
   226     0008  3400               	retlw	0
   227     0009                     __end_of__stringtab:
   228     0009                     STR_1:
   229     0009  3425               	retlw	37	;'%'
   230     000A  3464               	retlw	100	;'d'
   231     000B  3400               	retlw	0
   232                           
   233                           	psect	cinit
   234     07EC                     start_initialization:	
   235                           ; #config settings
   236                           
   237     07EC                     __initialization:
   238                           
   239                           ; Clear objects allocated to BANK0
   240     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   241     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   242     07EE  01CE               	clrf	__pbssBANK0& (0+127)
   243     07EF  01CF               	clrf	(__pbssBANK0+1)& (0+127)
   244     07F0  01D0               	clrf	(__pbssBANK0+2)& (0+127)
   245     07F1  01D1               	clrf	(__pbssBANK0+3)& (0+127)
   246     07F2  01D2               	clrf	(__pbssBANK0+4)& (0+127)
   247                           
   248                           ; Clear objects allocated to BANK1
   249     07F3  1383               	bcf	3,7	;select IRP bank0
   250     07F4  30A0               	movlw	low __pbssBANK1
   251     07F5  0084               	movwf	4
   252     07F6  30C0               	movlw	low (__pbssBANK1+32)
   253     07F7  120A  118A  247B  120A  118A  	fcall	clear_ram0
   254     07FC                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257     07FC                     __end_of__initialization:
   258     07FC  0183               	clrf	3
   259     07FD  120A  118A  2D6A   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssBANK0
   262     004E                     __pbssBANK0:
   263     004E                     _width:
   264     004E                     	ds	2
   265     0050                     _prec:
   266     0050                     	ds	2
   267     0052                     _flags:
   268     0052                     	ds	1
   269                           
   270                           	psect	bssBANK1
   271     00A0                     __pbssBANK1:
   272     00A0                     _dbuf:
   273     00A0                     	ds	32
   274                           
   275                           	psect	clrtext
   276     047B                     clear_ram0:	
   277                           ;	Called with FSR containing the base address, and
   278                           ;	W with the last address+1
   279                           
   280     047B  0064               	clrwdt	;clear the watchdog before getting into this loop
   281     047C                     clrloop0:
   282     047C  0180               	clrf	0	;clear RAM location pointed to by FSR
   283     047D  0A84               	incf	4,f	;increment pointer
   284     047E  0604               	xorwf	4,w	;XOR with final address
   285     047F  1903               	btfsc	3,2	;have we reached the end yet?
   286     0480  3400               	retlw	0	;all done for this memory range, return
   287     0481  0604               	xorwf	4,w	;XOR again to restore value
   288     0482  2C7C               	goto	clrloop0	;do the next byte
   289                           
   290                           	psect	cstackCOMMON
   291     0070                     __pcstackCOMMON:
   292     0070                     ?_adc_init:
   293     0070                     ?_t_init:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     ?_uart_init:	
   297                           ; 1 bytes @ 0x0
   298                           
   299     0070                     ?_t1delay:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?_tx:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_t2delay:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_putch:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_main:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_adc:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?_fputc:	
   318                           ; 2 bytes @ 0x0
   319                           
   320     0070                     ?___awdiv:	
   321                           ; 2 bytes @ 0x0
   322                           
   323     0070                     ?___awmod:	
   324                           ; 2 bytes @ 0x0
   325                           
   326     0070                     tx@a:	
   327                           ; 2 bytes @ 0x0
   328                           
   329     0070                     putch@c:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     t1delay@i:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     t2delay@i:	
   336                           ; 2 bytes @ 0x0
   337                           
   338     0070                     ___awdiv@divisor:	
   339                           ; 2 bytes @ 0x0
   340                           
   341     0070                     ___awmod@divisor:	
   342                           ; 2 bytes @ 0x0
   343                           
   344     0070                     fputc@c:	
   345                           ; 2 bytes @ 0x0
   346                           
   347     0070                     ??_adc_init:	
   348                           ; 2 bytes @ 0x0
   349                           
   350     0070                     ??_t_init:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0070                     ??_uart_init:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0070                     ??_t1delay:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0070                     ??_tx:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ??_t2delay:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ??_putch:	
   366                           ; 1 bytes @ 0x0
   367                           
   368                           
   369                           ; 1 bytes @ 0x0
   370     0070                     	ds	1
   371     0071                     ?_txstr:
   372     0071                     txstr@b:	
   373                           ; 1 bytes @ 0x1
   374                           
   375                           
   376                           ; 1 bytes @ 0x1
   377     0071                     	ds	1
   378     0072                     ___awdiv@dividend:
   379     0072                     ___awmod@dividend:	
   380                           ; 2 bytes @ 0x2
   381                           
   382     0072                     fputc@fp:	
   383                           ; 2 bytes @ 0x2
   384                           
   385     0072                     ??_adc:	
   386                           ; 2 bytes @ 0x2
   387                           
   388     0072                     ??_txstr:	
   389                           ; 1 bytes @ 0x2
   390                           
   391                           
   392                           ; 1 bytes @ 0x2
   393     0072                     	ds	2
   394     0074                     ___awdiv@counter:
   395     0074                     ___awmod@counter:	
   396                           ; 1 bytes @ 0x4
   397                           
   398     0074                     adc@adcvalue:	
   399                           ; 1 bytes @ 0x4
   400                           
   401     0074                     ??_fputc:	
   402                           ; 2 bytes @ 0x4
   403                           
   404     0074                     ??___awdiv:	
   405                           ; 1 bytes @ 0x4
   406                           
   407     0074                     ??___awmod:	
   408                           ; 1 bytes @ 0x4
   409                           
   410                           
   411                           ; 1 bytes @ 0x4
   412     0074                     	ds	1
   413     0075                     ___awdiv@sign:
   414     0075                     ___awmod@sign:	
   415                           ; 1 bytes @ 0x5
   416                           
   417                           
   418                           ; 1 bytes @ 0x5
   419     0075                     	ds	1
   420     0076                     ?_abs:
   421     0076                     ___awdiv@quotient:	
   422                           ; 2 bytes @ 0x6
   423                           
   424     0076                     abs@a:	
   425                           ; 2 bytes @ 0x6
   426                           
   427                           
   428                           ; 2 bytes @ 0x6
   429     0076                     	ds	2
   430     0078                     ??_abs:
   431                           
   432                           ; 1 bytes @ 0x8
   433     0078                     	ds	5
   434     007D                     vfprintf@cfmt:
   435     007D                     ??_vfprintf:	
   436                           ; 1 bytes @ 0xD
   437                           
   438                           
   439                           ; 1 bytes @ 0xD
   440     007D                     	ds	1
   441     007E                     ??_main:
   442                           
   443                           	psect	cstackBANK0
   444     0020                     __pcstackBANK0:	
   445                           ; 1 bytes @ 0xE
   446                           
   447     0020                     ?_vfpfcnvrt:
   448     0020                     vfpfcnvrt@fp:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 2 bytes @ 0x0
   453     0020                     	ds	2
   454     0022                     vfpfcnvrt@fmt:
   455                           
   456                           ; 1 bytes @ 0x2
   457     0022                     	ds	1
   458     0023                     vfpfcnvrt@ap:
   459                           
   460                           ; 1 bytes @ 0x3
   461     0023                     	ds	1
   462     0024                     ??_vfpfcnvrt:
   463                           
   464                           ; 1 bytes @ 0x4
   465     0024                     	ds	2
   466     0026                     vfpfcnvrt@done:
   467                           
   468                           ; 1 bytes @ 0x6
   469     0026                     	ds	1
   470     0027                     vfpfcnvrt@cp:
   471                           
   472                           ; 1 bytes @ 0x7
   473     0027                     	ds	1
   474     0028                     vfpfcnvrt@convarg:
   475                           
   476                           ; 4 bytes @ 0x8
   477     0028                     	ds	4
   478     002C                     vfpfcnvrt@c:
   479                           
   480                           ; 1 bytes @ 0xC
   481     002C                     	ds	1
   482     002D                     ?_vfprintf:
   483     002D                     vfprintf@fp:	
   484                           ; 2 bytes @ 0xD
   485                           
   486                           
   487                           ; 2 bytes @ 0xD
   488     002D                     	ds	2
   489     002F                     vfprintf@fmt:
   490                           
   491                           ; 1 bytes @ 0xF
   492     002F                     	ds	1
   493     0030                     vfprintf@ap:
   494                           
   495                           ; 1 bytes @ 0x10
   496     0030                     	ds	1
   497     0031                     ?_sprintf:
   498     0031                     sprintf@s:	
   499                           ; 2 bytes @ 0x11
   500                           
   501                           
   502                           ; 1 bytes @ 0x11
   503     0031                     	ds	1
   504     0032                     sprintf@fmt:
   505                           
   506                           ; 1 bytes @ 0x12
   507     0032                     	ds	3
   508     0035                     ??_sprintf:
   509                           
   510                           ; 1 bytes @ 0x15
   511     0035                     	ds	1
   512     0036                     sprintf@ap:
   513                           
   514                           ; 1 bytes @ 0x16
   515     0036                     	ds	1
   516     0037                     sprintf@f:
   517                           
   518                           ; 11 bytes @ 0x17
   519     0037                     	ds	11
   520     0042                     main@buffer:
   521                           
   522                           ; 10 bytes @ 0x22
   523     0042                     	ds	10
   524     004C                     main@adcvalue:
   525                           
   526                           ; 2 bytes @ 0x2C
   527     004C                     	ds	2
   528                           
   529                           	psect	maintext
   530     056A                     __pmaintext:	
   531 ;;
   532 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   533 ;;
   534 ;; *************** function _main *****************
   535 ;; Defined at:
   536 ;;		line 24 in file "main.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  buffer         10   34[BANK0 ] unsigned char [10]
   541 ;;  adcvalue        2   44[BANK0 ] unsigned int 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : B00/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0      12       0       0       0
   553 ;;      Temps:          0       0       0       0       0
   554 ;;      Totals:         0      12       0       0       0
   555 ;;Total ram usage:       12 bytes
   556 ;; Hardware stack levels required when called: 5
   557 ;; This function calls:
   558 ;;		_adc
   559 ;;		_adc_init
   560 ;;		_sprintf
   561 ;;		_t1delay
   562 ;;		_t2delay
   563 ;;		_t_init
   564 ;;		_tx
   565 ;;		_txstr
   566 ;;		_uart_init
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572     056A                     _main:	
   573                           ;psect for function _main
   574                           
   575     056A                     l1222:	
   576                           ;incstack = 0
   577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   578                           
   579                           
   580                           ;main.c: 25:     adc_init();
   581     056A  120A  118A  248D  120A  118A  	fcall	_adc_init
   582                           
   583                           ;main.c: 26:     t_init();
   584     056F  120A  118A  2474  120A  118A  	fcall	_t_init
   585     0574                     l1224:
   586                           
   587                           ;main.c: 27:     uart_init();
   588     0574  120A  118A  2499  120A  118A  	fcall	_uart_init
   589     0579                     l1226:
   590                           
   591                           ;main.c: 29:         char buffer[10];;main.c: 31:         t1delay();
   592     0579  120A  118A  2503  120A  118A  	fcall	_t1delay
   593     057E                     l1228:
   594                           
   595                           ;main.c: 32:         unsigned int adcvalue = adc();
   596     057E  120A  118A  24E8  120A  118A  	fcall	_adc
   597     0583  0871               	movf	?_adc+1,w
   598     0584  1283               	bcf	3,5	;RP0=0, select bank0
   599     0585  1303               	bcf	3,6	;RP1=0, select bank0
   600     0586  00CD               	movwf	main@adcvalue+1
   601     0587  0870               	movf	?_adc,w
   602     0588  00CC               	movwf	main@adcvalue
   603     0589                     l1230:
   604                           
   605                           ;main.c: 33:         sprintf(buffer,"%d",adcvalue);
   606     0589  3042               	movlw	(low (main@buffer| 0))& (0+255)
   607     058A  00B1               	movwf	sprintf@s
   608     058B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   609     058C  00B2               	movwf	sprintf@fmt
   610     058D  084D               	movf	main@adcvalue+1,w
   611     058E  00B4               	movwf	?_sprintf+3
   612     058F  084C               	movf	main@adcvalue,w
   613     0590  00B3               	movwf	?_sprintf+2
   614     0591  120A  118A  2522  120A  118A  	fcall	_sprintf
   615     0596                     l1232:
   616                           
   617                           ;main.c: 35:         txstr(buffer);
   618     0596  3042               	movlw	(low (main@buffer| 0))& (0+255)
   619     0597  00F1               	movwf	txstr@b
   620     0598  120A  118A  24BA  120A  118A  	fcall	_txstr
   621     059D                     l1234:
   622                           
   623                           ;main.c: 36:         tx('\r');
   624     059D  300D               	movlw	13
   625     059E  120A  118A  2483  120A  118A  	fcall	_tx
   626     05A3                     l1236:
   627                           
   628                           ;main.c: 37:         tx('\n');
   629     05A3  300A               	movlw	10
   630     05A4  120A  118A  2483  120A  118A  	fcall	_tx
   631     05A9                     l1238:
   632                           
   633                           ;main.c: 38:         t2delay();
   634     05A9  120A  118A  24CE  120A  118A  	fcall	_t2delay
   635     05AE  2D79               	goto	l1226
   636     05AF  120A  118A  2800   	ljmp	start
   637     05B2                     __end_of_main:
   638                           
   639                           	psect	text1
   640     0499                     __ptext1:	
   641 ;; *************** function _uart_init *****************
   642 ;; Defined at:
   643 ;;		line 51 in file "main.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670     0499                     _uart_init:	
   671                           ;psect for function _uart_init
   672                           
   673     0499                     l1160:	
   674                           ;incstack = 0
   675                           ; Regs used in _uart_init: [wreg+status,2+status,0]
   676                           
   677                           
   678                           ;main.c: 52:     TRISC |= (1<<7);
   679     0499  1683               	bsf	3,5	;RP0=1, select bank1
   680     049A  1303               	bcf	3,6	;RP1=0, select bank1
   681     049B  1787               	bsf	7,7	;volatile
   682     049C                     l1162:
   683                           
   684                           ;main.c: 53:     TRISC &= ~(1<<6);
   685     049C  30BF               	movlw	191
   686     049D  0587               	andwf	7,f	;volatile
   687     049E                     l1164:
   688                           
   689                           ;main.c: 54:     TXSTA = 0x20;
   690     049E  3020               	movlw	32
   691     049F  0098               	movwf	24	;volatile
   692     04A0                     l1166:
   693                           
   694                           ;main.c: 55:     RCSTA = 0x90;
   695     04A0  3090               	movlw	144
   696     04A1  1283               	bcf	3,5	;RP0=0, select bank0
   697     04A2  1303               	bcf	3,6	;RP1=0, select bank0
   698     04A3  0098               	movwf	24	;volatile
   699     04A4                     l1168:
   700                           
   701                           ;main.c: 56:     SPBRG = 31;
   702     04A4  301F               	movlw	31
   703     04A5  1683               	bsf	3,5	;RP0=1, select bank1
   704     04A6  1303               	bcf	3,6	;RP1=0, select bank1
   705     04A7  0099               	movwf	25	;volatile
   706     04A8                     l73:
   707     04A8  0008               	return
   708     04A9                     __end_of_uart_init:
   709                           
   710                           	psect	text2
   711     04BA                     __ptext2:	
   712 ;; *************** function _txstr *****************
   713 ;; Defined at:
   714 ;;		line 62 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  b               1    1[COMMON] PTR unsigned char 
   717 ;;		 -> main@buffer(10), 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         1       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0
   732 ;;      Totals:         1       0       0       0       0
   733 ;;Total ram usage:        1 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 1
   736 ;; This function calls:
   737 ;;		_tx
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743     04BA                     _txstr:	
   744                           ;psect for function _txstr
   745                           
   746     04BA                     l1204:	
   747                           ;incstack = 0
   748                           ; Regs used in _txstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   749                           
   750                           
   751                           ;main.c: 63:     while(*b){
   752     04BA  2CC5               	goto	l1210
   753     04BB                     l1206:
   754                           
   755                           ;main.c: 64:         tx(*b++);
   756     04BB  0871               	movf	txstr@b,w
   757     04BC  0084               	movwf	4
   758     04BD  0800               	movf	0,w
   759     04BE  120A  118A  2483  120A  118A  	fcall	_tx
   760     04C3                     l1208:
   761     04C3  3001               	movlw	1
   762     04C4  07F1               	addwf	txstr@b,f
   763     04C5                     l1210:
   764                           
   765                           ;main.c: 63:     while(*b){
   766     04C5  0871               	movf	txstr@b,w
   767     04C6  0084               	movwf	4
   768     04C7  1383               	bcf	3,7	;select IRP bank0
   769     04C8  0800               	movf	0,w
   770     04C9  1D03               	btfss	3,2
   771     04CA  2CCC               	goto	u841
   772     04CB  2CCD               	goto	u840
   773     04CC                     u841:
   774     04CC  2CBB               	goto	l1206
   775     04CD                     u840:
   776     04CD                     l85:
   777     04CD  0008               	return
   778     04CE                     __end_of_txstr:
   779                           
   780                           	psect	text3
   781     0483                     __ptext3:	
   782 ;; *************** function _tx *****************
   783 ;; Defined at:
   784 ;;		line 58 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  a               1    wreg     unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  a               1    0[COMMON] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;;		_txstr
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812     0483                     _tx:	
   813                           ;psect for function _tx
   814                           
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _tx: [wreg]
   818                           ;tx@a stored from wreg
   819     0483  00F0               	movwf	tx@a
   820     0484                     l1142:
   821     0484                     l76:	
   822                           ;main.c: 59:     while(!TXIF);
   823                           
   824     0484  1283               	bcf	3,5	;RP0=0, select bank0
   825     0485  1303               	bcf	3,6	;RP1=0, select bank0
   826     0486  1E0C               	btfss	12,4	;volatile
   827     0487  2C89               	goto	u791
   828     0488  2C8A               	goto	u790
   829     0489                     u791:
   830     0489  2C84               	goto	l76
   831     048A                     u790:
   832     048A                     l1144:
   833                           
   834                           ;main.c: 60:     TXREG = a;
   835     048A  0870               	movf	tx@a,w
   836     048B  0099               	movwf	25	;volatile
   837     048C                     l79:
   838     048C  0008               	return
   839     048D                     __end_of_tx:
   840                           
   841                           	psect	text4
   842     0474                     __ptext4:	
   843 ;; *************** function _t_init *****************
   844 ;; Defined at:
   845 ;;		line 47 in file "main.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		None
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872     0474                     _t_init:	
   873                           ;psect for function _t_init
   874                           
   875     0474                     l1158:	
   876                           ;incstack = 0
   877                           ; Regs used in _t_init: []
   878                           
   879                           
   880                           ;main.c: 48:     T1CON = 0x31;
   881     0474  3031               	movlw	49
   882     0475  1283               	bcf	3,5	;RP0=0, select bank0
   883     0476  1303               	bcf	3,6	;RP1=0, select bank0
   884     0477  0090               	movwf	16	;volatile
   885                           
   886                           ;main.c: 49:     T2CON = 0x78;
   887     0478  3078               	movlw	120
   888     0479  0092               	movwf	18	;volatile
   889     047A                     l70:
   890     047A  0008               	return
   891     047B                     __end_of_t_init:
   892                           
   893                           	psect	text5
   894     04CE                     __ptext5:	
   895 ;; *************** function _t2delay *****************
   896 ;; Defined at:
   897 ;;		line 75 in file "main.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  i               2    0[COMMON] unsigned int 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         2       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         2       0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924     04CE                     _t2delay:	
   925                           ;psect for function _t2delay
   926                           
   927     04CE                     l1212:	
   928                           ;incstack = 0
   929                           ; Regs used in _t2delay: [wreg+status,2]
   930                           
   931                           
   932                           ;main.c: 76:     T2CON |= (1<<2);
   933     04CE  1283               	bcf	3,5	;RP0=0, select bank0
   934     04CF  1303               	bcf	3,6	;RP1=0, select bank0
   935     04D0  1512               	bsf	18,2	;volatile
   936     04D1                     l1214:
   937                           
   938                           ;main.c: 77:     for(unsigned int i = 0; i<(1220*5); i++){
   939     04D1  01F0               	clrf	t2delay@i
   940     04D2  01F1               	clrf	t2delay@i+1
   941     04D3                     l98:
   942     04D3  1C8C               	btfss	12,1	;volatile
   943     04D4  2CD6               	goto	u851
   944     04D5  2CD7               	goto	u850
   945     04D6                     u851:
   946     04D6  2CD3               	goto	l98
   947     04D7                     u850:
   948     04D7                     l100:
   949                           
   950                           ;main.c: 79:         TMR2IF = 0;
   951     04D7  108C               	bcf	12,1	;volatile
   952     04D8                     l1220:
   953                           
   954                           ;main.c: 80:     }
   955     04D8  3001               	movlw	1
   956     04D9  07F0               	addwf	t2delay@i,f
   957     04DA  1803               	skipnc
   958     04DB  0AF1               	incf	t2delay@i+1,f
   959     04DC  3000               	movlw	0
   960     04DD  07F1               	addwf	t2delay@i+1,f
   961     04DE  3017               	movlw	23
   962     04DF  0271               	subwf	t2delay@i+1,w
   963     04E0  30D4               	movlw	212
   964     04E1  1903               	skipnz
   965     04E2  0270               	subwf	t2delay@i,w
   966     04E3  1C03               	skipc
   967     04E4  2CE6               	goto	u861
   968     04E5  2CE7               	goto	u860
   969     04E6                     u861:
   970     04E6  2CD3               	goto	l98
   971     04E7                     u860:
   972     04E7                     l101:
   973     04E7  0008               	return
   974     04E8                     __end_of_t2delay:
   975                           
   976                           	psect	text6
   977     0503                     __ptext6:	
   978 ;; *************** function _t1delay *****************
   979 ;; Defined at:
   980 ;;		line 67 in file "main.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  i               2    0[COMMON] int 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, btemp+1
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   994 ;;      Params:         0       0       0       0       0
   995 ;;      Locals:         2       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0
   997 ;;      Totals:         2       0       0       0       0
   998 ;;Total ram usage:        2 bytes
   999 ;; Hardware stack levels used: 1
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007     0503                     _t1delay:	
  1008                           ;psect for function _t1delay
  1009                           
  1010     0503                     l1170:	
  1011                           ;incstack = 0
  1012                           ; Regs used in _t1delay: [wreg+status,2+btemp+1]
  1013                           
  1014                           
  1015                           ;main.c: 68:     for(int i = 0;i<(9*5);i++){
  1016     0503  01F0               	clrf	t1delay@i
  1017     0504  01F1               	clrf	t1delay@i+1
  1018     0505                     l1176:
  1019                           
  1020                           ;main.c: 69:         TMR1H=TMR1L=0;
  1021     0505  1283               	bcf	3,5	;RP0=0, select bank0
  1022     0506  1303               	bcf	3,6	;RP1=0, select bank0
  1023     0507  018E               	clrf	14	;volatile
  1024     0508  018F               	clrf	15	;volatile
  1025     0509                     l90:	
  1026                           ;main.c: 70:         while(!TMR1IF);
  1027                           
  1028     0509  1C0C               	btfss	12,0	;volatile
  1029     050A  2D0C               	goto	u811
  1030     050B  2D0D               	goto	u810
  1031     050C                     u811:
  1032     050C  2D09               	goto	l90
  1033     050D                     u810:
  1034     050D                     l92:
  1035                           
  1036                           ;main.c: 71:         TMR1IF=0;
  1037     050D  100C               	bcf	12,0	;volatile
  1038     050E                     l1178:
  1039                           
  1040                           ;main.c: 72:     }
  1041     050E  3001               	movlw	1
  1042     050F  07F0               	addwf	t1delay@i,f
  1043     0510  1803               	skipnc
  1044     0511  0AF1               	incf	t1delay@i+1,f
  1045     0512  3000               	movlw	0
  1046     0513  07F1               	addwf	t1delay@i+1,f
  1047     0514                     l1180:
  1048     0514  0871               	movf	t1delay@i+1,w
  1049     0515  3A80               	xorlw	128
  1050     0516  00FF               	movwf	btemp+1
  1051     0517  3080               	movlw	128
  1052     0518  027F               	subwf	btemp+1,w
  1053     0519  1D03               	skipz
  1054     051A  2D1D               	goto	u825
  1055     051B  302D               	movlw	45
  1056     051C  0270               	subwf	t1delay@i,w
  1057     051D                     u825:
  1058     051D  1C03               	skipc
  1059     051E  2D20               	goto	u821
  1060     051F  2D21               	goto	u820
  1061     0520                     u821:
  1062     0520  2D05               	goto	l1176
  1063     0521                     u820:
  1064     0521                     l93:
  1065     0521  0008               	return
  1066     0522                     __end_of_t1delay:
  1067                           
  1068                           	psect	text7
  1069     0522                     __ptext7:	
  1070 ;; *************** function _sprintf *****************
  1071 ;; Defined at:
  1072 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  s               1   17[BANK0 ] PTR unsigned char 
  1075 ;;		 -> main@buffer(10), 
  1076 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  1077 ;;		 -> STR_1(3), 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  f              11   23[BANK0 ] struct _IO_FILE
  1080 ;;  ret             2    0        int 
  1081 ;;  ap              1   22[BANK0 ] PTR void [1]
  1082 ;;		 -> ?_sprintf(2), 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  2   17[BANK0 ] int 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       4       0       0       0
  1093 ;;      Locals:         0      12       0       0       0
  1094 ;;      Temps:          0       1       0       0       0
  1095 ;;      Totals:         0      17       0       0       0
  1096 ;;Total ram usage:       17 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 4
  1099 ;; This function calls:
  1100 ;;		_vfprintf
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106     0522                     _sprintf:	
  1107                           ;psect for function _sprintf
  1108                           
  1109     0522                     l1190:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1112                           
  1113     0522  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1114     0523  1283               	bcf	3,5	;RP0=0, select bank0
  1115     0524  1303               	bcf	3,6	;RP1=0, select bank0
  1116     0525  00B6               	movwf	sprintf@ap
  1117     0526                     l1192:
  1118     0526  0831               	movf	sprintf@s,w
  1119     0527  00B7               	movwf	sprintf@f
  1120     0528  3000               	movlw	0
  1121     0529  00B8               	movwf	sprintf@f+1
  1122     052A                     l1194:
  1123     052A  01B9               	clrf	sprintf@f+2
  1124     052B  01BA               	clrf	sprintf@f+3
  1125     052C                     l1196:
  1126     052C  01C0               	clrf	sprintf@f+9
  1127     052D  01C1               	clrf	sprintf@f+10
  1128     052E                     l1198:
  1129     052E  3037               	movlw	low sprintf@f
  1130     052F  00AD               	movwf	vfprintf@fp
  1131     0530  3000               	movlw	high sprintf@f
  1132     0531  00AE               	movwf	vfprintf@fp+1
  1133     0532  0832               	movf	sprintf@fmt,w
  1134     0533  00AF               	movwf	vfprintf@fmt
  1135     0534  3036               	movlw	(low (sprintf@ap| 0))& (0+255)
  1136     0535  00B0               	movwf	vfprintf@ap
  1137     0536  120A  118A  2545  120A  118A  	fcall	_vfprintf
  1138     053B                     l1200:
  1139     053B  1283               	bcf	3,5	;RP0=0, select bank0
  1140     053C  1303               	bcf	3,6	;RP1=0, select bank0
  1141     053D  0839               	movf	sprintf@f+2,w
  1142     053E  0731               	addwf	sprintf@s,w
  1143     053F  00B5               	movwf	??_sprintf
  1144     0540  0835               	movf	??_sprintf,w
  1145     0541  0084               	movwf	4
  1146     0542  1383               	bcf	3,7	;select IRP bank0
  1147     0543  0180               	clrf	0
  1148     0544                     l656:
  1149     0544  0008               	return
  1150     0545                     __end_of_sprintf:
  1151                           
  1152                           	psect	text8
  1153     0545                     __ptext8:	
  1154 ;; *************** function _vfprintf *****************
  1155 ;; Defined at:
  1156 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1159 ;;		 -> sprintf@f(11), 
  1160 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  1161 ;;		 -> STR_1(3), 
  1162 ;;  ap              1   16[BANK0 ] PTR PTR void 
  1163 ;;		 -> sprintf@ap(1), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1166 ;;		 -> STR_1(3), 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2   13[BANK0 ] int 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       4       0       0       0
  1177 ;;      Locals:         1       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0
  1179 ;;      Totals:         1       4       0       0       0
  1180 ;;Total ram usage:        5 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 3
  1183 ;; This function calls:
  1184 ;;		_vfpfcnvrt
  1185 ;; This function is called by:
  1186 ;;		_sprintf
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190     0545                     _vfprintf:	
  1191                           ;psect for function _vfprintf
  1192                           
  1193     0545                     l1146:	
  1194                           ;incstack = 0
  1195                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1196                           
  1197                           
  1198                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1199     0545  1283               	bcf	3,5	;RP0=0, select bank0
  1200     0546  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0547  082F               	movf	vfprintf@fmt,w
  1202     0548  00FD               	movwf	vfprintf@cfmt
  1203                           
  1204                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1205     0549  2D59               	goto	l1150
  1206     054A                     l1148:
  1207                           
  1208                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1209     054A  1283               	bcf	3,5	;RP0=0, select bank0
  1210     054B  1303               	bcf	3,6	;RP1=0, select bank0
  1211     054C  082D               	movf	vfprintf@fp,w
  1212     054D  00A0               	movwf	vfpfcnvrt@fp
  1213     054E  082E               	movf	vfprintf@fp+1,w
  1214     054F  00A1               	movwf	vfpfcnvrt@fp+1
  1215     0550  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1216     0551  00A2               	movwf	vfpfcnvrt@fmt
  1217     0552  0830               	movf	vfprintf@ap,w
  1218     0553  00A3               	movwf	vfpfcnvrt@ap
  1219     0554  120A  118A  2706  120A  118A  	fcall	_vfpfcnvrt
  1220     0559                     l1150:
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1223     0559  087D               	movf	vfprintf@cfmt,w
  1224     055A  0084               	movwf	4
  1225     055B  120A  118A  2003  120A  118A  	fcall	stringdir
  1226     0560  3A00               	xorlw	0
  1227     0561  1D03               	skipz
  1228     0562  2D64               	goto	u801
  1229     0563  2D65               	goto	u800
  1230     0564                     u801:
  1231     0564  2D4A               	goto	l1148
  1232     0565                     u800:
  1233     0565                     l1152:
  1234                           
  1235                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1236     0565  1283               	bcf	3,5	;RP0=0, select bank0
  1237     0566  1303               	bcf	3,6	;RP1=0, select bank0
  1238     0567  01AD               	clrf	?_vfprintf
  1239     0568  01AE               	clrf	?_vfprintf+1
  1240     0569                     l700:
  1241     0569  0008               	return
  1242     056A                     __end_of_vfprintf:
  1243                           
  1244                           	psect	text9
  1245     0706                     __ptext9:	
  1246 ;; *************** function _vfpfcnvrt *****************
  1247 ;; Defined at:
  1248 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1251 ;;		 -> sprintf@f(11), 
  1252 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1253 ;;		 -> vfprintf@cfmt(1), 
  1254 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1255 ;;		 -> sprintf@ap(1), 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  convarg         4    8[BANK0 ] struct .
  1258 ;;  c               1   12[BANK0 ] unsigned char 
  1259 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  1260 ;;		 -> STR_1(3), 
  1261 ;;  done            1    6[BANK0 ] _Bool 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       4       0       0       0
  1272 ;;      Locals:         0       7       0       0       0
  1273 ;;      Temps:          0       2       0       0       0
  1274 ;;      Totals:         0      13       0       0       0
  1275 ;;Total ram usage:       13 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 2
  1278 ;; This function calls:
  1279 ;;		___awdiv
  1280 ;;		___awmod
  1281 ;;		_abs
  1282 ;;		_fputc
  1283 ;; This function is called by:
  1284 ;;		_vfprintf
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288     0706                     _vfpfcnvrt:	
  1289                           ;psect for function _vfpfcnvrt
  1290                           
  1291     0706                     l1090:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1294                           
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1297     0706  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0707  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0708  0822               	movf	vfpfcnvrt@fmt,w
  1300     0709  0084               	movwf	4
  1301     070A  0800               	movf	0,w
  1302     070B  0084               	movwf	4
  1303     070C  120A  118A  2003  120A  118A  	fcall	stringdir
  1304     0711  3A25               	xorlw	37
  1305     0712  1D03               	skipz
  1306     0713  2F15               	goto	u691
  1307     0714  2F16               	goto	u690
  1308     0715                     u691:
  1309     0715  2FD2               	goto	l1136
  1310     0716                     u690:
  1311     0716                     l1092:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1314     0716  0822               	movf	vfpfcnvrt@fmt,w
  1315     0717  0084               	movwf	4
  1316     0718  3001               	movlw	1
  1317     0719  0780               	addwf	0,f
  1318     071A                     l1094:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1321     071A  01CE               	clrf	_width
  1322     071B  01CF               	clrf	_width+1
  1323     071C  3000               	movlw	0
  1324     071D  00D2               	movwf	_flags
  1325     071E                     l1096:
  1326                           
  1327                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1328     071E  30FF               	movlw	255
  1329     071F  00D0               	movwf	_prec
  1330     0720  30FF               	movlw	255
  1331     0721  00D1               	movwf	_prec+1
  1332     0722                     l1098:
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1335     0722  0822               	movf	vfpfcnvrt@fmt,w
  1336     0723  0084               	movwf	4
  1337     0724  0800               	movf	0,w
  1338     0725  00A7               	movwf	vfpfcnvrt@cp
  1339     0726                     l1100:
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1342     0726  0827               	movf	vfpfcnvrt@cp,w
  1343     0727  0084               	movwf	4
  1344     0728  120A  118A  2003  120A  118A  	fcall	stringdir
  1345     072D  3A64               	xorlw	100
  1346     072E  1903               	skipnz
  1347     072F  2F31               	goto	u701
  1348     0730  2F32               	goto	u700
  1349     0731                     u701:
  1350     0731  2F3E               	goto	l1104
  1351     0732                     u700:
  1352     0732                     l1102:
  1353     0732  0827               	movf	vfpfcnvrt@cp,w
  1354     0733  0084               	movwf	4
  1355     0734  120A  118A  2003  120A  118A  	fcall	stringdir
  1356     0739  3A69               	xorlw	105
  1357     073A  1D03               	skipz
  1358     073B  2F3D               	goto	u711
  1359     073C  2F3E               	goto	u710
  1360     073D                     u711:
  1361     073D  2FCB               	goto	l1132
  1362     073E                     u710:
  1363     073E                     l1104:
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1366     073E  0823               	movf	vfpfcnvrt@ap,w
  1367     073F  0084               	movwf	4
  1368     0740  1383               	bcf	3,7	;select IRP bank0
  1369     0741  0800               	movf	0,w
  1370     0742  00FF               	movwf	btemp+1
  1371     0743  3002               	movlw	2
  1372     0744  0780               	addwf	0,f
  1373     0745  087F               	movf	btemp+1,w
  1374     0746  0084               	movwf	4
  1375     0747  0800               	movf	0,w
  1376     0748  00A8               	movwf	vfpfcnvrt@convarg
  1377     0749  0A84               	incf	4,f
  1378     074A  0800               	movf	0,w
  1379     074B  00A9               	movwf	vfpfcnvrt@convarg+1
  1380     074C                     l1106:
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1383     074C  0822               	movf	vfpfcnvrt@fmt,w
  1384     074D  0084               	movwf	4
  1385     074E  0827               	movf	vfpfcnvrt@cp,w
  1386     074F  3E01               	addlw	1
  1387     0750  0080               	movwf	0
  1388     0751                     l1108:
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1391     0751  3020               	movlw	32
  1392     0752  00AC               	movwf	vfpfcnvrt@c
  1393     0753                     l1110:
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1396     0753  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  1397     0754  2F56               	goto	u721
  1398     0755  2F58               	goto	u720
  1399     0756                     u721:
  1400     0756  3001               	movlw	1
  1401     0757  2F59               	goto	u730
  1402     0758                     u720:
  1403     0758  3000               	movlw	0
  1404     0759                     u730:
  1405     0759  00A6               	movwf	vfpfcnvrt@done
  1406     075A                     l1112:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1409     075A  3001               	movlw	1
  1410     075B  02AC               	subwf	vfpfcnvrt@c,f
  1411     075C  082C               	movf	vfpfcnvrt@c,w
  1412     075D  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1413     075E  0084               	movwf	4
  1414     075F  300A               	movlw	10
  1415     0760  00F0               	movwf	___awmod@divisor
  1416     0761  3000               	movlw	0
  1417     0762  00F1               	movwf	___awmod@divisor+1
  1418     0763  0829               	movf	vfpfcnvrt@convarg+1,w
  1419     0764  00F3               	movwf	___awmod@dividend+1
  1420     0765  0828               	movf	vfpfcnvrt@convarg,w
  1421     0766  00F2               	movwf	___awmod@dividend
  1422     0767  120A  118A  25B2  120A  118A  	fcall	___awmod
  1423     076C  0871               	movf	?___awmod+1,w
  1424     076D  00F7               	movwf	abs@a+1
  1425     076E  0870               	movf	?___awmod,w
  1426     076F  00F6               	movwf	abs@a
  1427     0770  120A  118A  24A9  120A  118A  	fcall	_abs
  1428     0775  0876               	movf	?_abs,w
  1429     0776  3E30               	addlw	48
  1430     0777  1383               	bcf	3,7	;select IRP bank1
  1431     0778  0080               	movwf	0
  1432     0779                     l1114:
  1433                           
  1434                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1435     0779  300A               	movlw	10
  1436     077A  00F0               	movwf	___awdiv@divisor
  1437     077B  3000               	movlw	0
  1438     077C  00F1               	movwf	___awdiv@divisor+1
  1439     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1440     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1441     077F  0829               	movf	vfpfcnvrt@convarg+1,w
  1442     0780  00F3               	movwf	___awdiv@dividend+1
  1443     0781  0828               	movf	vfpfcnvrt@convarg,w
  1444     0782  00F2               	movwf	___awdiv@dividend
  1445     0783  120A  118A  2609  120A  118A  	fcall	___awdiv
  1446     0788  0871               	movf	?___awdiv+1,w
  1447     0789  1283               	bcf	3,5	;RP0=0, select bank0
  1448     078A  1303               	bcf	3,6	;RP1=0, select bank0
  1449     078B  00A9               	movwf	vfpfcnvrt@convarg+1
  1450     078C  0870               	movf	?___awdiv,w
  1451     078D  00A8               	movwf	vfpfcnvrt@convarg
  1452     078E                     l1116:
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1455     078E  0828               	movf	vfpfcnvrt@convarg,w
  1456     078F  0429               	iorwf	vfpfcnvrt@convarg+1,w
  1457     0790  1903               	btfsc	3,2
  1458     0791  2F93               	goto	u741
  1459     0792  2F94               	goto	u740
  1460     0793                     u741:
  1461     0793  2F99               	goto	l1120
  1462     0794                     u740:
  1463     0794                     l1118:
  1464     0794  082C               	movf	vfpfcnvrt@c,w
  1465     0795  1D03               	btfss	3,2
  1466     0796  2F98               	goto	u751
  1467     0797  2F99               	goto	u750
  1468     0798                     u751:
  1469     0798  2F5A               	goto	l1112
  1470     0799                     u750:
  1471     0799                     l1120:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1474     0799  082C               	movf	vfpfcnvrt@c,w
  1475     079A  1903               	btfsc	3,2
  1476     079B  2F9D               	goto	u761
  1477     079C  2F9E               	goto	u760
  1478     079D                     u761:
  1479     079D  2FC4               	goto	l1130
  1480     079E                     u760:
  1481     079E                     l1122:
  1482     079E  0826               	movf	vfpfcnvrt@done,w
  1483     079F  1903               	btfsc	3,2
  1484     07A0  2FA2               	goto	u771
  1485     07A1  2FA3               	goto	u770
  1486     07A2                     u771:
  1487     07A2  2FC4               	goto	l1130
  1488     07A3                     u770:
  1489     07A3                     l1124:
  1490                           
  1491                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1492     07A3  3001               	movlw	1
  1493     07A4  02AC               	subwf	vfpfcnvrt@c,f
  1494     07A5  082C               	movf	vfpfcnvrt@c,w
  1495     07A6  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1496     07A7  0084               	movwf	4
  1497     07A8  302D               	movlw	45
  1498     07A9  1383               	bcf	3,7	;select IRP bank1
  1499     07AA  0080               	movwf	0
  1500     07AB  2FC4               	goto	l1130
  1501     07AC                     l1126:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1504     07AC  082C               	movf	vfpfcnvrt@c,w
  1505     07AD  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1506     07AE  0084               	movwf	4
  1507     07AF  1383               	bcf	3,7	;select IRP bank1
  1508     07B0  0800               	movf	0,w
  1509     07B1  00A4               	movwf	??_vfpfcnvrt
  1510     07B2  01A5               	clrf	??_vfpfcnvrt+1
  1511     07B3  0824               	movf	??_vfpfcnvrt,w
  1512     07B4  00F0               	movwf	fputc@c
  1513     07B5  0825               	movf	??_vfpfcnvrt+1,w
  1514     07B6  00F1               	movwf	fputc@c+1
  1515     07B7  0820               	movf	vfpfcnvrt@fp,w
  1516     07B8  00F2               	movwf	fputc@fp
  1517     07B9  0821               	movf	vfpfcnvrt@fp+1,w
  1518     07BA  00F3               	movwf	fputc@fp+1
  1519     07BB  120A  118A  266C  120A  118A  	fcall	_fputc
  1520     07C0                     l1128:
  1521     07C0  3001               	movlw	1
  1522     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1523     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1524     07C3  07AC               	addwf	vfpfcnvrt@c,f
  1525     07C4                     l1130:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1528     07C4  3020               	movlw	32
  1529     07C5  062C               	xorwf	vfpfcnvrt@c,w
  1530     07C6  1D03               	btfss	3,2
  1531     07C7  2FC9               	goto	u781
  1532     07C8  2FCA               	goto	u780
  1533     07C9                     u781:
  1534     07C9  2FAC               	goto	l1126
  1535     07CA                     u780:
  1536     07CA  2FEB               	goto	l694
  1537     07CB                     l1132:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1540     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1541     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1542     07CD  0822               	movf	vfpfcnvrt@fmt,w
  1543     07CE  0084               	movwf	4
  1544     07CF  3001               	movlw	1
  1545     07D0  0780               	addwf	0,f
  1546     07D1  2FEB               	goto	l694
  1547     07D2                     l1136:
  1548                           
  1549                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1550     07D2  0822               	movf	vfpfcnvrt@fmt,w
  1551     07D3  0084               	movwf	4
  1552     07D4  0800               	movf	0,w
  1553     07D5  0084               	movwf	4
  1554     07D6  120A  118A  2003  120A  118A  	fcall	stringdir
  1555     07DB  00A4               	movwf	??_vfpfcnvrt
  1556     07DC  01A5               	clrf	??_vfpfcnvrt+1
  1557     07DD  0824               	movf	??_vfpfcnvrt,w
  1558     07DE  00F0               	movwf	fputc@c
  1559     07DF  0825               	movf	??_vfpfcnvrt+1,w
  1560     07E0  00F1               	movwf	fputc@c+1
  1561     07E1  0820               	movf	vfpfcnvrt@fp,w
  1562     07E2  00F2               	movwf	fputc@fp
  1563     07E3  0821               	movf	vfpfcnvrt@fp+1,w
  1564     07E4  00F3               	movwf	fputc@fp+1
  1565     07E5  120A  118A  266C  120A  118A  	fcall	_fputc
  1566     07EA  2FCB               	goto	l1132
  1567     07EB                     l694:
  1568     07EB  0008               	return
  1569     07EC                     __end_of_vfpfcnvrt:
  1570                           
  1571                           	psect	text10
  1572     066C                     __ptext10:	
  1573 ;; *************** function _fputc *****************
  1574 ;; Defined at:
  1575 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  c               2    0[COMMON] int 
  1578 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1579 ;;		 -> sprintf@f(11), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    0[COMMON] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         4       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0
  1593 ;;      Temps:          9       0       0       0       0
  1594 ;;      Totals:        13       0       0       0       0
  1595 ;;Total ram usage:       13 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 1
  1598 ;; This function calls:
  1599 ;;		_putch
  1600 ;; This function is called by:
  1601 ;;		_vfpfcnvrt
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605     066C                     _fputc:	
  1606                           ;psect for function _fputc
  1607                           
  1608     066C                     l1068:	
  1609                           ;incstack = 0
  1610                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1611                           
  1612     066C  0872               	movf	fputc@fp,w
  1613     066D  0473               	iorwf	fputc@fp+1,w
  1614     066E  1903               	btfsc	3,2
  1615     066F  2E71               	goto	u631
  1616     0670  2E72               	goto	u630
  1617     0671                     u631:
  1618     0671  2E78               	goto	l1072
  1619     0672                     u630:
  1620     0672                     l1070:
  1621     0672  0872               	movf	fputc@fp,w
  1622     0673  0473               	iorwf	fputc@fp+1,w
  1623     0674  1D03               	btfss	3,2
  1624     0675  2E77               	goto	u641
  1625     0676  2E78               	goto	u640
  1626     0677                     u641:
  1627     0677  2E7F               	goto	l1074
  1628     0678                     u640:
  1629     0678                     l1072:
  1630     0678  0870               	movf	fputc@c,w
  1631     0679  120A  118A  2473  120A  118A  	fcall	_putch
  1632     067E  2F05               	goto	l719
  1633     067F                     l1074:
  1634     067F  0872               	movf	fputc@fp,w
  1635     0680  3E09               	addlw	9
  1636     0681  00F4               	movwf	??_fputc
  1637     0682  0873               	movf	fputc@fp+1,w
  1638     0683  1803               	skipnc
  1639     0684  3E01               	addlw	1
  1640     0685  3E00               	addlw	0
  1641     0686  00F5               	movwf	??_fputc+1
  1642     0687  0874               	movf	??_fputc,w
  1643     0688  0084               	movwf	4
  1644     0689  1783               	bsf	3,7
  1645     068A  1C75               	btfss	??_fputc+1,0
  1646     068B  1383               	bcf	3,7
  1647     068C  0800               	movf	0,w
  1648     068D  00F6               	movwf	??_fputc+2
  1649     068E  0A84               	incf	4,f
  1650     068F  0800               	movf	0,w
  1651     0690  00F7               	movwf	??_fputc+3
  1652     0691  0876               	movf	??_fputc+2,w
  1653     0692  0477               	iorwf	??_fputc+3,w
  1654     0693  1903               	btfsc	3,2
  1655     0694  2E96               	goto	u651
  1656     0695  2E97               	goto	u650
  1657     0696                     u651:
  1658     0696  2EC9               	goto	l1078
  1659     0697                     u650:
  1660     0697                     l1076:
  1661     0697  0872               	movf	fputc@fp,w
  1662     0698  3E09               	addlw	9
  1663     0699  00F4               	movwf	??_fputc
  1664     069A  0873               	movf	fputc@fp+1,w
  1665     069B  1803               	skipnc
  1666     069C  3E01               	addlw	1
  1667     069D  3E00               	addlw	0
  1668     069E  00F5               	movwf	??_fputc+1
  1669     069F  0874               	movf	??_fputc,w
  1670     06A0  0084               	movwf	4
  1671     06A1  1783               	bsf	3,7
  1672     06A2  1C75               	btfss	??_fputc+1,0
  1673     06A3  1383               	bcf	3,7
  1674     06A4  0800               	movf	0,w
  1675     06A5  00F6               	movwf	??_fputc+2
  1676     06A6  0A84               	incf	4,f
  1677     06A7  0800               	movf	0,w
  1678     06A8  00F7               	movwf	??_fputc+3
  1679     06A9  0872               	movf	fputc@fp,w
  1680     06AA  3E02               	addlw	2
  1681     06AB  00F8               	movwf	??_fputc+4
  1682     06AC  0873               	movf	fputc@fp+1,w
  1683     06AD  1803               	skipnc
  1684     06AE  3E01               	addlw	1
  1685     06AF  3E00               	addlw	0
  1686     06B0  00F9               	movwf	??_fputc+5
  1687     06B1  0878               	movf	??_fputc+4,w
  1688     06B2  0084               	movwf	4
  1689     06B3  1783               	bsf	3,7
  1690     06B4  1C79               	btfss	??_fputc+5,0
  1691     06B5  1383               	bcf	3,7
  1692     06B6  0800               	movf	0,w
  1693     06B7  00FA               	movwf	??_fputc+6
  1694     06B8  0A84               	incf	4,f
  1695     06B9  0800               	movf	0,w
  1696     06BA  00FB               	movwf	??_fputc+7
  1697     06BB  087B               	movf	??_fputc+7,w
  1698     06BC  3A80               	xorlw	128
  1699     06BD  00FC               	movwf	??_fputc+8
  1700     06BE  0877               	movf	??_fputc+3,w
  1701     06BF  3A80               	xorlw	128
  1702     06C0  027C               	subwf	??_fputc+8,w
  1703     06C1  1D03               	skipz
  1704     06C2  2EC5               	goto	u665
  1705     06C3  0876               	movf	??_fputc+2,w
  1706     06C4  027A               	subwf	??_fputc+6,w
  1707     06C5                     u665:
  1708     06C5  1803               	skipnc
  1709     06C6  2EC8               	goto	u661
  1710     06C7  2EC9               	goto	u660
  1711     06C8                     u661:
  1712     06C8  2F05               	goto	l719
  1713     06C9                     u660:
  1714     06C9                     l1078:
  1715     06C9  0872               	movf	fputc@fp,w
  1716     06CA  0084               	movwf	4
  1717     06CB  1783               	bsf	3,7
  1718     06CC  1C73               	btfss	fputc@fp+1,0
  1719     06CD  1383               	bcf	3,7
  1720     06CE  0800               	movf	0,w
  1721     06CF  00F4               	movwf	??_fputc
  1722     06D0  0A84               	incf	4,f
  1723     06D1  0800               	movf	0,w
  1724     06D2  00F5               	movwf	??_fputc+1
  1725     06D3  0872               	movf	fputc@fp,w
  1726     06D4  3E02               	addlw	2
  1727     06D5  00F6               	movwf	??_fputc+2
  1728     06D6  0873               	movf	fputc@fp+1,w
  1729     06D7  1803               	skipnc
  1730     06D8  3E01               	addlw	1
  1731     06D9  3E00               	addlw	0
  1732     06DA  00F7               	movwf	??_fputc+3
  1733     06DB  0876               	movf	??_fputc+2,w
  1734     06DC  0084               	movwf	4
  1735     06DD  1783               	bsf	3,7
  1736     06DE  1C77               	btfss	??_fputc+3,0
  1737     06DF  1383               	bcf	3,7
  1738     06E0  0800               	movf	0,w
  1739     06E1  0774               	addwf	??_fputc,w
  1740     06E2  00F9               	movwf	??_fputc+5
  1741     06E3  0875               	movf	??_fputc+1,w
  1742     06E4  00F8               	movwf	??_fputc+4
  1743     06E5  1803               	skipnc
  1744     06E6  0AF8               	incf	??_fputc+4,f
  1745     06E7  1F80               	btfss	0,7
  1746     06E8  2EEA               	goto	u670
  1747     06E9  03F8               	decf	??_fputc+4,f
  1748     06EA                     u670:
  1749     06EA  0878               	movf	??_fputc+4,w
  1750     06EB  00FA               	movwf	??_fputc+6
  1751     06EC  0879               	movf	??_fputc+5,w
  1752     06ED  0084               	movwf	4
  1753     06EE  1783               	bsf	3,7
  1754     06EF  1C7A               	btfss	??_fputc+6,0
  1755     06F0  1383               	bcf	3,7
  1756     06F1  0870               	movf	fputc@c,w
  1757     06F2  0080               	movwf	0
  1758     06F3  0872               	movf	fputc@fp,w
  1759     06F4  3E02               	addlw	2
  1760     06F5  00F4               	movwf	??_fputc
  1761     06F6  0873               	movf	fputc@fp+1,w
  1762     06F7  1803               	skipnc
  1763     06F8  3E01               	addlw	1
  1764     06F9  3E00               	addlw	0
  1765     06FA  00F5               	movwf	??_fputc+1
  1766     06FB  0874               	movf	??_fputc,w
  1767     06FC  0084               	movwf	4
  1768     06FD  1783               	bsf	3,7
  1769     06FE  1C75               	btfss	??_fputc+1,0
  1770     06FF  1383               	bcf	3,7
  1771     0700  3001               	movlw	1
  1772     0701  0780               	addwf	0,f
  1773     0702  0A84               	incf	4,f
  1774     0703  1803               	skipnc
  1775     0704  0A80               	incf	0,f
  1776     0705                     l719:
  1777     0705  0008               	return
  1778     0706                     __end_of_fputc:
  1779                           
  1780                           	psect	text11
  1781     0473                     __ptext11:	
  1782 ;; *************** function _putch *****************
  1783 ;; Defined at:
  1784 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  c               1    wreg     unsigned char 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  c               1    0[COMMON] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used: 1
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_fputc
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811     0473                     _putch:	
  1812                           ;psect for function _putch
  1813                           
  1814     0473                     l730:	
  1815                           ;incstack = 0
  1816                           ; Regs used in _putch: [wreg]
  1817                           
  1818     0473  0008               	return
  1819     0474                     __end_of_putch:
  1820                           
  1821                           	psect	text12
  1822     04A9                     __ptext12:	
  1823 ;; *************** function _abs *****************
  1824 ;; Defined at:
  1825 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  a               2    6[COMMON] int 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2    6[COMMON] int 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         2       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0
  1841 ;;      Temps:          2       0       0       0       0
  1842 ;;      Totals:         4       0       0       0       0
  1843 ;;Total ram usage:        4 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_vfpfcnvrt
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852     04A9                     _abs:	
  1853                           ;psect for function _abs
  1854                           
  1855     04A9                     l1082:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _abs: [wreg+status,2+status,0]
  1858                           
  1859     04A9  1BF7               	btfsc	abs@a+1,7
  1860     04AA  2CAC               	goto	u681
  1861     04AB  2CAD               	goto	u680
  1862     04AC                     u681:
  1863     04AC  2CAE               	goto	l1086
  1864     04AD                     u680:
  1865     04AD                     l1084:
  1866     04AD  2CB9               	goto	l707
  1867     04AE                     l1086:
  1868     04AE  0976               	comf	abs@a,w
  1869     04AF  00F8               	movwf	??_abs
  1870     04B0  0977               	comf	abs@a+1,w
  1871     04B1  00F9               	movwf	??_abs+1
  1872     04B2  0AF8               	incf	??_abs,f
  1873     04B3  1903               	skipnz
  1874     04B4  0AF9               	incf	??_abs+1,f
  1875     04B5  0878               	movf	??_abs,w
  1876     04B6  00F6               	movwf	?_abs
  1877     04B7  0879               	movf	??_abs+1,w
  1878     04B8  00F7               	movwf	?_abs+1
  1879     04B9                     l707:
  1880     04B9  0008               	return
  1881     04BA                     __end_of_abs:
  1882                           
  1883                           	psect	text13
  1884     05B2                     __ptext13:	
  1885 ;; *************** function ___awmod *****************
  1886 ;; Defined at:
  1887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  divisor         2    0[COMMON] int 
  1890 ;;  dividend        2    2[COMMON] int 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  sign            1    5[COMMON] unsigned char 
  1893 ;;  counter         1    4[COMMON] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2    0[COMMON] int 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         4       0       0       0       0
  1904 ;;      Locals:         2       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         6       0       0       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_vfpfcnvrt
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     05B2                     ___awmod:	
  1917                           ;psect for function ___awmod
  1918                           
  1919     05B2                     l1030:	
  1920                           ;incstack = 0
  1921                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1922                           
  1923     05B2  01F5               	clrf	___awmod@sign
  1924     05B3                     l1032:
  1925     05B3  1FF3               	btfss	___awmod@dividend+1,7
  1926     05B4  2DB6               	goto	u541
  1927     05B5  2DB7               	goto	u540
  1928     05B6                     u541:
  1929     05B6  2DBE               	goto	l1038
  1930     05B7                     u540:
  1931     05B7                     l1034:
  1932     05B7  09F2               	comf	___awmod@dividend,f
  1933     05B8  09F3               	comf	___awmod@dividend+1,f
  1934     05B9  0AF2               	incf	___awmod@dividend,f
  1935     05BA  1903               	skipnz
  1936     05BB  0AF3               	incf	___awmod@dividend+1,f
  1937     05BC                     l1036:
  1938     05BC  3001               	movlw	1
  1939     05BD  00F5               	movwf	___awmod@sign
  1940     05BE                     l1038:
  1941     05BE  1FF1               	btfss	___awmod@divisor+1,7
  1942     05BF  2DC1               	goto	u551
  1943     05C0  2DC2               	goto	u550
  1944     05C1                     u551:
  1945     05C1  2DC7               	goto	l1042
  1946     05C2                     u550:
  1947     05C2                     l1040:
  1948     05C2  09F0               	comf	___awmod@divisor,f
  1949     05C3  09F1               	comf	___awmod@divisor+1,f
  1950     05C4  0AF0               	incf	___awmod@divisor,f
  1951     05C5  1903               	skipnz
  1952     05C6  0AF1               	incf	___awmod@divisor+1,f
  1953     05C7                     l1042:
  1954     05C7  0870               	movf	___awmod@divisor,w
  1955     05C8  0471               	iorwf	___awmod@divisor+1,w
  1956     05C9  1903               	btfsc	3,2
  1957     05CA  2DCC               	goto	u561
  1958     05CB  2DCD               	goto	u560
  1959     05CC                     u561:
  1960     05CC  2DFA               	goto	l1060
  1961     05CD                     u560:
  1962     05CD                     l1044:
  1963     05CD  3001               	movlw	1
  1964     05CE  00F4               	movwf	___awmod@counter
  1965     05CF  2DD9               	goto	l1050
  1966     05D0                     l1046:
  1967     05D0  3001               	movlw	1
  1968     05D1                     u575:
  1969     05D1  1003               	clrc
  1970     05D2  0DF0               	rlf	___awmod@divisor,f
  1971     05D3  0DF1               	rlf	___awmod@divisor+1,f
  1972     05D4  3EFF               	addlw	-1
  1973     05D5  1D03               	skipz
  1974     05D6  2DD1               	goto	u575
  1975     05D7                     l1048:
  1976     05D7  3001               	movlw	1
  1977     05D8  07F4               	addwf	___awmod@counter,f
  1978     05D9                     l1050:
  1979     05D9  1FF1               	btfss	___awmod@divisor+1,7
  1980     05DA  2DDC               	goto	u581
  1981     05DB  2DDD               	goto	u580
  1982     05DC                     u581:
  1983     05DC  2DD0               	goto	l1046
  1984     05DD                     u580:
  1985     05DD                     l1052:
  1986     05DD  0871               	movf	___awmod@divisor+1,w
  1987     05DE  0273               	subwf	___awmod@dividend+1,w
  1988     05DF  1D03               	skipz
  1989     05E0  2DE3               	goto	u595
  1990     05E1  0870               	movf	___awmod@divisor,w
  1991     05E2  0272               	subwf	___awmod@dividend,w
  1992     05E3                     u595:
  1993     05E3  1C03               	skipc
  1994     05E4  2DE6               	goto	u591
  1995     05E5  2DE7               	goto	u590
  1996     05E6                     u591:
  1997     05E6  2DED               	goto	l1056
  1998     05E7                     u590:
  1999     05E7                     l1054:
  2000     05E7  0870               	movf	___awmod@divisor,w
  2001     05E8  02F2               	subwf	___awmod@dividend,f
  2002     05E9  0871               	movf	___awmod@divisor+1,w
  2003     05EA  1C03               	skipc
  2004     05EB  03F3               	decf	___awmod@dividend+1,f
  2005     05EC  02F3               	subwf	___awmod@dividend+1,f
  2006     05ED                     l1056:
  2007     05ED  3001               	movlw	1
  2008     05EE                     u605:
  2009     05EE  1003               	clrc
  2010     05EF  0CF1               	rrf	___awmod@divisor+1,f
  2011     05F0  0CF0               	rrf	___awmod@divisor,f
  2012     05F1  3EFF               	addlw	-1
  2013     05F2  1D03               	skipz
  2014     05F3  2DEE               	goto	u605
  2015     05F4                     l1058:
  2016     05F4  3001               	movlw	1
  2017     05F5  02F4               	subwf	___awmod@counter,f
  2018     05F6  1D03               	btfss	3,2
  2019     05F7  2DF9               	goto	u611
  2020     05F8  2DFA               	goto	u610
  2021     05F9                     u611:
  2022     05F9  2DDD               	goto	l1052
  2023     05FA                     u610:
  2024     05FA                     l1060:
  2025     05FA  0875               	movf	___awmod@sign,w
  2026     05FB  1903               	btfsc	3,2
  2027     05FC  2DFE               	goto	u621
  2028     05FD  2DFF               	goto	u620
  2029     05FE                     u621:
  2030     05FE  2E04               	goto	l1064
  2031     05FF                     u620:
  2032     05FF                     l1062:
  2033     05FF  09F2               	comf	___awmod@dividend,f
  2034     0600  09F3               	comf	___awmod@dividend+1,f
  2035     0601  0AF2               	incf	___awmod@dividend,f
  2036     0602  1903               	skipnz
  2037     0603  0AF3               	incf	___awmod@dividend+1,f
  2038     0604                     l1064:
  2039     0604  0873               	movf	___awmod@dividend+1,w
  2040     0605  00F1               	movwf	?___awmod+1
  2041     0606  0872               	movf	___awmod@dividend,w
  2042     0607  00F0               	movwf	?___awmod
  2043     0608                     l359:
  2044     0608  0008               	return
  2045     0609                     __end_of___awmod:
  2046                           
  2047                           	psect	text14
  2048     0609                     __ptext14:	
  2049 ;; *************** function ___awdiv *****************
  2050 ;; Defined at:
  2051 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  divisor         2    0[COMMON] int 
  2054 ;;  dividend        2    2[COMMON] int 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  quotient        2    6[COMMON] int 
  2057 ;;  sign            1    5[COMMON] unsigned char 
  2058 ;;  counter         1    4[COMMON] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    0[COMMON] int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2068 ;;      Params:         4       0       0       0       0
  2069 ;;      Locals:         4       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0
  2071 ;;      Totals:         8       0       0       0       0
  2072 ;;Total ram usage:        8 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_vfpfcnvrt
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081     0609                     ___awdiv:	
  2082                           ;psect for function ___awdiv
  2083                           
  2084     0609                     l986:	
  2085                           ;incstack = 0
  2086                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2087                           
  2088     0609  01F5               	clrf	___awdiv@sign
  2089     060A                     l988:
  2090     060A  1FF1               	btfss	___awdiv@divisor+1,7
  2091     060B  2E0D               	goto	u441
  2092     060C  2E0E               	goto	u440
  2093     060D                     u441:
  2094     060D  2E15               	goto	l994
  2095     060E                     u440:
  2096     060E                     l990:
  2097     060E  09F0               	comf	___awdiv@divisor,f
  2098     060F  09F1               	comf	___awdiv@divisor+1,f
  2099     0610  0AF0               	incf	___awdiv@divisor,f
  2100     0611  1903               	skipnz
  2101     0612  0AF1               	incf	___awdiv@divisor+1,f
  2102     0613                     l992:
  2103     0613  3001               	movlw	1
  2104     0614  00F5               	movwf	___awdiv@sign
  2105     0615                     l994:
  2106     0615  1FF3               	btfss	___awdiv@dividend+1,7
  2107     0616  2E18               	goto	u451
  2108     0617  2E19               	goto	u450
  2109     0618                     u451:
  2110     0618  2E20               	goto	l1000
  2111     0619                     u450:
  2112     0619                     l996:
  2113     0619  09F2               	comf	___awdiv@dividend,f
  2114     061A  09F3               	comf	___awdiv@dividend+1,f
  2115     061B  0AF2               	incf	___awdiv@dividend,f
  2116     061C  1903               	skipnz
  2117     061D  0AF3               	incf	___awdiv@dividend+1,f
  2118     061E                     l998:
  2119     061E  3001               	movlw	1
  2120     061F  06F5               	xorwf	___awdiv@sign,f
  2121     0620                     l1000:
  2122     0620  01F6               	clrf	___awdiv@quotient
  2123     0621  01F7               	clrf	___awdiv@quotient+1
  2124     0622                     l1002:
  2125     0622  0870               	movf	___awdiv@divisor,w
  2126     0623  0471               	iorwf	___awdiv@divisor+1,w
  2127     0624  1903               	btfsc	3,2
  2128     0625  2E27               	goto	u461
  2129     0626  2E28               	goto	u460
  2130     0627                     u461:
  2131     0627  2E5D               	goto	l1022
  2132     0628                     u460:
  2133     0628                     l1004:
  2134     0628  3001               	movlw	1
  2135     0629  00F4               	movwf	___awdiv@counter
  2136     062A  2E34               	goto	l1010
  2137     062B                     l1006:
  2138     062B  3001               	movlw	1
  2139     062C                     u475:
  2140     062C  1003               	clrc
  2141     062D  0DF0               	rlf	___awdiv@divisor,f
  2142     062E  0DF1               	rlf	___awdiv@divisor+1,f
  2143     062F  3EFF               	addlw	-1
  2144     0630  1D03               	skipz
  2145     0631  2E2C               	goto	u475
  2146     0632                     l1008:
  2147     0632  3001               	movlw	1
  2148     0633  07F4               	addwf	___awdiv@counter,f
  2149     0634                     l1010:
  2150     0634  1FF1               	btfss	___awdiv@divisor+1,7
  2151     0635  2E37               	goto	u481
  2152     0636  2E38               	goto	u480
  2153     0637                     u481:
  2154     0637  2E2B               	goto	l1006
  2155     0638                     u480:
  2156     0638                     l1012:
  2157     0638  3001               	movlw	1
  2158     0639                     u495:
  2159     0639  1003               	clrc
  2160     063A  0DF6               	rlf	___awdiv@quotient,f
  2161     063B  0DF7               	rlf	___awdiv@quotient+1,f
  2162     063C  3EFF               	addlw	-1
  2163     063D  1D03               	skipz
  2164     063E  2E39               	goto	u495
  2165     063F  0871               	movf	___awdiv@divisor+1,w
  2166     0640  0273               	subwf	___awdiv@dividend+1,w
  2167     0641  1D03               	skipz
  2168     0642  2E45               	goto	u505
  2169     0643  0870               	movf	___awdiv@divisor,w
  2170     0644  0272               	subwf	___awdiv@dividend,w
  2171     0645                     u505:
  2172     0645  1C03               	skipc
  2173     0646  2E48               	goto	u501
  2174     0647  2E49               	goto	u500
  2175     0648                     u501:
  2176     0648  2E50               	goto	l1018
  2177     0649                     u500:
  2178     0649                     l1014:
  2179     0649  0870               	movf	___awdiv@divisor,w
  2180     064A  02F2               	subwf	___awdiv@dividend,f
  2181     064B  0871               	movf	___awdiv@divisor+1,w
  2182     064C  1C03               	skipc
  2183     064D  03F3               	decf	___awdiv@dividend+1,f
  2184     064E  02F3               	subwf	___awdiv@dividend+1,f
  2185     064F                     l1016:
  2186     064F  1476               	bsf	___awdiv@quotient,0
  2187     0650                     l1018:
  2188     0650  3001               	movlw	1
  2189     0651                     u515:
  2190     0651  1003               	clrc
  2191     0652  0CF1               	rrf	___awdiv@divisor+1,f
  2192     0653  0CF0               	rrf	___awdiv@divisor,f
  2193     0654  3EFF               	addlw	-1
  2194     0655  1D03               	skipz
  2195     0656  2E51               	goto	u515
  2196     0657                     l1020:
  2197     0657  3001               	movlw	1
  2198     0658  02F4               	subwf	___awdiv@counter,f
  2199     0659  1D03               	btfss	3,2
  2200     065A  2E5C               	goto	u521
  2201     065B  2E5D               	goto	u520
  2202     065C                     u521:
  2203     065C  2E38               	goto	l1012
  2204     065D                     u520:
  2205     065D                     l1022:
  2206     065D  0875               	movf	___awdiv@sign,w
  2207     065E  1903               	btfsc	3,2
  2208     065F  2E61               	goto	u531
  2209     0660  2E62               	goto	u530
  2210     0661                     u531:
  2211     0661  2E67               	goto	l1026
  2212     0662                     u530:
  2213     0662                     l1024:
  2214     0662  09F6               	comf	___awdiv@quotient,f
  2215     0663  09F7               	comf	___awdiv@quotient+1,f
  2216     0664  0AF6               	incf	___awdiv@quotient,f
  2217     0665  1903               	skipnz
  2218     0666  0AF7               	incf	___awdiv@quotient+1,f
  2219     0667                     l1026:
  2220     0667  0877               	movf	___awdiv@quotient+1,w
  2221     0668  00F1               	movwf	?___awdiv+1
  2222     0669  0876               	movf	___awdiv@quotient,w
  2223     066A  00F0               	movwf	?___awdiv
  2224     066B                     l346:
  2225     066B  0008               	return
  2226     066C                     __end_of___awdiv:
  2227                           
  2228                           	psect	text15
  2229     048D                     __ptext15:	
  2230 ;; *************** function _adc_init *****************
  2231 ;; Defined at:
  2232 ;;		line 42 in file "main.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		None
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0
  2249 ;;      Totals:         0       0       0       0       0
  2250 ;;Total ram usage:        0 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_main
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259     048D                     _adc_init:	
  2260                           ;psect for function _adc_init
  2261                           
  2262     048D                     l1156:	
  2263                           ;incstack = 0
  2264                           ; Regs used in _adc_init: []
  2265                           
  2266                           
  2267                           ;main.c: 43:     TRISA |= (1<<0);
  2268     048D  1683               	bsf	3,5	;RP0=1, select bank1
  2269     048E  1303               	bcf	3,6	;RP1=0, select bank1
  2270     048F  1405               	bsf	5,0	;volatile
  2271                           
  2272                           ;main.c: 44:     ADCON0 = 0x41;
  2273     0490  3041               	movlw	65
  2274     0491  1283               	bcf	3,5	;RP0=0, select bank0
  2275     0492  1303               	bcf	3,6	;RP1=0, select bank0
  2276     0493  009F               	movwf	31	;volatile
  2277                           
  2278                           ;main.c: 45:     ADCON1 = 0x80;
  2279     0494  3080               	movlw	128
  2280     0495  1683               	bsf	3,5	;RP0=1, select bank1
  2281     0496  1303               	bcf	3,6	;RP1=0, select bank1
  2282     0497  009F               	movwf	31	;volatile
  2283     0498                     l67:
  2284     0498  0008               	return
  2285     0499                     __end_of_adc_init:
  2286                           
  2287                           	psect	text16
  2288     04E8                     __ptext16:	
  2289 ;; *************** function _adc *****************
  2290 ;; Defined at:
  2291 ;;		line 82 in file "main.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;		None
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  adcvalue        2    4[COMMON] unsigned int 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    0[COMMON] unsigned int 
  2298 ;; Registers used:
  2299 ;;		wreg
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         2       0       0       0       0
  2306 ;;      Locals:         2       0       0       0       0
  2307 ;;      Temps:          2       0       0       0       0
  2308 ;;      Totals:         6       0       0       0       0
  2309 ;;Total ram usage:        6 bytes
  2310 ;; Hardware stack levels used: 1
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318     04E8                     _adc:	
  2319                           ;psect for function _adc
  2320                           
  2321     04E8                     l1182:	
  2322                           ;incstack = 0
  2323                           ; Regs used in _adc: [wreg]
  2324                           
  2325                           
  2326                           ;main.c: 83:     unsigned int adcvalue;;main.c: 84:     _delay((unsigned long)((2)*(2000
      +                          0000/4000.0)));
  2327     04E8  300D               	movlw	13
  2328     04E9  00F3               	movwf	??_adc+1
  2329     04EA  30FB               	movlw	251
  2330     04EB  00F2               	movwf	??_adc
  2331     04EC                     u877:
  2332     04EC  0BF2               	decfsz	??_adc,f
  2333     04ED  2CEC               	goto	u877
  2334     04EE  0BF3               	decfsz	??_adc+1,f
  2335     04EF  2CEC               	goto	u877
  2336     04F0  2CF1               	nop2
  2337     04F1                     l1184:
  2338                           
  2339                           ;main.c: 85:     ADCON0bits.GO_nDONE = 1;
  2340     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2341     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2342     04F3  151F               	bsf	31,2	;volatile
  2343     04F4                     l104:	
  2344                           ;main.c: 87:     while(ADCON0bits.GO_nDONE);
  2345                           
  2346     04F4  191F               	btfsc	31,2	;volatile
  2347     04F5  2CF7               	goto	u831
  2348     04F6  2CF8               	goto	u830
  2349     04F7                     u831:
  2350     04F7  2CF4               	goto	l104
  2351     04F8                     u830:
  2352     04F8                     l1186:
  2353                           
  2354                           ;main.c: 88:     adcvalue = (ADRESH << 8) | ADRESL;
  2355     04F8  081E               	movf	30,w	;volatile
  2356     04F9  00F5               	movwf	adc@adcvalue+1
  2357     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2358     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2359     04FC  081E               	movf	30,w	;volatile
  2360     04FD  00F4               	movwf	adc@adcvalue
  2361                           
  2362                           ;main.c: 89:     return adcvalue;
  2363     04FE  0875               	movf	adc@adcvalue+1,w
  2364     04FF  00F1               	movwf	?_adc+1
  2365     0500  0874               	movf	adc@adcvalue,w
  2366     0501  00F0               	movwf	?_adc
  2367     0502                     l107:
  2368     0502  0008               	return
  2369     0503                     __end_of_adc:
  2370     0002                     ___latbits      equ	2
  2371     007E                     btemp           set	126	;btemp
  2372     007E                     wtemp0          set	126
  2373                           
  2374                           	psect	config
  2375                           
  2376                           ;Config register CONFIG @ 0x2007
  2377                           ;	Oscillator Selection bits
  2378                           ;	FOSC = HS, HS oscillator
  2379                           ;	Watchdog Timer Enable bit
  2380                           ;	WDTE = OFF, WDT disabled
  2381                           ;	Power-up Timer Enable bit
  2382                           ;	PWRTE = OFF, PWRT disabled
  2383                           ;	Brown-out Reset Enable bit
  2384                           ;	BOREN = ON, BOR enabled
  2385                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2386                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2387                           ;	Data EEPROM Memory Code Protection bit
  2388                           ;	CPD = OFF, Data EEPROM code protection off
  2389                           ;	Flash Program Memory Write Enable bits
  2390                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2391                           ;	In-Circuit Debugger Mode bit
  2392                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  2393                           ;	Flash Program Memory Code Protection bit
  2394                           ;	CP = OFF, Code protection off
  2395     2007                     	org	8199
  2396     2007  3F7A               	dw	16250

Data Sizes:
    Strings     3
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     46      51
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    S598$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    S598$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    txstr@b	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _txstr->_tx
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2056
                                             34 BANK0     12    12      0
                                _adc
                           _adc_init
                            _sprintf
                            _t1delay
                            _t2delay
                             _t_init
                                 _tx
                              _txstr
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _txstr                                                1     0      1      75
                                              1 COMMON     1     0      1
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _t_init                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _t2delay                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _t1delay                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    1764
                                             17 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1559
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1434
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  6     4      2      23
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc
   _adc_init
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _t1delay
   _t2delay
   _t_init
   _tx
   _txstr
     _tx
   _uart_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     46      51     63.7%
BANK1               80      0      32     40.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      97      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 25 14:30:42 2024

                      pc 0002                       l70 047A                       l73 04A8  
                     l90 0509                       l67 0498                       l92 050D  
                     l76 0484                       l93 0521                       l85 04CD  
                     l79 048C                       l98 04D3             ___awdiv@sign 0075  
                     _tx 0483                       fsr 0004                      l100 04D7  
                    l101 04E7                      l104 04F4                      l107 0502  
                    l346 066B                      l700 0569                      l359 0608  
                    l730 0473                      l707 04B9                      ?_tx 0070  
                    l719 0705                      l656 0544                      l694 07EB  
                    l990 060E                      l992 0613                      l994 0615  
                    l986 0609                      l996 0619                      l988 060A  
                    l998 061E                      u500 0649                      u501 0648  
                    u520 065D                      u440 060E                      u521 065C  
                    u505 0645                      u441 060D                      u530 0662  
                    u450 0619                      u610 05FA                      u531 0661  
                    u515 0651                      u451 0618                      u611 05F9  
                    u460 0628                      u620 05FF                      u540 05B7  
                    u700 0732                      u461 0627                      u621 05FE  
                    u605 05EE                      u541 05B6                      u701 0731  
                    u550 05C2                      u630 0672                      u710 073E  
                    u551 05C1                      u631 0671                      u711 073D  
                    u480 0638                      u560 05CD                      u640 0678  
                    u720 0758                      u800 0565                      u481 0637  
                    u561 05CC                      u641 0677                      u721 0756  
                    u801 0564                      u650 0697                      u730 0759  
                    u810 050D                      u475 062C                      u651 0696  
                    u811 050C                      u580 05DD                      u660 06C9  
                    u740 0794                      u820 0521                      u581 05DC  
                    u661 06C8                      u741 0793                      u821 0520  
                    u830 04F8                      u590 05E7                      u670 06EA  
                    u750 0799                      u831 04F7                      u495 0639  
                    u591 05E6                      u575 05D1                      u751 0798  
                    u680 04AD                      u760 079E                      u840 04CD  
                    u681 04AC                      u665 06C5                      u761 079D  
                    u825 051D                      u841 04CC                      u770 07A3  
                    u690 0716                      u850 04D7                      u595 05E3  
                    u771 07A2                      u691 0715                      u851 04D6  
                    u780 07CA                      u860 04E7                      u781 07C9  
                    u861 04E6                      u790 048A                      u791 0489  
                    u877 04EC                      _adc 04E8                      _abs 04A9  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                    tx@a 0070                     ??_tx 0070                     ?_adc 0070  
                   l1000 0620                     l1010 0634                     l1002 0622  
                   l1020 0657                     l1012 0638                     l1004 0628  
                   l1100 0726                     l1014 0649                     l1006 062B  
                   l1022 065D                     l1030 05B2                     l1110 0753  
                   l1102 0732                     l1024 0662                     l1016 064F  
                   l1008 0632                     l1040 05C2                     l1032 05B3  
                   l1120 0799                     l1112 075A                     l1104 073E  
                   l1200 053B                     l1026 0667                     l1018 0650  
                   l1050 05D9                     l1042 05C7                     l1034 05B7  
                   l1122 079E                     l1130 07C4                     l1114 0779  
                   l1106 074C                     l1210 04C5                     ?_abs 0076  
                   l1052 05DD                     l1044 05CD                     l1060 05FA  
                   l1036 05BC                     l1124 07A3                     l1116 078E  
                   l1108 0751                     l1132 07CB                     l1220 04D8  
                   l1212 04CE                     l1204 04BA                     l1062 05FF  
                   l1054 05E7                     l1046 05D0                     l1038 05BE  
                   l1070 0672                     l1126 07AC                     l1118 0794  
                   l1150 0559                     l1214 04D1                     l1142 0484  
                   l1206 04BB                     l1230 0589                     l1222 056A  
                   l1064 0604                     l1056 05ED                     l1048 05D7  
                   l1072 0678                     l1128 07C0                     l1136 07D2  
                   l1152 0565                     l1144 048A                     l1208 04C3  
                   l1160 0499                     l1232 0596                     l1224 0574  
                   l1058 05F4                     l1082 04A9                     l1074 067F  
                   l1090 0706                     l1146 0545                     l1170 0503  
                   l1162 049C                     l1234 059D                     l1226 0579  
                   l1156 048D                     l1084 04AD                     l1076 0697  
                   l1068 066C                     l1092 0716                     l1148 054A  
                   l1180 0514                     l1164 049E                     l1236 05A3  
                   l1228 057E                     l1182 04E8                     l1086 04AE  
                   l1078 06C9                     l1094 071A                     l1190 0522  
                   l1158 0474                     l1166 04A0                     l1238 05A9  
                   l1184 04F1                     l1096 071E                     l1192 0526  
                   l1176 0505                     l1168 04A4                     l1186 04F8  
                   l1098 0722                     l1194 052A                     l1178 050E  
                   l1196 052C                     l1198 052E                     STR_1 0009  
                   _TXIF 0064                     abs@a 0076                     _dbuf 00A0  
                   _main 056A                     _prec 0050                     btemp 007E  
                   start 0000             main@adcvalue 004C                    ??_adc 0072  
                  ??_abs 0078          __end_of_t1delay 0522          __end_of_t2delay 04E8  
                  ?_main 0070          __end_of___awdiv 066C          __end_of___awmod 0609  
        ___awdiv@divisor 0070                    _T1CON 0010                    _T2CON 0012  
        ___awdiv@counter 0074                    _RCSTA 0018             vfpfcnvrt@fmt 0022  
                  _TMR1H 000F                    _TMR1L 000E                    _SPBRG 0099  
                  _TRISA 0085                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098                    _flags 0052                    _fputc 066C  
                  _width 004E                    _putch 0473                    _txstr 04BA  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0545          __initialization 07EC             __end_of_main 05B2  
                 ??_main 007E                   _ADCON0 001F                   _ADCON1 009F  
                 ?_fputc 0070                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0072                   ?_putch 0070                   ?_txstr 0071  
       __end_of_adc_init 0499            vfpfcnvrt@done 0026                   _TMR1IF 0060  
                 _TMR2IF 0061             vfprintf@cfmt 007D                ??_t1delay 0070  
              ??_t2delay 0070                ??___awdiv 0074                ??___awmod 0074  
                 _t_init 0474         ___awdiv@quotient 0076          ___awmod@divisor 0070  
        ___awmod@counter 0074                   fputc@c 0070                   putch@c 0070  
       __end_of_vfprintf 056A                ??_sprintf 0035                   txstr@b 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_fputc 0706  
          __end_of_putch 0474            __end_of_txstr 04CE               __end_of_tx 048D  
                ??_fputc 0074                  ??_putch 0070                  ??_txstr 0072  
             __pbssBANK0 004E               __pbssBANK1 00A0               __pmaintext 056A  
                ?_t_init 0070                ?_adc_init 0070               __stringtab 0003  
                _t1delay 0503                  _t2delay 04CE                  ___awdiv 0609  
                ___awmod 05B2                ?_vfprintf 002D               ??_adc_init 0070  
                __ptext1 0499                  __ptext2 04BA                  __ptext3 0483  
                __ptext4 0474                  __ptext5 04CE                  __ptext6 0503  
                __ptext7 0522                  __ptext8 0545                  __ptext9 0706  
       ___awmod@dividend 0072                  _sprintf 0522                  clrloop0 047C  
   end_of_initialization 07FC                  fputc@fp 0072        __end_of_uart_init 04A9  
      __end_of_vfpfcnvrt 07EC         vfpfcnvrt@convarg 0028               ??_vfprintf 007D  
            adc@adcvalue 0074               main@buffer 0042              vfpfcnvrt@ap 0023  
            vfpfcnvrt@cp 0027              vfpfcnvrt@fp 0020           __end_of_t_init 047B  
    start_initialization 07EC              __end_of_adc 0503              __end_of_abs 04BA  
            vfprintf@fmt 002F                 ??_t_init 0070                ___latbits 0002  
          __pcstackBANK0 0020                 ?_t1delay 0070                 ?_t2delay 0070  
               ?___awdiv 0070                 ?___awmod 0070                __pstrings 0003  
               ?_sprintf 0031                clear_ram0 047B                _uart_init 0499  
              _vfpfcnvrt 0706               _ADCON0bits 001F              __stringbase 0008  
             vfpfcnvrt@c 002C               vfprintf@ap 0030               vfprintf@fp 002D  
             ?_uart_init 0070                 t1delay@i 0070                 t2delay@i 0070  
             ?_vfpfcnvrt 0020       __end_of__stringtab 0009                 _adc_init 048D  
             sprintf@fmt 0032                 __ptext10 066C                 __ptext11 0473  
               __ptext12 04A9                 __ptext13 05B2                 __ptext14 0609  
               __ptext15 048D                 __ptext16 04E8                 _vfprintf 0545  
              sprintf@ap 0036                stringcode 0003              ??_uart_init 0070  
            ??_vfpfcnvrt 0024                 sprintf@f 0037                 sprintf@s 0031  
               stringdir 0003                 stringtab 0003  
