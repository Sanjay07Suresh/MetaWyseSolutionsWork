

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Nov 13 16:37:07 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0030                     _RB0            set	48
   173     0040                     _RD0            set	64
   174     0081                     _OPTION_REGbits set	129
   175     0088                     _TRISDbits      set	136
   176     0086                     _TRISBbits      set	134
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2FCA   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_main:
   193     0070                     ??_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 1 bytes @ 0x0
   198     0070                     	ds	2
   199     0072                     main@c:
   200                           
   201                           ; 2 bytes @ 0x2
   202     0072                     	ds	2
   203                           
   204                           	psect	maintext
   205     07CA                     __pmaintext:	
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 18 in file "main.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;  c               2    2[COMMON] unsigned int 
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0
   220 ;; Tracked objects:
   221 ;;		On entry : B00/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   225 ;;      Params:         0       0       0       0       0
   226 ;;      Locals:         2       0       0       0       0
   227 ;;      Temps:          2       0       0       0       0
   228 ;;      Totals:         4       0       0       0       0
   229 ;;Total ram usage:        4 bytes
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237     07CA                     _main:	
   238                           ;psect for function _main
   239                           
   240     07CA                     l569:	
   241                           ;incstack = 0
   242                           ; Regs used in _main: [wreg+status,2+status,0]
   243                           
   244                           
   245                           ;main.c: 20:     TRISBbits.TRISB0 = 1;
   246     07CA  1683               	bsf	3,5	;RP0=1, select bank1
   247     07CB  1303               	bcf	3,6	;RP1=0, select bank1
   248     07CC  1406               	bsf	6,0	;volatile
   249                           
   250                           ;main.c: 21:     TRISDbits.TRISD0 = 0;
   251     07CD  1008               	bcf	8,0	;volatile
   252                           
   253                           ;main.c: 22:     OPTION_REGbits.nRBPU = 0;
   254     07CE  1381               	bcf	1,7	;volatile
   255     07CF                     l571:
   256                           
   257                           ;main.c: 23:     unsigned int c = 0;
   258     07CF  01F2               	clrf	main@c
   259     07D0  01F3               	clrf	main@c+1
   260     07D1                     l573:
   261                           
   262                           ;main.c: 24:     RD0 = 0;
   263     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   264     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   265     07D3  1008               	bcf	8,0	;volatile
   266     07D4                     l575:
   267                           
   268                           ;main.c: 26:         if(!RB0){
   269     07D4  1806               	btfsc	6,0	;volatile
   270     07D5  2FD7               	goto	u11
   271     07D6  2FD8               	goto	u10
   272     07D7                     u11:
   273     07D7  2FED               	goto	l579
   274     07D8                     u10:
   275     07D8                     l577:
   276                           
   277                           ;main.c: 27:             _delay((unsigned long)((20)*(20000000/4000.0)));
   278     07D8  3082               	movlw	130
   279     07D9  00F1               	movwf	??_main+1
   280     07DA  30DD               	movlw	221
   281     07DB  00F0               	movwf	??_main
   282     07DC                     u47:
   283     07DC  0BF0               	decfsz	??_main,f
   284     07DD  2FDC               	goto	u47
   285     07DE  0BF1               	decfsz	??_main+1,f
   286     07DF  2FDC               	goto	u47
   287     07E0  2FE1               	nop2
   288                           
   289                           ;main.c: 28:             c++;
   290     07E1  3001               	movlw	1
   291     07E2  07F2               	addwf	main@c,f
   292     07E3  1803               	skipnc
   293     07E4  0AF3               	incf	main@c+1,f
   294     07E5  3000               	movlw	0
   295     07E6  07F3               	addwf	main@c+1,f
   296     07E7                     l19:	
   297                           ;main.c: 29:             while(!RB0);
   298                           
   299     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   300     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   301     07E9  1C06               	btfss	6,0	;volatile
   302     07EA  2FEC               	goto	u21
   303     07EB  2FED               	goto	u20
   304     07EC                     u21:
   305     07EC  2FE7               	goto	l19
   306     07ED                     u20:
   307     07ED                     l579:
   308                           
   309                           ;main.c: 31:         if(c==2){
   310     07ED  3002               	movlw	2
   311     07EE  0672               	xorwf	main@c,w
   312     07EF  0473               	iorwf	main@c+1,w
   313     07F0  1D03               	btfss	3,2
   314     07F1  2FF3               	goto	u31
   315     07F2  2FF4               	goto	u30
   316     07F3                     u31:
   317     07F3  2FD4               	goto	l575
   318     07F4                     u30:
   319     07F4                     l581:
   320                           
   321                           ;main.c: 32:             RD0 = !RD0;
   322     07F4  3001               	movlw	1
   323     07F5  0688               	xorwf	8,f
   324     07F6                     l583:
   325                           
   326                           ;main.c: 33:             c=0;
   327     07F6  01F2               	clrf	main@c
   328     07F7  01F3               	clrf	main@c+1
   329     07F8  2FD4               	goto	l575
   330     07F9  120A  118A  2800   	ljmp	start
   331     07FC                     __end_of_main:
   332     0002                     ___latbits      equ	2
   333     007E                     btemp           set	126	;btemp
   334     007E                     wtemp0          set	126
   335                           
   336                           	psect	config
   337                           
   338                           ;Config register CONFIG @ 0x2007
   339                           ;	Oscillator Selection bits
   340                           ;	FOSC = HS, HS oscillator
   341                           ;	Watchdog Timer Enable bit
   342                           ;	WDTE = OFF, WDT disabled
   343                           ;	Power-up Timer Enable bit
   344                           ;	PWRTE = OFF, PWRT disabled
   345                           ;	Brown-out Reset Enable bit
   346                           ;	BOREN = ON, BOR enabled
   347                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   348                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   349                           ;	Data EEPROM Memory Code Protection bit
   350                           ;	CPD = OFF, Data EEPROM code protection off
   351                           ;	Flash Program Memory Write Enable bits
   352                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   353                           ;	In-Circuit Debugger Mode bit
   354                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
   355                           ;	Flash Program Memory Code Protection bit
   356                           ;	CP = OFF, Code protection off
   357     2007                     	org	8199
   358     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Nov 13 16:37:07 2024

                     l19 07E7                       u10 07D8                       u11 07D7  
                     u20 07ED                       u21 07EC                       u30 07F4  
                     u31 07F3                       u47 07DC                      l571 07CF  
                    l581 07F4                      l573 07D1                      l583 07F6  
                    l575 07D4                      l577 07D8                      l569 07CA  
                    l579 07ED                      _RB0 0030                      _RD0 0040  
                   _main 07CA                     btemp 007E                     start 0000  
                  ?_main 0070                    main@c 0072                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 07CA     end_of_initialization 07FC  
              _TRISBbits 0086                _TRISDbits 0088      start_initialization 07FC  
              ___latbits 0002  
