

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Nov 23 12:05:03 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177     0019                     _TXREG          set	25
   178     0018                     _RCSTA          set	24
   179     0012                     _T2CON          set	18
   180     0061                     _TMR2IF         set	97
   181     0064                     _TXIF           set	100
   182     0099                     _SPBRG          set	153
   183     0098                     _TXSTA          set	152
   184     0087                     _TRISC          set	135
   185                           
   186                           	psect	cinit
   187     07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FC                     __initialization:
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2FD7   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_t2_init:
   201     0070                     ?_uart_init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_tx:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_t2delay:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     tx@a:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     t2delay@i:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ??_t2_init:	
   220                           ; 2 bytes @ 0x0
   221                           
   222     0070                     ??_uart_init:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ??_tx:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ??_t2delay:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233     0070                     	ds	1
   234     0071                     ?_txstr:
   235     0071                     txstr@b:	
   236                           ; 1 bytes @ 0x1
   237                           
   238                           
   239                           ; 2 bytes @ 0x1
   240     0071                     	ds	2
   241     0073                     main@i:
   242     0073                     ??_txstr:	
   243                           ; 1 bytes @ 0x3
   244                           
   245     0073                     ??_main:	
   246                           ; 1 bytes @ 0x3
   247                           
   248                           
   249                           ; 1 bytes @ 0x3
   250     0073                     	ds	1
   251                           
   252                           	psect	maintext
   253     07D7                     __pmaintext:	
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 21 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  i               1    3[COMMON] unsigned char 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : B00/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   273 ;;      Params:         0       0       0       0       0
   274 ;;      Locals:         1       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0
   276 ;;      Totals:         1       0       0       0       0
   277 ;;Total ram usage:        1 bytes
   278 ;; Hardware stack levels required when called: 2
   279 ;; This function calls:
   280 ;;		_t2_init
   281 ;;		_t2delay
   282 ;;		_tx
   283 ;;		_txstr
   284 ;;		_uart_init
   285 ;; This function is called by:
   286 ;;		Startup code after reset
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290     07D7                     _main:	
   291                           ;psect for function _main
   292                           
   293     07D7                     l660:	
   294                           ;incstack = 0
   295                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   296                           
   297                           
   298                           ;main.c: 22:     t2_init();
   299     07D7  120A  118A  2781  120A  118A  	fcall	_t2_init
   300     07DC                     l662:
   301                           
   302                           ;main.c: 23:     uart_init();
   303     07DC  120A  118A  2790  120A  118A  	fcall	_uart_init
   304     07E1                     l664:
   305                           
   306                           ;main.c: 24:     unsigned char i=0;
   307     07E1  01F3               	clrf	main@i
   308     07E2                     l666:
   309                           
   310                           ;main.c: 26:         tx(i);
   311     07E2  0873               	movf	main@i,w
   312     07E3  120A  118A  2786  120A  118A  	fcall	_tx
   313     07E8                     l668:
   314                           
   315                           ;main.c: 27:         i++;
   316     07E8  3001               	movlw	1
   317     07E9  07F3               	addwf	main@i,f
   318     07EA                     l670:
   319                           
   320                           ;main.c: 28:         txstr('\r\n');
   321     07EA  300A               	movlw	10
   322     07EB  00F1               	movwf	txstr@b
   323     07EC  300D               	movlw	13
   324     07ED  00F2               	movwf	txstr@b+1
   325     07EE  120A  118A  27BA  120A  118A  	fcall	_txstr
   326     07F3                     l672:
   327                           
   328                           ;main.c: 29:         t2delay();
   329     07F3  120A  118A  27A0  120A  118A  	fcall	_t2delay
   330     07F8  2FE2               	goto	l666
   331     07F9  120A  118A  2800   	ljmp	start
   332     07FC                     __end_of_main:
   333                           
   334                           	psect	text1
   335     0790                     __ptext1:	
   336 ;; *************** function _uart_init *****************
   337 ;; Defined at:
   338 ;;		line 37 in file "main.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   352 ;;      Params:         0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used: 1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365     0790                     _uart_init:	
   366                           ;psect for function _uart_init
   367                           
   368     0790                     l610:	
   369                           ;incstack = 0
   370                           ; Regs used in _uart_init: [wreg+status,2+status,0]
   371                           
   372                           
   373                           ;main.c: 38:     TRISC |= (1<<7);
   374     0790  1683               	bsf	3,5	;RP0=1, select bank1
   375     0791  1303               	bcf	3,6	;RP1=0, select bank1
   376     0792  1787               	bsf	7,7	;volatile
   377     0793                     l612:
   378                           
   379                           ;main.c: 39:     TRISC &= ~(1<<6);
   380     0793  30BF               	movlw	191
   381     0794  0587               	andwf	7,f	;volatile
   382     0795                     l614:
   383                           
   384                           ;main.c: 40:     TXSTA = 0x20;
   385     0795  3020               	movlw	32
   386     0796  0098               	movwf	24	;volatile
   387     0797                     l616:
   388                           
   389                           ;main.c: 41:     RCSTA = 0x90;
   390     0797  3090               	movlw	144
   391     0798  1283               	bcf	3,5	;RP0=0, select bank0
   392     0799  1303               	bcf	3,6	;RP1=0, select bank0
   393     079A  0098               	movwf	24	;volatile
   394     079B                     l618:
   395                           
   396                           ;main.c: 42:     SPBRG = 31;
   397     079B  301F               	movlw	31
   398     079C  1683               	bsf	3,5	;RP0=1, select bank1
   399     079D  1303               	bcf	3,6	;RP1=0, select bank1
   400     079E  0099               	movwf	25	;volatile
   401     079F                     l40:
   402     079F  0008               	return
   403     07A0                     __end_of_uart_init:
   404                           
   405                           	psect	text2
   406     07BA                     __ptext2:	
   407 ;; *************** function _txstr *****************
   408 ;; Defined at:
   409 ;;		line 48 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  b               2    1[COMMON] PTR unsigned char 
   412 ;;		 -> RAM(512), 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         2       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0
   427 ;;      Totals:         2       0       0       0       0
   428 ;;Total ram usage:        2 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 1
   431 ;; This function calls:
   432 ;;		_tx
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438     07BA                     _txstr:	
   439                           ;psect for function _txstr
   440                           
   441     07BA                     l652:	
   442                           ;incstack = 0
   443                           ; Regs used in _txstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;main.c: 49:     while(*b){
   447     07BA  2FCC               	goto	l658
   448     07BB                     l654:
   449                           
   450                           ;main.c: 50:         tx(*b++);
   451     07BB  0871               	movf	txstr@b,w
   452     07BC  0084               	movwf	4
   453     07BD  1783               	bsf	3,7
   454     07BE  1C72               	btfss	txstr@b+1,0
   455     07BF  1383               	bcf	3,7
   456     07C0  0800               	movf	0,w
   457     07C1  120A  118A  2786  120A  118A  	fcall	_tx
   458     07C6                     l656:
   459     07C6  3001               	movlw	1
   460     07C7  07F1               	addwf	txstr@b,f
   461     07C8  1803               	skipnc
   462     07C9  0AF2               	incf	txstr@b+1,f
   463     07CA  3000               	movlw	0
   464     07CB  07F2               	addwf	txstr@b+1,f
   465     07CC                     l658:
   466                           
   467                           ;main.c: 49:     while(*b){
   468     07CC  0871               	movf	txstr@b,w
   469     07CD  0084               	movwf	4
   470     07CE  1783               	bsf	3,7
   471     07CF  1C72               	btfss	txstr@b+1,0
   472     07D0  1383               	bcf	3,7
   473     07D1  0800               	movf	0,w
   474     07D2  1D03               	btfss	3,2
   475     07D3  2FD5               	goto	u51
   476     07D4  2FD6               	goto	u50
   477     07D5                     u51:
   478     07D5  2FBB               	goto	l654
   479     07D6                     u50:
   480     07D6                     l52:
   481     07D6  0008               	return
   482     07D7                     __end_of_txstr:
   483                           
   484                           	psect	text3
   485     0786                     __ptext3:	
   486 ;; *************** function _tx *****************
   487 ;; Defined at:
   488 ;;		line 44 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  a               1    wreg     unsigned char 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  a               1    0[COMMON] unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         1       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         1       0       0       0       0
   506 ;;Total ram usage:        1 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;;		_txstr
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516     0786                     _tx:	
   517                           ;psect for function _tx
   518                           
   519                           
   520                           ;incstack = 0
   521                           ; Regs used in _tx: [wreg]
   522                           ;tx@a stored from wreg
   523     0786  00F0               	movwf	tx@a
   524     0787                     l604:
   525     0787                     l43:	
   526                           ;main.c: 45:     while(!TXIF);
   527                           
   528     0787  1283               	bcf	3,5	;RP0=0, select bank0
   529     0788  1303               	bcf	3,6	;RP1=0, select bank0
   530     0789  1E0C               	btfss	12,4	;volatile
   531     078A  2F8C               	goto	u11
   532     078B  2F8D               	goto	u10
   533     078C                     u11:
   534     078C  2F87               	goto	l43
   535     078D                     u10:
   536     078D                     l606:
   537                           
   538                           ;main.c: 46:     TXREG = a;
   539     078D  0870               	movf	tx@a,w
   540     078E  0099               	movwf	25	;volatile
   541     078F                     l46:
   542     078F  0008               	return
   543     0790                     __end_of_tx:
   544                           
   545                           	psect	text4
   546     07A0                     __ptext4:	
   547 ;; *************** function _t2delay *****************
   548 ;; Defined at:
   549 ;;		line 53 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  i               2    0[COMMON] unsigned int 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         2       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         2       0       0       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576     07A0                     _t2delay:	
   577                           ;psect for function _t2delay
   578                           
   579     07A0                     l628:	
   580                           ;incstack = 0
   581                           ; Regs used in _t2delay: [wreg+status,2]
   582                           
   583                           
   584                           ;main.c: 54:     T2CON |= (1<<2);
   585     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   586     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   587     07A2  1512               	bsf	18,2	;volatile
   588     07A3                     l630:
   589                           
   590                           ;main.c: 55:     for(unsigned int i = 0; i<1220; i++){
   591     07A3  01F0               	clrf	t2delay@i
   592     07A4  01F1               	clrf	t2delay@i+1
   593     07A5                     l57:
   594     07A5  1C8C               	btfss	12,1	;volatile
   595     07A6  2FA8               	goto	u31
   596     07A7  2FA9               	goto	u30
   597     07A8                     u31:
   598     07A8  2FA5               	goto	l57
   599     07A9                     u30:
   600     07A9                     l59:
   601                           
   602                           ;main.c: 57:         TMR2IF = 0;
   603     07A9  108C               	bcf	12,1	;volatile
   604     07AA                     l636:
   605                           
   606                           ;main.c: 58:     }
   607     07AA  3001               	movlw	1
   608     07AB  07F0               	addwf	t2delay@i,f
   609     07AC  1803               	skipnc
   610     07AD  0AF1               	incf	t2delay@i+1,f
   611     07AE  3000               	movlw	0
   612     07AF  07F1               	addwf	t2delay@i+1,f
   613     07B0  3004               	movlw	4
   614     07B1  0271               	subwf	t2delay@i+1,w
   615     07B2  30C4               	movlw	196
   616     07B3  1903               	skipnz
   617     07B4  0270               	subwf	t2delay@i,w
   618     07B5  1C03               	skipc
   619     07B6  2FB8               	goto	u41
   620     07B7  2FB9               	goto	u40
   621     07B8                     u41:
   622     07B8  2FA5               	goto	l57
   623     07B9                     u40:
   624     07B9                     l60:
   625     07B9  0008               	return
   626     07BA                     __end_of_t2delay:
   627                           
   628                           	psect	text5
   629     0781                     __ptext5:	
   630 ;; *************** function _t2_init *****************
   631 ;; Defined at:
   632 ;;		line 34 in file "main.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		None
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659     0781                     _t2_init:	
   660                           ;psect for function _t2_init
   661                           
   662     0781                     l608:	
   663                           ;incstack = 0
   664                           ; Regs used in _t2_init: []
   665                           
   666                           
   667                           ;main.c: 35:     T2CON = 0x78;
   668     0781  3078               	movlw	120
   669     0782  1283               	bcf	3,5	;RP0=0, select bank0
   670     0783  1303               	bcf	3,6	;RP1=0, select bank0
   671     0784  0092               	movwf	18	;volatile
   672     0785                     l37:
   673     0785  0008               	return
   674     0786                     __end_of_t2_init:
   675     0002                     ___latbits      equ	2
   676     007E                     btemp           set	126	;btemp
   677     007E                     wtemp0          set	126
   678                           
   679                           	psect	config
   680                           
   681                           ;Config register CONFIG @ 0x2007
   682                           ;	Oscillator Selection bits
   683                           ;	FOSC = HS, HS oscillator
   684                           ;	Watchdog Timer Enable bit
   685                           ;	WDTE = OFF, WDT disabled
   686                           ;	Power-up Timer Enable bit
   687                           ;	PWRTE = OFF, PWRT disabled
   688                           ;	Brown-out Reset Enable bit
   689                           ;	BOREN = ON, BOR enabled
   690                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   691                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   692                           ;	Data EEPROM Memory Code Protection bit
   693                           ;	CPD = OFF, Data EEPROM code protection off
   694                           ;	Flash Program Memory Write Enable bits
   695                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   696                           ;	In-Circuit Debugger Mode bit
   697                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
   698                           ;	Flash Program Memory Code Protection bit
   699                           ;	CP = OFF, Code protection off
   700     2007                     	org	8199
   701     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    txstr@b	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_txstr
    _txstr->_tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     130
                                              3 COMMON     1     1      0
                            _t2_init
                            _t2delay
                                 _tx
                              _txstr
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _txstr                                                2     0      2      61
                                              1 COMMON     2     0      2
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _t2delay                                              2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _t2_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _t2_init
   _t2delay
   _tx
   _txstr
     _tx
   _uart_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      4       4     28.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       4      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Nov 23 12:05:03 2024

                     l40 079F                       l43 0787                       l60 07B9  
                     l52 07D6                       l37 0785                       l46 078F  
                     l57 07A5                       l59 07A9                       u10 078D  
                     u11 078C                       u30 07A9                       u31 07A8  
                     u40 07B9                       u41 07B8                       u50 07D6  
                     u51 07D5                       _tx 0786                      l610 0790  
                    l604 0787                      l612 0793                      l630 07A3  
                    l606 078D                      l614 0795                      l608 0781  
                    l616 0797                      l618 079B                      l636 07AA  
                    l628 07A0                      l652 07BA                      l660 07D7  
                    ?_tx 0070                      l654 07BB                      l670 07EA  
                    l662 07DC                      l656 07C6                      l672 07F3  
                    l664 07E1                      l658 07CC                      l666 07E2  
                    l668 07E8                      fsr0 0004                      indf 0000  
                    tx@a 0070                     ??_tx 0070                     _TXIF 0064  
                   _main 07D7                     btemp 007E                     start 0000  
        __end_of_t2_init 0786          __end_of_t2delay 07BA                    ?_main 0070  
                  _T2CON 0012                    _RCSTA 0018                    _SPBRG 0099  
                  _TRISC 0087                    _TXREG 0019                    _TXSTA 0098  
                  main@i 0073                    _txstr 07BA                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073                   ?_txstr 0071                   _TMR2IF 0061  
              ??_t2_init 0070                ??_t2delay 0070                   txstr@b 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_txstr 07D7  
             __end_of_tx 0790                  ??_txstr 0073               __pmaintext 07D7  
                _t2_init 0781                  _t2delay 07A0                  __ptext1 0790  
                __ptext2 07BA                  __ptext3 0786                  __ptext4 07A0  
                __ptext5 0781     end_of_initialization 07FC        __end_of_uart_init 07A0  
    start_initialization 07FC                ___latbits 0002                 ?_t2_init 0070  
               ?_t2delay 0070                _uart_init 0790               ?_uart_init 0070  
               t2delay@i 0070              ??_uart_init 0070  
