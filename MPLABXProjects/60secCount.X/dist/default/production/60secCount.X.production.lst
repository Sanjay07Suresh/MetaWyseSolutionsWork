

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 25 16:15:33 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 12/10/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0004                     fsr             equ	4
    66     0004                     fsr0            equ	4
    67     0000                     indf            equ	0
    68     0000                     indf0           equ	0
    69     0002                     pc              equ	2
    70     0002                     pcl             equ	2
    71     000A                     pclath          equ	10
    72     0003                     status          equ	3
    73     0000                     INDF            equ	0	;# 
    74     0001                     TMR0            equ	1	;# 
    75     0002                     PCL             equ	2	;# 
    76     0003                     STATUS          equ	3	;# 
    77     0004                     FSR             equ	4	;# 
    78     0005                     PORTA           equ	5	;# 
    79     0006                     PORTB           equ	6	;# 
    80     0007                     PORTC           equ	7	;# 
    81     0008                     PORTD           equ	8	;# 
    82     0009                     PORTE           equ	9	;# 
    83     000A                     PCLATH          equ	10	;# 
    84     000B                     INTCON          equ	11	;# 
    85     000C                     PIR1            equ	12	;# 
    86     000D                     PIR2            equ	13	;# 
    87     000E                     TMR1            equ	14	;# 
    88     000E                     TMR1L           equ	14	;# 
    89     000F                     TMR1H           equ	15	;# 
    90     0010                     T1CON           equ	16	;# 
    91     0011                     TMR2            equ	17	;# 
    92     0012                     T2CON           equ	18	;# 
    93     0013                     SSPBUF          equ	19	;# 
    94     0014                     SSPCON          equ	20	;# 
    95     0015                     CCPR1           equ	21	;# 
    96     0015                     CCPR1L          equ	21	;# 
    97     0016                     CCPR1H          equ	22	;# 
    98     0017                     CCP1CON         equ	23	;# 
    99     0018                     RCSTA           equ	24	;# 
   100     0019                     TXREG           equ	25	;# 
   101     001A                     RCREG           equ	26	;# 
   102     001B                     CCPR2           equ	27	;# 
   103     001B                     CCPR2L          equ	27	;# 
   104     001C                     CCPR2H          equ	28	;# 
   105     001D                     CCP2CON         equ	29	;# 
   106     001E                     ADRESH          equ	30	;# 
   107     001F                     ADCON0          equ	31	;# 
   108     0081                     OPTION_REG      equ	129	;# 
   109     0085                     TRISA           equ	133	;# 
   110     0086                     TRISB           equ	134	;# 
   111     0087                     TRISC           equ	135	;# 
   112     0088                     TRISD           equ	136	;# 
   113     0089                     TRISE           equ	137	;# 
   114     008C                     PIE1            equ	140	;# 
   115     008D                     PIE2            equ	141	;# 
   116     008E                     PCON            equ	142	;# 
   117     0091                     SSPCON2         equ	145	;# 
   118     0092                     PR2             equ	146	;# 
   119     0093                     SSPADD          equ	147	;# 
   120     0094                     SSPSTAT         equ	148	;# 
   121     0098                     TXSTA           equ	152	;# 
   122     0099                     SPBRG           equ	153	;# 
   123     009C                     CMCON           equ	156	;# 
   124     009D                     CVRCON          equ	157	;# 
   125     009E                     ADRESL          equ	158	;# 
   126     009F                     ADCON1          equ	159	;# 
   127     010C                     EEDATA          equ	268	;# 
   128     010D                     EEADR           equ	269	;# 
   129     010E                     EEDATH          equ	270	;# 
   130     010F                     EEADRH          equ	271	;# 
   131     018C                     EECON1          equ	396	;# 
   132     018D                     EECON2          equ	397	;# 
   133     0000                     INDF            equ	0	;# 
   134     0001                     TMR0            equ	1	;# 
   135     0002                     PCL             equ	2	;# 
   136     0003                     STATUS          equ	3	;# 
   137     0004                     FSR             equ	4	;# 
   138     0005                     PORTA           equ	5	;# 
   139     0006                     PORTB           equ	6	;# 
   140     0007                     PORTC           equ	7	;# 
   141     0008                     PORTD           equ	8	;# 
   142     0009                     PORTE           equ	9	;# 
   143     000A                     PCLATH          equ	10	;# 
   144     000B                     INTCON          equ	11	;# 
   145     000C                     PIR1            equ	12	;# 
   146     000D                     PIR2            equ	13	;# 
   147     000E                     TMR1            equ	14	;# 
   148     000E                     TMR1L           equ	14	;# 
   149     000F                     TMR1H           equ	15	;# 
   150     0010                     T1CON           equ	16	;# 
   151     0011                     TMR2            equ	17	;# 
   152     0012                     T2CON           equ	18	;# 
   153     0013                     SSPBUF          equ	19	;# 
   154     0014                     SSPCON          equ	20	;# 
   155     0015                     CCPR1           equ	21	;# 
   156     0015                     CCPR1L          equ	21	;# 
   157     0016                     CCPR1H          equ	22	;# 
   158     0017                     CCP1CON         equ	23	;# 
   159     0018                     RCSTA           equ	24	;# 
   160     0019                     TXREG           equ	25	;# 
   161     001A                     RCREG           equ	26	;# 
   162     001B                     CCPR2           equ	27	;# 
   163     001B                     CCPR2L          equ	27	;# 
   164     001C                     CCPR2H          equ	28	;# 
   165     001D                     CCP2CON         equ	29	;# 
   166     001E                     ADRESH          equ	30	;# 
   167     001F                     ADCON0          equ	31	;# 
   168     0081                     OPTION_REG      equ	129	;# 
   169     0085                     TRISA           equ	133	;# 
   170     0086                     TRISB           equ	134	;# 
   171     0087                     TRISC           equ	135	;# 
   172     0088                     TRISD           equ	136	;# 
   173     0089                     TRISE           equ	137	;# 
   174     008C                     PIE1            equ	140	;# 
   175     008D                     PIE2            equ	141	;# 
   176     008E                     PCON            equ	142	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0094                     SSPSTAT         equ	148	;# 
   181     0098                     TXSTA           equ	152	;# 
   182     0099                     SPBRG           equ	153	;# 
   183     009C                     CMCON           equ	156	;# 
   184     009D                     CVRCON          equ	157	;# 
   185     009E                     ADRESL          equ	158	;# 
   186     009F                     ADCON1          equ	159	;# 
   187     010C                     EEDATA          equ	268	;# 
   188     010D                     EEADR           equ	269	;# 
   189     010E                     EEDATH          equ	270	;# 
   190     010F                     EEADRH          equ	271	;# 
   191     018C                     EECON1          equ	396	;# 
   192     018D                     EECON2          equ	397	;# 
   193     000E                     _TMR1L          set	14
   194     000F                     _TMR1H          set	15
   195     0019                     _TXREG          set	25
   196     0006                     _PORTB          set	6
   197     0010                     _T1CON          set	16
   198     0018                     _RCSTA          set	24
   199     0041                     _RD1            set	65
   200     0060                     _TMR1IF         set	96
   201     0064                     _TXIF           set	100
   202     0039                     _RC1            set	57
   203     0038                     _RC0            set	56
   204     0087                     _TRISCbits      set	135
   205     0086                     _TRISB          set	134
   206     0099                     _SPBRG          set	153
   207     0098                     _TXSTA          set	152
   208     0087                     _TRISC          set	135
   209     0081                     _OPTION_REGbits set	129
   210     0088                     _TRISDbits      set	136
   211                           
   212                           	psect	strings
   213     0003                     __pstrings:
   214     0003                     stringtab:
   215     0003                     __stringtab:
   216     0003                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219     0003                     stringdir:
   220     0003  3000               	movlw	high stringdir
   221     0004  008A               	movwf	10
   222     0005  0804               	movf	4,w
   223     0006  0A84               	incf	4,f
   224     0007  0782               	addwf	2,f
   225     0008                     __stringbase:
   226     0008  3400               	retlw	0
   227     0009                     __end_of__stringtab:
   228     0009                     STR_1:
   229     0009  3443               	retlw	67	;'C'
   230     000A  346F               	retlw	111	;'o'
   231     000B  3475               	retlw	117	;'u'
   232     000C  346E               	retlw	110	;'n'
   233     000D  3474               	retlw	116	;'t'
   234     000E  343A               	retlw	58	;':'
   235     000F  3420               	retlw	32	;' '
   236     0010  3425               	retlw	37	;'%'
   237     0011  3475               	retlw	117	;'u'
   238     0012  3400               	retlw	0
   239     0010                     STR_2           equ	STR_1+7
   240                           
   241                           	psect	cinit
   242     07EC                     start_initialization:	
   243                           ; #config settings
   244                           
   245     07EC                     __initialization:
   246                           
   247                           ; Clear objects allocated to BANK0
   248     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   249     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   250     07EE  01D0               	clrf	__pbssBANK0& (0+127)
   251     07EF  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   252     07F0  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   253     07F1  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   254     07F2  01D4               	clrf	(__pbssBANK0+4)& (0+127)
   255                           
   256                           ; Clear objects allocated to BANK1
   257     07F3  1383               	bcf	3,7	;select IRP bank0
   258     07F4  30A0               	movlw	low __pbssBANK1
   259     07F5  0084               	movwf	4
   260     07F6  30C0               	movlw	low (__pbssBANK1+32)
   261     07F7  120A  118A  2488  120A  118A  	fcall	clear_ram0
   262     07FC                     end_of_initialization:	
   263                           ;End of C runtime variable initialization code
   264                           
   265     07FC                     __end_of__initialization:
   266     07FC  0183               	clrf	3
   267     07FD  120A  118A  2E1F   	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	bssBANK0
   270     0050                     __pbssBANK0:
   271     0050                     _width:
   272     0050                     	ds	2
   273     0052                     _prec:
   274     0052                     	ds	2
   275     0054                     _flags:
   276     0054                     	ds	1
   277                           
   278                           	psect	bssBANK1
   279     00A0                     __pbssBANK1:
   280     00A0                     _dbuf:
   281     00A0                     	ds	32
   282                           
   283                           	psect	clrtext
   284     0488                     clear_ram0:	
   285                           ;	Called with FSR containing the base address, and
   286                           ;	W with the last address+1
   287                           
   288     0488  0064               	clrwdt	;clear the watchdog before getting into this loop
   289     0489                     clrloop0:
   290     0489  0180               	clrf	0	;clear RAM location pointed to by FSR
   291     048A  0A84               	incf	4,f	;increment pointer
   292     048B  0604               	xorwf	4,w	;XOR with final address
   293     048C  1903               	btfsc	3,2	;have we reached the end yet?
   294     048D  3400               	retlw	0	;all done for this memory range, return
   295     048E  0604               	xorwf	4,w	;XOR again to restore value
   296     048F  2C89               	goto	clrloop0	;do the next byte
   297                           
   298                           	psect	cstackCOMMON
   299     0070                     __pcstackCOMMON:
   300     0070                     ?_lcd_init:
   301     0070                     ?_uart_init:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_timer1_init:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_cmd:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_tx:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ?_putch:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ?_main:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     ?_dat:	
   320                           ; 1 bytes @ 0x0
   321                           
   322     0070                     ?_countvalue:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_fputc:	
   326                           ; 2 bytes @ 0x0
   327                           
   328     0070                     ?___lwdiv:	
   329                           ; 2 bytes @ 0x0
   330                           
   331     0070                     ?___lwmod:	
   332                           ; 2 bytes @ 0x0
   333                           
   334     0070                     tx@a:	
   335                           ; 2 bytes @ 0x0
   336                           
   337     0070                     putch@c:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ___lwdiv@divisor:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ___lwmod@divisor:	
   344                           ; 2 bytes @ 0x0
   345                           
   346     0070                     fputc@c:	
   347                           ; 2 bytes @ 0x0
   348                           
   349     0070                     ??_uart_init:	
   350                           ; 2 bytes @ 0x0
   351                           
   352     0070                     ??_timer1_init:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ??_cmd:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ??_tx:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ??_putch:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ??_dat:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 1 bytes @ 0x0
   369     0070                     	ds	1
   370     0071                     ?_txstr:
   371     0071                     txstr@b:	
   372                           ; 1 bytes @ 0x1
   373                           
   374                           
   375                           ; 1 bytes @ 0x1
   376     0071                     	ds	1
   377     0072                     cmd@a:
   378     0072                     dat@b:	
   379                           ; 1 bytes @ 0x2
   380                           
   381     0072                     ___lwdiv@dividend:	
   382                           ; 1 bytes @ 0x2
   383                           
   384     0072                     ___lwmod@dividend:	
   385                           ; 2 bytes @ 0x2
   386                           
   387     0072                     fputc@fp:	
   388                           ; 2 bytes @ 0x2
   389                           
   390     0072                     ??_countvalue:	
   391                           ; 2 bytes @ 0x2
   392                           
   393     0072                     ??_txstr:	
   394                           ; 1 bytes @ 0x2
   395                           
   396                           
   397                           ; 1 bytes @ 0x2
   398     0072                     	ds	1
   399     0073                     ?_show:
   400     0073                     show@s:	
   401                           ; 1 bytes @ 0x3
   402                           
   403     0073                     ??_lcd_init:	
   404                           ; 1 bytes @ 0x3
   405                           
   406                           
   407                           ; 1 bytes @ 0x3
   408     0073                     	ds	1
   409     0074                     ___lwmod@counter:
   410     0074                     countvalue@c:	
   411                           ; 1 bytes @ 0x4
   412                           
   413     0074                     ___lwdiv@quotient:	
   414                           ; 2 bytes @ 0x4
   415                           
   416     0074                     ??_show:	
   417                           ; 2 bytes @ 0x4
   418                           
   419     0074                     ??_fputc:	
   420                           ; 1 bytes @ 0x4
   421                           
   422     0074                     ??___lwdiv:	
   423                           ; 1 bytes @ 0x4
   424                           
   425     0074                     ??___lwmod:	
   426                           ; 1 bytes @ 0x4
   427                           
   428                           
   429                           ; 1 bytes @ 0x4
   430     0074                     	ds	2
   431     0076                     ___lwdiv@counter:
   432     0076                     countvalue@i:	
   433                           ; 1 bytes @ 0x6
   434                           
   435                           
   436                           ; 2 bytes @ 0x6
   437     0076                     	ds	7
   438     007D                     vfprintf@cfmt:
   439     007D                     ??_vfprintf:	
   440                           ; 1 bytes @ 0xD
   441                           
   442                           
   443                           ; 1 bytes @ 0xD
   444     007D                     	ds	1
   445                           
   446                           	psect	cstackBANK0
   447     0020                     __pcstackBANK0:
   448     0020                     ?_vfpfcnvrt:
   449     0020                     vfpfcnvrt@fp:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 2 bytes @ 0x0
   454     0020                     	ds	2
   455     0022                     vfpfcnvrt@fmt:
   456                           
   457                           ; 1 bytes @ 0x2
   458     0022                     	ds	1
   459     0023                     vfpfcnvrt@ap:
   460                           
   461                           ; 1 bytes @ 0x3
   462     0023                     	ds	1
   463     0024                     ??_vfpfcnvrt:
   464                           
   465                           ; 1 bytes @ 0x4
   466     0024                     	ds	2
   467     0026                     vfpfcnvrt@convarg:
   468                           
   469                           ; 4 bytes @ 0x6
   470     0026                     	ds	4
   471     002A                     vfpfcnvrt@cp:
   472                           
   473                           ; 1 bytes @ 0xA
   474     002A                     	ds	1
   475     002B                     vfpfcnvrt@c:
   476                           
   477                           ; 1 bytes @ 0xB
   478     002B                     	ds	1
   479     002C                     ?_vfprintf:
   480     002C                     vfprintf@fp:	
   481                           ; 2 bytes @ 0xC
   482                           
   483                           
   484                           ; 2 bytes @ 0xC
   485     002C                     	ds	2
   486     002E                     vfprintf@fmt:
   487                           
   488                           ; 1 bytes @ 0xE
   489     002E                     	ds	1
   490     002F                     vfprintf@ap:
   491                           
   492                           ; 1 bytes @ 0xF
   493     002F                     	ds	1
   494     0030                     ?_sprintf:
   495     0030                     sprintf@s:	
   496                           ; 2 bytes @ 0x10
   497                           
   498                           
   499                           ; 1 bytes @ 0x10
   500     0030                     	ds	1
   501     0031                     sprintf@fmt:
   502                           
   503                           ; 1 bytes @ 0x11
   504     0031                     	ds	3
   505     0034                     ??_sprintf:
   506                           
   507                           ; 1 bytes @ 0x14
   508     0034                     	ds	1
   509     0035                     sprintf@ap:
   510                           
   511                           ; 1 bytes @ 0x15
   512     0035                     	ds	1
   513     0036                     sprintf@f:
   514                           
   515                           ; 11 bytes @ 0x16
   516     0036                     	ds	11
   517     0041                     ??_main:
   518                           
   519                           ; 1 bytes @ 0x21
   520     0041                     	ds	3
   521     0044                     main@buffer:
   522                           
   523                           ; 10 bytes @ 0x24
   524     0044                     	ds	10
   525     004E                     main@c:
   526                           
   527                           ; 2 bytes @ 0x2E
   528     004E                     	ds	2
   529                           
   530                           	psect	maintext
   531     061F                     __pmaintext:	
   532 ;;
   533 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   534 ;;
   535 ;; *************** function _main *****************
   536 ;; Defined at:
   537 ;;		line 28 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  buffer         10   36[BANK0 ] unsigned char [10]
   542 ;;  c               2   46[BANK0 ] unsigned int 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : B00/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0      12       0       0       0
   554 ;;      Temps:          0       3       0       0       0
   555 ;;      Totals:         0      15       0       0       0
   556 ;;Total ram usage:       15 bytes
   557 ;; Hardware stack levels required when called: 5
   558 ;; This function calls:
   559 ;;		_cmd
   560 ;;		_countvalue
   561 ;;		_lcd_init
   562 ;;		_show
   563 ;;		_sprintf
   564 ;;		_timer1_init
   565 ;;		_tx
   566 ;;		_txstr
   567 ;;		_uart_init
   568 ;; This function is called by:
   569 ;;		Startup code after reset
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573     061F                     _main:	
   574                           ;psect for function _main
   575                           
   576     061F                     l1175:	
   577                           ;incstack = 0
   578                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   579                           
   580                           
   581                           ;main.c: 29:     TRISDbits.TRISD1 = 1;
   582     061F  1683               	bsf	3,5	;RP0=1, select bank1
   583     0620  1303               	bcf	3,6	;RP1=0, select bank1
   584     0621  1488               	bsf	8,1	;volatile
   585                           
   586                           ;main.c: 30:     OPTION_REGbits.nRBPU = 0;
   587     0622  1381               	bcf	1,7	;volatile
   588     0623                     l1177:
   589                           
   590                           ;main.c: 31:     lcd_init();
   591     0623  120A  118A  2542  120A  118A  	fcall	_lcd_init
   592                           
   593                           ;main.c: 32:     uart_init();
   594     0628  120A  118A  249A  120A  118A  	fcall	_uart_init
   595     062D                     l1179:
   596                           
   597                           ;main.c: 33:     timer1_init();
   598     062D  120A  118A  2483  120A  118A  	fcall	_timer1_init
   599     0632                     l1181:
   600                           
   601                           ;main.c: 36:         unsigned int c = countvalue();
   602     0632  120A  118A  25A1  120A  118A  	fcall	_countvalue
   603     0637  0871               	movf	?_countvalue+1,w
   604     0638  1283               	bcf	3,5	;RP0=0, select bank0
   605     0639  1303               	bcf	3,6	;RP1=0, select bank0
   606     063A  00CF               	movwf	main@c+1
   607     063B  0870               	movf	?_countvalue,w
   608     063C  00CE               	movwf	main@c
   609     063D                     l1183:
   610                           
   611                           ;main.c: 37:         char buffer[10];;main.c: 39:         cmd(0x01);
   612     063D  3001               	movlw	1
   613     063E  120A  118A  24AA  120A  118A  	fcall	_cmd
   614     0643                     l1185:
   615                           
   616                           ;main.c: 40:         sprintf(buffer, "Count: %u", c);
   617     0643  3044               	movlw	(low (main@buffer| 0))& (0+255)
   618     0644  1283               	bcf	3,5	;RP0=0, select bank0
   619     0645  1303               	bcf	3,6	;RP1=0, select bank0
   620     0646  00B0               	movwf	sprintf@s
   621     0647  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   622     0648  00B1               	movwf	sprintf@fmt
   623     0649  084F               	movf	main@c+1,w
   624     064A  00B3               	movwf	?_sprintf+3
   625     064B  084E               	movf	main@c,w
   626     064C  00B2               	movwf	?_sprintf+2
   627     064D  120A  118A  24FA  120A  118A  	fcall	_sprintf
   628     0652                     l1187:
   629                           
   630                           ;main.c: 41:         show(buffer);
   631     0652  3044               	movlw	(low (main@buffer| 0))& (0+255)
   632     0653  00F3               	movwf	show@s
   633     0654  120A  118A  24D2  120A  118A  	fcall	_show
   634     0659                     l1189:
   635                           
   636                           ;main.c: 43:         sprintf(buffer, "%u", c);
   637     0659  3044               	movlw	(low (main@buffer| 0))& (0+255)
   638     065A  1283               	bcf	3,5	;RP0=0, select bank0
   639     065B  1303               	bcf	3,6	;RP1=0, select bank0
   640     065C  00B0               	movwf	sprintf@s
   641     065D  3008               	movlw	(low (((STR_1+7)-__stringbase)| (0+32768)))& (0+255)
   642     065E  00B1               	movwf	sprintf@fmt
   643     065F  084F               	movf	main@c+1,w
   644     0660  00B3               	movwf	?_sprintf+3
   645     0661  084E               	movf	main@c,w
   646     0662  00B2               	movwf	?_sprintf+2
   647     0663  120A  118A  24FA  120A  118A  	fcall	_sprintf
   648     0668                     l1191:
   649                           
   650                           ;main.c: 44:         txstr(buffer);
   651     0668  3044               	movlw	(low (main@buffer| 0))& (0+255)
   652     0669  00F1               	movwf	txstr@b
   653     066A  120A  118A  24E6  120A  118A  	fcall	_txstr
   654     066F                     l1193:
   655                           
   656                           ;main.c: 45:         tx('\r');
   657     066F  300D               	movlw	13
   658     0670  120A  118A  2490  120A  118A  	fcall	_tx
   659     0675                     l1195:
   660                           
   661                           ;main.c: 46:         tx('\n');
   662     0675  300A               	movlw	10
   663     0676  120A  118A  2490  120A  118A  	fcall	_tx
   664     067B                     l1197:
   665                           
   666                           ;main.c: 48:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   667     067B  301A               	movlw	26
   668     067C  1283               	bcf	3,5	;RP0=0, select bank0
   669     067D  1303               	bcf	3,6	;RP1=0, select bank0
   670     067E  00C3               	movwf	??_main+2
   671     067F  305E               	movlw	94
   672     0680  00C2               	movwf	??_main+1
   673     0681  306D               	movlw	109
   674     0682  00C1               	movwf	??_main
   675     0683                     u637:
   676     0683  0BC1               	decfsz	??_main,f
   677     0684  2E83               	goto	u637
   678     0685  0BC2               	decfsz	??_main+1,f
   679     0686  2E83               	goto	u637
   680     0687  0BC3               	decfsz	??_main+2,f
   681     0688  2E83               	goto	u637
   682     0689  2E8A               	nop2
   683     068A  2E32               	goto	l1181
   684     068B  120A  118A  2800   	ljmp	start
   685     068E                     __end_of_main:
   686                           
   687                           	psect	text1
   688     049A                     __ptext1:	
   689 ;; *************** function _uart_init *****************
   690 ;; Defined at:
   691 ;;		line 52 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_main
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718     049A                     _uart_init:	
   719                           ;psect for function _uart_init
   720                           
   721     049A                     l1115:	
   722                           ;incstack = 0
   723                           ; Regs used in _uart_init: [wreg+status,2+status,0]
   724                           
   725                           
   726                           ;main.c: 53:     TRISC |= (1 << 7);
   727     049A  1683               	bsf	3,5	;RP0=1, select bank1
   728     049B  1303               	bcf	3,6	;RP1=0, select bank1
   729     049C  1787               	bsf	7,7	;volatile
   730     049D                     l1117:
   731                           
   732                           ;main.c: 54:     TRISC &= ~(1 << 6);
   733     049D  30BF               	movlw	191
   734     049E  0587               	andwf	7,f	;volatile
   735     049F                     l1119:
   736                           
   737                           ;main.c: 55:     TXSTA = 0x20;
   738     049F  3020               	movlw	32
   739     04A0  0098               	movwf	24	;volatile
   740     04A1                     l1121:
   741                           
   742                           ;main.c: 56:     RCSTA = 0x90;
   743     04A1  3090               	movlw	144
   744     04A2  1283               	bcf	3,5	;RP0=0, select bank0
   745     04A3  1303               	bcf	3,6	;RP1=0, select bank0
   746     04A4  0098               	movwf	24	;volatile
   747     04A5                     l1123:
   748                           
   749                           ;main.c: 57:     SPBRG = 31;
   750     04A5  301F               	movlw	31
   751     04A6  1683               	bsf	3,5	;RP0=1, select bank1
   752     04A7  1303               	bcf	3,6	;RP1=0, select bank1
   753     04A8  0099               	movwf	25	;volatile
   754     04A9                     l67:
   755     04A9  0008               	return
   756     04AA                     __end_of_uart_init:
   757                           
   758                           	psect	text2
   759     04E6                     __ptext2:	
   760 ;; *************** function _txstr *****************
   761 ;; Defined at:
   762 ;;		line 102 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  b               1    1[COMMON] PTR unsigned char 
   765 ;;		 -> main@buffer(10), 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         1       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0
   780 ;;      Totals:         1       0       0       0       0
   781 ;;Total ram usage:        1 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 1
   784 ;; This function calls:
   785 ;;		_tx
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791     04E6                     _txstr:	
   792                           ;psect for function _txstr
   793                           
   794     04E6                     l1167:	
   795                           ;incstack = 0
   796                           ; Regs used in _txstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   797                           
   798                           
   799                           ;main.c: 103:     while (*b) {
   800     04E6  2CF1               	goto	l1173
   801     04E7                     l1169:
   802                           
   803                           ;main.c: 104:         tx(*b++);
   804     04E7  0871               	movf	txstr@b,w
   805     04E8  0084               	movwf	4
   806     04E9  0800               	movf	0,w
   807     04EA  120A  118A  2490  120A  118A  	fcall	_tx
   808     04EF                     l1171:
   809     04EF  3001               	movlw	1
   810     04F0  07F1               	addwf	txstr@b,f
   811     04F1                     l1173:
   812                           
   813                           ;main.c: 103:     while (*b) {
   814     04F1  0871               	movf	txstr@b,w
   815     04F2  0084               	movwf	4
   816     04F3  1383               	bcf	3,7	;select IRP bank0
   817     04F4  0800               	movf	0,w
   818     04F5  1D03               	btfss	3,2
   819     04F6  2CF8               	goto	u621
   820     04F7  2CF9               	goto	u620
   821     04F8                     u621:
   822     04F8  2CE7               	goto	l1169
   823     04F9                     u620:
   824     04F9                     l97:
   825     04F9  0008               	return
   826     04FA                     __end_of_txstr:
   827                           
   828                           	psect	text3
   829     0490                     __ptext3:	
   830 ;; *************** function _tx *****************
   831 ;; Defined at:
   832 ;;		line 97 in file "main.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  a               1    wreg     unsigned char 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  a               1    0[COMMON] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         1       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0
   849 ;;      Totals:         1       0       0       0       0
   850 ;;Total ram usage:        1 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;;		_txstr
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860     0490                     _tx:	
   861                           ;psect for function _tx
   862                           
   863                           
   864                           ;incstack = 0
   865                           ; Regs used in _tx: [wreg]
   866                           ;tx@a stored from wreg
   867     0490  00F0               	movwf	tx@a
   868     0491                     l1077:
   869     0491                     l88:	
   870                           ;main.c: 98:     while (!TXIF);
   871                           
   872     0491  1283               	bcf	3,5	;RP0=0, select bank0
   873     0492  1303               	bcf	3,6	;RP1=0, select bank0
   874     0493  1E0C               	btfss	12,4	;volatile
   875     0494  2C96               	goto	u551
   876     0495  2C97               	goto	u550
   877     0496                     u551:
   878     0496  2C91               	goto	l88
   879     0497                     u550:
   880     0497                     l1079:
   881                           
   882                           ;main.c: 99:     TXREG = a;
   883     0497  0870               	movf	tx@a,w
   884     0498  0099               	movwf	25	;volatile
   885     0499                     l91:
   886     0499  0008               	return
   887     049A                     __end_of_tx:
   888                           
   889                           	psect	text4
   890     0483                     __ptext4:	
   891 ;; *************** function _timer1_init *****************
   892 ;; Defined at:
   893 ;;		line 71 in file "main.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		None
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920     0483                     _timer1_init:	
   921                           ;psect for function _timer1_init
   922                           
   923     0483                     l1125:	
   924                           ;incstack = 0
   925                           ; Regs used in _timer1_init: []
   926                           
   927                           
   928                           ;main.c: 72:     T1CON = 0x31;
   929     0483  3031               	movlw	49
   930     0484  1283               	bcf	3,5	;RP0=0, select bank0
   931     0485  1303               	bcf	3,6	;RP1=0, select bank0
   932     0486  0090               	movwf	16	;volatile
   933     0487                     l73:
   934     0487  0008               	return
   935     0488                     __end_of_timer1_init:
   936                           
   937                           	psect	text5
   938     04FA                     __ptext5:	
   939 ;; *************** function _sprintf *****************
   940 ;; Defined at:
   941 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  s               1   16[BANK0 ] PTR unsigned char 
   944 ;;		 -> main@buffer(10), 
   945 ;;  fmt             1   17[BANK0 ] PTR const unsigned char 
   946 ;;		 -> STR_2(3), STR_1(10), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  f              11   22[BANK0 ] struct _IO_FILE
   949 ;;  ret             2    0        int 
   950 ;;  ap              1   21[BANK0 ] PTR void [1]
   951 ;;		 -> ?_sprintf(2), 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  2   16[BANK0 ] int 
   954 ;; Registers used:
   955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         0       4       0       0       0
   962 ;;      Locals:         0      12       0       0       0
   963 ;;      Temps:          0       1       0       0       0
   964 ;;      Totals:         0      17       0       0       0
   965 ;;Total ram usage:       17 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 4
   968 ;; This function calls:
   969 ;;		_vfprintf
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975     04FA                     _sprintf:	
   976                           ;psect for function _sprintf
   977                           
   978     04FA                     l1145:	
   979                           ;incstack = 0
   980                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   981                           
   982     04FA  3032               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
   983     04FB  1283               	bcf	3,5	;RP0=0, select bank0
   984     04FC  1303               	bcf	3,6	;RP1=0, select bank0
   985     04FD  00B5               	movwf	sprintf@ap
   986     04FE                     l1147:
   987     04FE  0830               	movf	sprintf@s,w
   988     04FF  00B6               	movwf	sprintf@f
   989     0500  3000               	movlw	0
   990     0501  00B7               	movwf	sprintf@f+1
   991     0502                     l1149:
   992     0502  01B8               	clrf	sprintf@f+2
   993     0503  01B9               	clrf	sprintf@f+3
   994     0504                     l1151:
   995     0504  01BF               	clrf	sprintf@f+9
   996     0505  01C0               	clrf	sprintf@f+10
   997     0506                     l1153:
   998     0506  3036               	movlw	low sprintf@f
   999     0507  00AC               	movwf	vfprintf@fp
  1000     0508  3000               	movlw	high sprintf@f
  1001     0509  00AD               	movwf	vfprintf@fp+1
  1002     050A  0831               	movf	sprintf@fmt,w
  1003     050B  00AE               	movwf	vfprintf@fmt
  1004     050C  3035               	movlw	(low (sprintf@ap| 0))& (0+255)
  1005     050D  00AF               	movwf	vfprintf@ap
  1006     050E  120A  118A  251D  120A  118A  	fcall	_vfprintf
  1007     0513                     l1155:
  1008     0513  1283               	bcf	3,5	;RP0=0, select bank0
  1009     0514  1303               	bcf	3,6	;RP1=0, select bank0
  1010     0515  0838               	movf	sprintf@f+2,w
  1011     0516  0730               	addwf	sprintf@s,w
  1012     0517  00B4               	movwf	??_sprintf
  1013     0518  0834               	movf	??_sprintf,w
  1014     0519  0084               	movwf	4
  1015     051A  1383               	bcf	3,7	;select IRP bank0
  1016     051B  0180               	clrf	0
  1017     051C                     l658:
  1018     051C  0008               	return
  1019     051D                     __end_of_sprintf:
  1020                           
  1021                           	psect	text6
  1022     051D                     __ptext6:	
  1023 ;; *************** function _vfprintf *****************
  1024 ;; Defined at:
  1025 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  1028 ;;		 -> sprintf@f(11), 
  1029 ;;  fmt             1   14[BANK0 ] PTR const unsigned char 
  1030 ;;		 -> STR_2(3), STR_1(10), 
  1031 ;;  ap              1   15[BANK0 ] PTR PTR void 
  1032 ;;		 -> sprintf@ap(1), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1035 ;;		 -> STR_2(3), STR_1(10), 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2   12[BANK0 ] int 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       4       0       0       0
  1046 ;;      Locals:         1       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0
  1048 ;;      Totals:         1       4       0       0       0
  1049 ;;Total ram usage:        5 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 3
  1052 ;; This function calls:
  1053 ;;		_vfpfcnvrt
  1054 ;; This function is called by:
  1055 ;;		_sprintf
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059     051D                     _vfprintf:	
  1060                           ;psect for function _vfprintf
  1061                           
  1062     051D                     l1089:	
  1063                           ;incstack = 0
  1064                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1065                           
  1066                           
  1067                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1068     051D  1283               	bcf	3,5	;RP0=0, select bank0
  1069     051E  1303               	bcf	3,6	;RP1=0, select bank0
  1070     051F  082E               	movf	vfprintf@fmt,w
  1071     0520  00FD               	movwf	vfprintf@cfmt
  1072                           
  1073                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1074     0521  2D31               	goto	l1093
  1075     0522                     l1091:
  1076                           
  1077                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1078     0522  1283               	bcf	3,5	;RP0=0, select bank0
  1079     0523  1303               	bcf	3,6	;RP1=0, select bank0
  1080     0524  082C               	movf	vfprintf@fp,w
  1081     0525  00A0               	movwf	vfpfcnvrt@fp
  1082     0526  082D               	movf	vfprintf@fp+1,w
  1083     0527  00A1               	movwf	vfpfcnvrt@fp+1
  1084     0528  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1085     0529  00A2               	movwf	vfpfcnvrt@fmt
  1086     052A  082F               	movf	vfprintf@ap,w
  1087     052B  00A3               	movwf	vfpfcnvrt@ap
  1088     052C  120A  118A  2728  120A  118A  	fcall	_vfpfcnvrt
  1089     0531                     l1093:
  1090                           
  1091                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1092     0531  087D               	movf	vfprintf@cfmt,w
  1093     0532  0084               	movwf	4
  1094     0533  120A  118A  2003  120A  118A  	fcall	stringdir
  1095     0538  3A00               	xorlw	0
  1096     0539  1D03               	skipz
  1097     053A  2D3C               	goto	u561
  1098     053B  2D3D               	goto	u560
  1099     053C                     u561:
  1100     053C  2D22               	goto	l1091
  1101     053D                     u560:
  1102     053D                     l1095:
  1103                           
  1104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1105     053D  1283               	bcf	3,5	;RP0=0, select bank0
  1106     053E  1303               	bcf	3,6	;RP1=0, select bank0
  1107     053F  01AC               	clrf	?_vfprintf
  1108     0540  01AD               	clrf	?_vfprintf+1
  1109     0541                     l702:
  1110     0541  0008               	return
  1111     0542                     __end_of_vfprintf:
  1112                           
  1113                           	psect	text7
  1114     0728                     __ptext7:	
  1115 ;; *************** function _vfpfcnvrt *****************
  1116 ;; Defined at:
  1117 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1120 ;;		 -> sprintf@f(11), 
  1121 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1122 ;;		 -> vfprintf@cfmt(1), 
  1123 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1124 ;;		 -> sprintf@ap(1), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  convarg         4    6[BANK0 ] struct .
  1127 ;;  c               1   11[BANK0 ] unsigned char 
  1128 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  1129 ;;		 -> STR_2(3), STR_1(10), 
  1130 ;;  done            1    0        _Bool 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         0       4       0       0       0
  1141 ;;      Locals:         0       6       0       0       0
  1142 ;;      Temps:          0       2       0       0       0
  1143 ;;      Totals:         0      12       0       0       0
  1144 ;;Total ram usage:       12 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 2
  1147 ;; This function calls:
  1148 ;;		___lwdiv
  1149 ;;		___lwmod
  1150 ;;		_fputc
  1151 ;; This function is called by:
  1152 ;;		_vfprintf
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156     0728                     _vfpfcnvrt:	
  1157                           ;psect for function _vfpfcnvrt
  1158                           
  1159     0728                     l1025:	
  1160                           ;incstack = 0
  1161                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1162                           
  1163                           
  1164                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1165     0728  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0729  1303               	bcf	3,6	;RP1=0, select bank0
  1167     072A  0822               	movf	vfpfcnvrt@fmt,w
  1168     072B  0084               	movwf	4
  1169     072C  0800               	movf	0,w
  1170     072D  0084               	movwf	4
  1171     072E  120A  118A  2003  120A  118A  	fcall	stringdir
  1172     0733  3A25               	xorlw	37
  1173     0734  1D03               	skipz
  1174     0735  2F37               	goto	u501
  1175     0736  2F38               	goto	u500
  1176     0737                     u501:
  1177     0737  2FD2               	goto	l1063
  1178     0738                     u500:
  1179     0738                     l1027:
  1180                           
  1181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1182     0738  0822               	movf	vfpfcnvrt@fmt,w
  1183     0739  0084               	movwf	4
  1184     073A  3001               	movlw	1
  1185     073B  0780               	addwf	0,f
  1186     073C                     l1029:
  1187                           
  1188                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1189     073C  01D0               	clrf	_width
  1190     073D  01D1               	clrf	_width+1
  1191     073E  3000               	movlw	0
  1192     073F  00D4               	movwf	_flags
  1193     0740                     l1031:
  1194                           
  1195                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1196     0740  30FF               	movlw	255
  1197     0741  00D2               	movwf	_prec
  1198     0742  30FF               	movlw	255
  1199     0743  00D3               	movwf	_prec+1
  1200     0744                     l1033:
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1203     0744  0822               	movf	vfpfcnvrt@fmt,w
  1204     0745  0084               	movwf	4
  1205     0746  0800               	movf	0,w
  1206     0747  00AA               	movwf	vfpfcnvrt@cp
  1207     0748                     l1035:
  1208     0748  082A               	movf	vfpfcnvrt@cp,w
  1209     0749  0084               	movwf	4
  1210     074A  120A  118A  2003  120A  118A  	fcall	stringdir
  1211     074F  3A75               	xorlw	117
  1212     0750  1D03               	skipz
  1213     0751  2F53               	goto	u511
  1214     0752  2F54               	goto	u510
  1215     0753                     u511:
  1216     0753  2FCB               	goto	l1059
  1217     0754                     u510:
  1218     0754                     l1037:
  1219                           
  1220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1221     0754  0823               	movf	vfpfcnvrt@ap,w
  1222     0755  0084               	movwf	4
  1223     0756  1383               	bcf	3,7	;select IRP bank0
  1224     0757  0800               	movf	0,w
  1225     0758  00FF               	movwf	btemp+1
  1226     0759  3002               	movlw	2
  1227     075A  0780               	addwf	0,f
  1228     075B  087F               	movf	btemp+1,w
  1229     075C  0084               	movwf	4
  1230     075D  0800               	movf	0,w
  1231     075E  00A6               	movwf	vfpfcnvrt@convarg
  1232     075F  0A84               	incf	4,f
  1233     0760  0800               	movf	0,w
  1234     0761  00A7               	movwf	vfpfcnvrt@convarg+1
  1235     0762                     l1039:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1238     0762  0822               	movf	vfpfcnvrt@fmt,w
  1239     0763  0084               	movwf	4
  1240     0764  082A               	movf	vfpfcnvrt@cp,w
  1241     0765  3E01               	addlw	1
  1242     0766  0080               	movwf	0
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1245     0767  2FC0               	goto	l1057
  1246     0768                     l687:	
  1247                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  1248                           
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1251     0768  3020               	movlw	32
  1252     0769  00AB               	movwf	vfpfcnvrt@c
  1253     076A                     l1041:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1256     076A  3001               	movlw	1
  1257     076B  02AB               	subwf	vfpfcnvrt@c,f
  1258     076C  082B               	movf	vfpfcnvrt@c,w
  1259     076D  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1260     076E  0084               	movwf	4
  1261     076F  300A               	movlw	10
  1262     0770  00F0               	movwf	___lwmod@divisor
  1263     0771  3000               	movlw	0
  1264     0772  00F1               	movwf	___lwmod@divisor+1
  1265     0773  0827               	movf	vfpfcnvrt@convarg+1,w
  1266     0774  00F3               	movwf	___lwmod@dividend+1
  1267     0775  0826               	movf	vfpfcnvrt@convarg,w
  1268     0776  00F2               	movwf	___lwmod@dividend
  1269     0777  120A  118A  2569  120A  118A  	fcall	___lwmod
  1270     077C  0870               	movf	?___lwmod,w
  1271     077D  3E30               	addlw	48
  1272     077E  1383               	bcf	3,7	;select IRP bank1
  1273     077F  0080               	movwf	0
  1274     0780                     l1043:
  1275                           
  1276                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1277     0780  300A               	movlw	10
  1278     0781  00F0               	movwf	___lwdiv@divisor
  1279     0782  3000               	movlw	0
  1280     0783  00F1               	movwf	___lwdiv@divisor+1
  1281     0784  1283               	bcf	3,5	;RP0=0, select bank0
  1282     0785  1303               	bcf	3,6	;RP1=0, select bank0
  1283     0786  0827               	movf	vfpfcnvrt@convarg+1,w
  1284     0787  00F3               	movwf	___lwdiv@dividend+1
  1285     0788  0826               	movf	vfpfcnvrt@convarg,w
  1286     0789  00F2               	movwf	___lwdiv@dividend
  1287     078A  120A  118A  25DD  120A  118A  	fcall	___lwdiv
  1288     078F  0871               	movf	?___lwdiv+1,w
  1289     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1290     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1291     0792  00A7               	movwf	vfpfcnvrt@convarg+1
  1292     0793  0870               	movf	?___lwdiv,w
  1293     0794  00A6               	movwf	vfpfcnvrt@convarg
  1294     0795                     l1045:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1297     0795  0826               	movf	vfpfcnvrt@convarg,w
  1298     0796  0427               	iorwf	vfpfcnvrt@convarg+1,w
  1299     0797  1903               	btfsc	3,2
  1300     0798  2F9A               	goto	u521
  1301     0799  2F9B               	goto	u520
  1302     079A                     u521:
  1303     079A  2FB9               	goto	l1053
  1304     079B                     u520:
  1305     079B                     l1047:
  1306     079B  082B               	movf	vfpfcnvrt@c,w
  1307     079C  1D03               	btfss	3,2
  1308     079D  2F9F               	goto	u531
  1309     079E  2FA0               	goto	u530
  1310     079F                     u531:
  1311     079F  2F6A               	goto	l1041
  1312     07A0                     u530:
  1313     07A0  2FB9               	goto	l1053
  1314     07A1                     l1049:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1317     07A1  082B               	movf	vfpfcnvrt@c,w
  1318     07A2  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1319     07A3  0084               	movwf	4
  1320     07A4  1383               	bcf	3,7	;select IRP bank1
  1321     07A5  0800               	movf	0,w
  1322     07A6  00A4               	movwf	??_vfpfcnvrt
  1323     07A7  01A5               	clrf	??_vfpfcnvrt+1
  1324     07A8  0824               	movf	??_vfpfcnvrt,w
  1325     07A9  00F0               	movwf	fputc@c
  1326     07AA  0825               	movf	??_vfpfcnvrt+1,w
  1327     07AB  00F1               	movwf	fputc@c+1
  1328     07AC  0820               	movf	vfpfcnvrt@fp,w
  1329     07AD  00F2               	movwf	fputc@fp
  1330     07AE  0821               	movf	vfpfcnvrt@fp+1,w
  1331     07AF  00F3               	movwf	fputc@fp+1
  1332     07B0  120A  118A  268E  120A  118A  	fcall	_fputc
  1333     07B5                     l1051:
  1334     07B5  3001               	movlw	1
  1335     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1336     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1337     07B8  07AB               	addwf	vfpfcnvrt@c,f
  1338     07B9                     l1053:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1341     07B9  3020               	movlw	32
  1342     07BA  062B               	xorwf	vfpfcnvrt@c,w
  1343     07BB  1D03               	btfss	3,2
  1344     07BC  2FBE               	goto	u541
  1345     07BD  2FBF               	goto	u540
  1346     07BE                     u541:
  1347     07BE  2FA1               	goto	l1049
  1348     07BF                     u540:
  1349     07BF  2FEB               	goto	l695
  1350     07C0                     l1057:
  1351     07C0  082A               	movf	vfpfcnvrt@cp,w
  1352     07C1  0084               	movwf	4
  1353     07C2  120A  118A  2003  120A  118A  	fcall	stringdir
  1354                           
  1355                           ; Switch size 1, requested type "simple"
  1356                           ; Number of cases is 1, Range of values is 117 to 117
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; simple_byte            4     3 (average)
  1360                           ; direct_byte           14    11 (fixed)
  1361                           ; jumptable            263     9 (fixed)
  1362                           ;	Chosen strategy is simple_byte
  1363     07C7  3A75               	xorlw	117	; case 117
  1364     07C8  1903               	skipnz
  1365     07C9  2F68               	goto	l687
  1366     07CA  2FCB               	goto	l1059
  1367     07CB                     l1059:
  1368                           
  1369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1370     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1371     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1372     07CD  0822               	movf	vfpfcnvrt@fmt,w
  1373     07CE  0084               	movwf	4
  1374     07CF  3001               	movlw	1
  1375     07D0  0780               	addwf	0,f
  1376     07D1  2FEB               	goto	l695
  1377     07D2                     l1063:
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1380     07D2  0822               	movf	vfpfcnvrt@fmt,w
  1381     07D3  0084               	movwf	4
  1382     07D4  0800               	movf	0,w
  1383     07D5  0084               	movwf	4
  1384     07D6  120A  118A  2003  120A  118A  	fcall	stringdir
  1385     07DB  00A4               	movwf	??_vfpfcnvrt
  1386     07DC  01A5               	clrf	??_vfpfcnvrt+1
  1387     07DD  0824               	movf	??_vfpfcnvrt,w
  1388     07DE  00F0               	movwf	fputc@c
  1389     07DF  0825               	movf	??_vfpfcnvrt+1,w
  1390     07E0  00F1               	movwf	fputc@c+1
  1391     07E1  0820               	movf	vfpfcnvrt@fp,w
  1392     07E2  00F2               	movwf	fputc@fp
  1393     07E3  0821               	movf	vfpfcnvrt@fp+1,w
  1394     07E4  00F3               	movwf	fputc@fp+1
  1395     07E5  120A  118A  268E  120A  118A  	fcall	_fputc
  1396     07EA  2FCB               	goto	l1059
  1397     07EB                     l695:
  1398     07EB  0008               	return
  1399     07EC                     __end_of_vfpfcnvrt:
  1400                           
  1401                           	psect	text8
  1402     068E                     __ptext8:	
  1403 ;; *************** function _fputc *****************
  1404 ;; Defined at:
  1405 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  c               2    0[COMMON] int 
  1408 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1409 ;;		 -> sprintf@f(11), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  2    0[COMMON] int 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         4       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          9       0       0       0       0
  1424 ;;      Totals:        13       0       0       0       0
  1425 ;;Total ram usage:       13 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; Hardware stack levels required when called: 1
  1428 ;; This function calls:
  1429 ;;		_putch
  1430 ;; This function is called by:
  1431 ;;		_vfpfcnvrt
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435     068E                     _fputc:	
  1436                           ;psect for function _fputc
  1437                           
  1438     068E                     l1011:	
  1439                           ;incstack = 0
  1440                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1441                           
  1442     068E  0872               	movf	fputc@fp,w
  1443     068F  0473               	iorwf	fputc@fp+1,w
  1444     0690  1903               	btfsc	3,2
  1445     0691  2E93               	goto	u451
  1446     0692  2E94               	goto	u450
  1447     0693                     u451:
  1448     0693  2E9A               	goto	l1015
  1449     0694                     u450:
  1450     0694                     l1013:
  1451     0694  0872               	movf	fputc@fp,w
  1452     0695  0473               	iorwf	fputc@fp+1,w
  1453     0696  1D03               	btfss	3,2
  1454     0697  2E99               	goto	u461
  1455     0698  2E9A               	goto	u460
  1456     0699                     u461:
  1457     0699  2EA1               	goto	l1017
  1458     069A                     u460:
  1459     069A                     l1015:
  1460     069A  0870               	movf	fputc@c,w
  1461     069B  120A  118A  2482  120A  118A  	fcall	_putch
  1462     06A0  2F27               	goto	l714
  1463     06A1                     l1017:
  1464     06A1  0872               	movf	fputc@fp,w
  1465     06A2  3E09               	addlw	9
  1466     06A3  00F4               	movwf	??_fputc
  1467     06A4  0873               	movf	fputc@fp+1,w
  1468     06A5  1803               	skipnc
  1469     06A6  3E01               	addlw	1
  1470     06A7  3E00               	addlw	0
  1471     06A8  00F5               	movwf	??_fputc+1
  1472     06A9  0874               	movf	??_fputc,w
  1473     06AA  0084               	movwf	4
  1474     06AB  1783               	bsf	3,7
  1475     06AC  1C75               	btfss	??_fputc+1,0
  1476     06AD  1383               	bcf	3,7
  1477     06AE  0800               	movf	0,w
  1478     06AF  00F6               	movwf	??_fputc+2
  1479     06B0  0A84               	incf	4,f
  1480     06B1  0800               	movf	0,w
  1481     06B2  00F7               	movwf	??_fputc+3
  1482     06B3  0876               	movf	??_fputc+2,w
  1483     06B4  0477               	iorwf	??_fputc+3,w
  1484     06B5  1903               	btfsc	3,2
  1485     06B6  2EB8               	goto	u471
  1486     06B7  2EB9               	goto	u470
  1487     06B8                     u471:
  1488     06B8  2EEB               	goto	l1021
  1489     06B9                     u470:
  1490     06B9                     l1019:
  1491     06B9  0872               	movf	fputc@fp,w
  1492     06BA  3E09               	addlw	9
  1493     06BB  00F4               	movwf	??_fputc
  1494     06BC  0873               	movf	fputc@fp+1,w
  1495     06BD  1803               	skipnc
  1496     06BE  3E01               	addlw	1
  1497     06BF  3E00               	addlw	0
  1498     06C0  00F5               	movwf	??_fputc+1
  1499     06C1  0874               	movf	??_fputc,w
  1500     06C2  0084               	movwf	4
  1501     06C3  1783               	bsf	3,7
  1502     06C4  1C75               	btfss	??_fputc+1,0
  1503     06C5  1383               	bcf	3,7
  1504     06C6  0800               	movf	0,w
  1505     06C7  00F6               	movwf	??_fputc+2
  1506     06C8  0A84               	incf	4,f
  1507     06C9  0800               	movf	0,w
  1508     06CA  00F7               	movwf	??_fputc+3
  1509     06CB  0872               	movf	fputc@fp,w
  1510     06CC  3E02               	addlw	2
  1511     06CD  00F8               	movwf	??_fputc+4
  1512     06CE  0873               	movf	fputc@fp+1,w
  1513     06CF  1803               	skipnc
  1514     06D0  3E01               	addlw	1
  1515     06D1  3E00               	addlw	0
  1516     06D2  00F9               	movwf	??_fputc+5
  1517     06D3  0878               	movf	??_fputc+4,w
  1518     06D4  0084               	movwf	4
  1519     06D5  1783               	bsf	3,7
  1520     06D6  1C79               	btfss	??_fputc+5,0
  1521     06D7  1383               	bcf	3,7
  1522     06D8  0800               	movf	0,w
  1523     06D9  00FA               	movwf	??_fputc+6
  1524     06DA  0A84               	incf	4,f
  1525     06DB  0800               	movf	0,w
  1526     06DC  00FB               	movwf	??_fputc+7
  1527     06DD  087B               	movf	??_fputc+7,w
  1528     06DE  3A80               	xorlw	128
  1529     06DF  00FC               	movwf	??_fputc+8
  1530     06E0  0877               	movf	??_fputc+3,w
  1531     06E1  3A80               	xorlw	128
  1532     06E2  027C               	subwf	??_fputc+8,w
  1533     06E3  1D03               	skipz
  1534     06E4  2EE7               	goto	u485
  1535     06E5  0876               	movf	??_fputc+2,w
  1536     06E6  027A               	subwf	??_fputc+6,w
  1537     06E7                     u485:
  1538     06E7  1803               	skipnc
  1539     06E8  2EEA               	goto	u481
  1540     06E9  2EEB               	goto	u480
  1541     06EA                     u481:
  1542     06EA  2F27               	goto	l714
  1543     06EB                     u480:
  1544     06EB                     l1021:
  1545     06EB  0872               	movf	fputc@fp,w
  1546     06EC  0084               	movwf	4
  1547     06ED  1783               	bsf	3,7
  1548     06EE  1C73               	btfss	fputc@fp+1,0
  1549     06EF  1383               	bcf	3,7
  1550     06F0  0800               	movf	0,w
  1551     06F1  00F4               	movwf	??_fputc
  1552     06F2  0A84               	incf	4,f
  1553     06F3  0800               	movf	0,w
  1554     06F4  00F5               	movwf	??_fputc+1
  1555     06F5  0872               	movf	fputc@fp,w
  1556     06F6  3E02               	addlw	2
  1557     06F7  00F6               	movwf	??_fputc+2
  1558     06F8  0873               	movf	fputc@fp+1,w
  1559     06F9  1803               	skipnc
  1560     06FA  3E01               	addlw	1
  1561     06FB  3E00               	addlw	0
  1562     06FC  00F7               	movwf	??_fputc+3
  1563     06FD  0876               	movf	??_fputc+2,w
  1564     06FE  0084               	movwf	4
  1565     06FF  1783               	bsf	3,7
  1566     0700  1C77               	btfss	??_fputc+3,0
  1567     0701  1383               	bcf	3,7
  1568     0702  0800               	movf	0,w
  1569     0703  0774               	addwf	??_fputc,w
  1570     0704  00F9               	movwf	??_fputc+5
  1571     0705  0875               	movf	??_fputc+1,w
  1572     0706  00F8               	movwf	??_fputc+4
  1573     0707  1803               	skipnc
  1574     0708  0AF8               	incf	??_fputc+4,f
  1575     0709  1F80               	btfss	0,7
  1576     070A  2F0C               	goto	u490
  1577     070B  03F8               	decf	??_fputc+4,f
  1578     070C                     u490:
  1579     070C  0878               	movf	??_fputc+4,w
  1580     070D  00FA               	movwf	??_fputc+6
  1581     070E  0879               	movf	??_fputc+5,w
  1582     070F  0084               	movwf	4
  1583     0710  1783               	bsf	3,7
  1584     0711  1C7A               	btfss	??_fputc+6,0
  1585     0712  1383               	bcf	3,7
  1586     0713  0870               	movf	fputc@c,w
  1587     0714  0080               	movwf	0
  1588     0715  0872               	movf	fputc@fp,w
  1589     0716  3E02               	addlw	2
  1590     0717  00F4               	movwf	??_fputc
  1591     0718  0873               	movf	fputc@fp+1,w
  1592     0719  1803               	skipnc
  1593     071A  3E01               	addlw	1
  1594     071B  3E00               	addlw	0
  1595     071C  00F5               	movwf	??_fputc+1
  1596     071D  0874               	movf	??_fputc,w
  1597     071E  0084               	movwf	4
  1598     071F  1783               	bsf	3,7
  1599     0720  1C75               	btfss	??_fputc+1,0
  1600     0721  1383               	bcf	3,7
  1601     0722  3001               	movlw	1
  1602     0723  0780               	addwf	0,f
  1603     0724  0A84               	incf	4,f
  1604     0725  1803               	skipnc
  1605     0726  0A80               	incf	0,f
  1606     0727                     l714:
  1607     0727  0008               	return
  1608     0728                     __end_of_fputc:
  1609                           
  1610                           	psect	text9
  1611     0482                     __ptext9:	
  1612 ;; *************** function _putch *****************
  1613 ;; Defined at:
  1614 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  c               1    wreg     unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  c               1    0[COMMON] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         0       0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_fputc
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641     0482                     _putch:	
  1642                           ;psect for function _putch
  1643                           
  1644     0482                     l725:	
  1645                           ;incstack = 0
  1646                           ; Regs used in _putch: [wreg]
  1647                           
  1648     0482  0008               	return
  1649     0483                     __end_of_putch:
  1650                           
  1651                           	psect	text10
  1652     0569                     __ptext10:	
  1653 ;; *************** function ___lwmod *****************
  1654 ;; Defined at:
  1655 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  divisor         2    0[COMMON] unsigned int 
  1658 ;;  dividend        2    2[COMMON] unsigned int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  counter         1    4[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2    0[COMMON] unsigned int 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         4       0       0       0       0
  1671 ;;      Locals:         1       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         5       0       0       0       0
  1674 ;;Total ram usage:        5 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_vfpfcnvrt
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     0569                     ___lwmod:	
  1684                           ;psect for function ___lwmod
  1685                           
  1686     0569                     l989:	
  1687                           ;incstack = 0
  1688                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1689                           
  1690     0569  0870               	movf	___lwmod@divisor,w
  1691     056A  0471               	iorwf	___lwmod@divisor+1,w
  1692     056B  1903               	btfsc	3,2
  1693     056C  2D6E               	goto	u391
  1694     056D  2D6F               	goto	u390
  1695     056E                     u391:
  1696     056E  2D9C               	goto	l1007
  1697     056F                     u390:
  1698     056F                     l991:
  1699     056F  3001               	movlw	1
  1700     0570  00F4               	movwf	___lwmod@counter
  1701     0571  2D7B               	goto	l997
  1702     0572                     l993:
  1703     0572  3001               	movlw	1
  1704     0573                     u405:
  1705     0573  1003               	clrc
  1706     0574  0DF0               	rlf	___lwmod@divisor,f
  1707     0575  0DF1               	rlf	___lwmod@divisor+1,f
  1708     0576  3EFF               	addlw	-1
  1709     0577  1D03               	skipz
  1710     0578  2D73               	goto	u405
  1711     0579                     l995:
  1712     0579  3001               	movlw	1
  1713     057A  07F4               	addwf	___lwmod@counter,f
  1714     057B                     l997:
  1715     057B  1FF1               	btfss	___lwmod@divisor+1,7
  1716     057C  2D7E               	goto	u411
  1717     057D  2D7F               	goto	u410
  1718     057E                     u411:
  1719     057E  2D72               	goto	l993
  1720     057F                     u410:
  1721     057F                     l999:
  1722     057F  0871               	movf	___lwmod@divisor+1,w
  1723     0580  0273               	subwf	___lwmod@dividend+1,w
  1724     0581  1D03               	skipz
  1725     0582  2D85               	goto	u425
  1726     0583  0870               	movf	___lwmod@divisor,w
  1727     0584  0272               	subwf	___lwmod@dividend,w
  1728     0585                     u425:
  1729     0585  1C03               	skipc
  1730     0586  2D88               	goto	u421
  1731     0587  2D89               	goto	u420
  1732     0588                     u421:
  1733     0588  2D8F               	goto	l1003
  1734     0589                     u420:
  1735     0589                     l1001:
  1736     0589  0870               	movf	___lwmod@divisor,w
  1737     058A  02F2               	subwf	___lwmod@dividend,f
  1738     058B  0871               	movf	___lwmod@divisor+1,w
  1739     058C  1C03               	skipc
  1740     058D  03F3               	decf	___lwmod@dividend+1,f
  1741     058E  02F3               	subwf	___lwmod@dividend+1,f
  1742     058F                     l1003:
  1743     058F  3001               	movlw	1
  1744     0590                     u435:
  1745     0590  1003               	clrc
  1746     0591  0CF1               	rrf	___lwmod@divisor+1,f
  1747     0592  0CF0               	rrf	___lwmod@divisor,f
  1748     0593  3EFF               	addlw	-1
  1749     0594  1D03               	skipz
  1750     0595  2D90               	goto	u435
  1751     0596                     l1005:
  1752     0596  3001               	movlw	1
  1753     0597  02F4               	subwf	___lwmod@counter,f
  1754     0598  1D03               	btfss	3,2
  1755     0599  2D9B               	goto	u441
  1756     059A  2D9C               	goto	u440
  1757     059B                     u441:
  1758     059B  2D7F               	goto	l999
  1759     059C                     u440:
  1760     059C                     l1007:
  1761     059C  0873               	movf	___lwmod@dividend+1,w
  1762     059D  00F1               	movwf	?___lwmod+1
  1763     059E  0872               	movf	___lwmod@dividend,w
  1764     059F  00F0               	movwf	?___lwmod
  1765     05A0                     l485:
  1766     05A0  0008               	return
  1767     05A1                     __end_of___lwmod:
  1768                           
  1769                           	psect	text11
  1770     05DD                     __ptext11:	
  1771 ;; *************** function ___lwdiv *****************
  1772 ;; Defined at:
  1773 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  divisor         2    0[COMMON] unsigned int 
  1776 ;;  dividend        2    2[COMMON] unsigned int 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  quotient        2    4[COMMON] unsigned int 
  1779 ;;  counter         1    6[COMMON] unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  2    0[COMMON] unsigned int 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         4       0       0       0       0
  1790 ;;      Locals:         3       0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0
  1792 ;;      Totals:         7       0       0       0       0
  1793 ;;Total ram usage:        7 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		_vfpfcnvrt
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802     05DD                     ___lwdiv:	
  1803                           ;psect for function ___lwdiv
  1804                           
  1805     05DD                     l963:	
  1806                           ;incstack = 0
  1807                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1808                           
  1809     05DD  01F4               	clrf	___lwdiv@quotient
  1810     05DE  01F5               	clrf	___lwdiv@quotient+1
  1811     05DF                     l965:
  1812     05DF  0870               	movf	___lwdiv@divisor,w
  1813     05E0  0471               	iorwf	___lwdiv@divisor+1,w
  1814     05E1  1903               	btfsc	3,2
  1815     05E2  2DE4               	goto	u321
  1816     05E3  2DE5               	goto	u320
  1817     05E4                     u321:
  1818     05E4  2E1A               	goto	l985
  1819     05E5                     u320:
  1820     05E5                     l967:
  1821     05E5  3001               	movlw	1
  1822     05E6  00F6               	movwf	___lwdiv@counter
  1823     05E7  2DF1               	goto	l973
  1824     05E8                     l969:
  1825     05E8  3001               	movlw	1
  1826     05E9                     u335:
  1827     05E9  1003               	clrc
  1828     05EA  0DF0               	rlf	___lwdiv@divisor,f
  1829     05EB  0DF1               	rlf	___lwdiv@divisor+1,f
  1830     05EC  3EFF               	addlw	-1
  1831     05ED  1D03               	skipz
  1832     05EE  2DE9               	goto	u335
  1833     05EF                     l971:
  1834     05EF  3001               	movlw	1
  1835     05F0  07F6               	addwf	___lwdiv@counter,f
  1836     05F1                     l973:
  1837     05F1  1FF1               	btfss	___lwdiv@divisor+1,7
  1838     05F2  2DF4               	goto	u341
  1839     05F3  2DF5               	goto	u340
  1840     05F4                     u341:
  1841     05F4  2DE8               	goto	l969
  1842     05F5                     u340:
  1843     05F5                     l975:
  1844     05F5  3001               	movlw	1
  1845     05F6                     u355:
  1846     05F6  1003               	clrc
  1847     05F7  0DF4               	rlf	___lwdiv@quotient,f
  1848     05F8  0DF5               	rlf	___lwdiv@quotient+1,f
  1849     05F9  3EFF               	addlw	-1
  1850     05FA  1D03               	skipz
  1851     05FB  2DF6               	goto	u355
  1852     05FC  0871               	movf	___lwdiv@divisor+1,w
  1853     05FD  0273               	subwf	___lwdiv@dividend+1,w
  1854     05FE  1D03               	skipz
  1855     05FF  2E02               	goto	u365
  1856     0600  0870               	movf	___lwdiv@divisor,w
  1857     0601  0272               	subwf	___lwdiv@dividend,w
  1858     0602                     u365:
  1859     0602  1C03               	skipc
  1860     0603  2E05               	goto	u361
  1861     0604  2E06               	goto	u360
  1862     0605                     u361:
  1863     0605  2E0D               	goto	l981
  1864     0606                     u360:
  1865     0606                     l977:
  1866     0606  0870               	movf	___lwdiv@divisor,w
  1867     0607  02F2               	subwf	___lwdiv@dividend,f
  1868     0608  0871               	movf	___lwdiv@divisor+1,w
  1869     0609  1C03               	skipc
  1870     060A  03F3               	decf	___lwdiv@dividend+1,f
  1871     060B  02F3               	subwf	___lwdiv@dividend+1,f
  1872     060C                     l979:
  1873     060C  1474               	bsf	___lwdiv@quotient,0
  1874     060D                     l981:
  1875     060D  3001               	movlw	1
  1876     060E                     u375:
  1877     060E  1003               	clrc
  1878     060F  0CF1               	rrf	___lwdiv@divisor+1,f
  1879     0610  0CF0               	rrf	___lwdiv@divisor,f
  1880     0611  3EFF               	addlw	-1
  1881     0612  1D03               	skipz
  1882     0613  2E0E               	goto	u375
  1883     0614                     l983:
  1884     0614  3001               	movlw	1
  1885     0615  02F6               	subwf	___lwdiv@counter,f
  1886     0616  1D03               	btfss	3,2
  1887     0617  2E19               	goto	u381
  1888     0618  2E1A               	goto	u380
  1889     0619                     u381:
  1890     0619  2DF5               	goto	l975
  1891     061A                     u380:
  1892     061A                     l985:
  1893     061A  0875               	movf	___lwdiv@quotient+1,w
  1894     061B  00F1               	movwf	?___lwdiv+1
  1895     061C  0874               	movf	___lwdiv@quotient,w
  1896     061D  00F0               	movwf	?___lwdiv
  1897     061E                     l475:
  1898     061E  0008               	return
  1899     061F                     __end_of___lwdiv:
  1900                           
  1901                           	psect	text12
  1902     04D2                     __ptext12:	
  1903 ;; *************** function _show *****************
  1904 ;; Defined at:
  1905 ;;		line 91 in file "main.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  s               1    3[COMMON] PTR unsigned char 
  1908 ;;		 -> main@buffer(10), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         1       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0
  1923 ;;      Totals:         1       0       0       0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 1
  1927 ;; This function calls:
  1928 ;;		_dat
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934     04D2                     _show:	
  1935                           ;psect for function _show
  1936                           
  1937     04D2                     l1159:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1940                           
  1941                           
  1942                           ;main.c: 92:     while (*s) {
  1943     04D2  2CDD               	goto	l1165
  1944     04D3                     l1161:
  1945                           
  1946                           ;main.c: 93:         dat(*s++);
  1947     04D3  0873               	movf	show@s,w
  1948     04D4  0084               	movwf	4
  1949     04D5  0800               	movf	0,w
  1950     04D6  120A  118A  24BE  120A  118A  	fcall	_dat
  1951     04DB                     l1163:
  1952     04DB  3001               	movlw	1
  1953     04DC  07F3               	addwf	show@s,f
  1954     04DD                     l1165:
  1955                           
  1956                           ;main.c: 92:     while (*s) {
  1957     04DD  0873               	movf	show@s,w
  1958     04DE  0084               	movwf	4
  1959     04DF  1383               	bcf	3,7	;select IRP bank0
  1960     04E0  0800               	movf	0,w
  1961     04E1  1D03               	btfss	3,2
  1962     04E2  2CE4               	goto	u611
  1963     04E3  2CE5               	goto	u610
  1964     04E4                     u611:
  1965     04E4  2CD3               	goto	l1161
  1966     04E5                     u610:
  1967     04E5                     l85:
  1968     04E5  0008               	return
  1969     04E6                     __end_of_show:
  1970                           
  1971                           	psect	text13
  1972     04BE                     __ptext13:	
  1973 ;; *************** function _dat *****************
  1974 ;; Defined at:
  1975 ;;		line 83 in file "main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  b               1    wreg     unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  b               1    2[COMMON] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         0       0       0       0       0
  1990 ;;      Locals:         1       0       0       0       0
  1991 ;;      Temps:          2       0       0       0       0
  1992 ;;      Totals:         3       0       0       0       0
  1993 ;;Total ram usage:        3 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_show
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002     04BE                     _dat:	
  2003                           ;psect for function _dat
  2004                           
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _dat: [wreg]
  2008                           ;dat@b stored from wreg
  2009     04BE  00F2               	movwf	dat@b
  2010     04BF                     l1081:
  2011                           
  2012                           ;main.c: 84:     PORTB = b;
  2013     04BF  0872               	movf	dat@b,w
  2014     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2015     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2016     04C2  0086               	movwf	6	;volatile
  2017     04C3                     l1083:
  2018                           
  2019                           ;main.c: 85:     RC0 = 1;
  2020     04C3  1407               	bsf	7,0	;volatile
  2021     04C4                     l1085:
  2022                           
  2023                           ;main.c: 86:     RC1 = 1;
  2024     04C4  1487               	bsf	7,1	;volatile
  2025                           
  2026                           ;main.c: 87:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2027     04C5  300D               	movlw	13
  2028     04C6  00F1               	movwf	??_dat+1
  2029     04C7  30FB               	movlw	251
  2030     04C8  00F0               	movwf	??_dat
  2031     04C9                     u647:
  2032     04C9  0BF0               	decfsz	??_dat,f
  2033     04CA  2CC9               	goto	u647
  2034     04CB  0BF1               	decfsz	??_dat+1,f
  2035     04CC  2CC9               	goto	u647
  2036     04CD  2CCE               	nop2
  2037     04CE                     l1087:
  2038                           
  2039                           ;main.c: 88:     RC1 = 0;
  2040     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2041     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2042     04D0  1087               	bcf	7,1	;volatile
  2043     04D1                     l79:
  2044     04D1  0008               	return
  2045     04D2                     __end_of_dat:
  2046                           
  2047                           	psect	text14
  2048     0542                     __ptext14:	
  2049 ;; *************** function _lcd_init *****************
  2050 ;; Defined at:
  2051 ;;		line 60 in file "main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0
  2067 ;;      Temps:          2       0       0       0       0
  2068 ;;      Totals:         2       0       0       0       0
  2069 ;;Total ram usage:        2 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 1
  2072 ;; This function calls:
  2073 ;;		_cmd
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079     0542                     _lcd_init:	
  2080                           ;psect for function _lcd_init
  2081                           
  2082     0542                     l1099:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2085                           
  2086                           
  2087                           ;main.c: 61:     TRISB = 0x00;
  2088     0542  1683               	bsf	3,5	;RP0=1, select bank1
  2089     0543  1303               	bcf	3,6	;RP1=0, select bank1
  2090     0544  0186               	clrf	6	;volatile
  2091     0545                     l1101:
  2092                           
  2093                           ;main.c: 62:     TRISCbits.TRISC0 = 0;
  2094     0545  1007               	bcf	7,0	;volatile
  2095     0546                     l1103:
  2096                           
  2097                           ;main.c: 63:     TRISCbits.TRISC1 = 0;
  2098     0546  1087               	bcf	7,1	;volatile
  2099     0547                     l1105:
  2100                           
  2101                           ;main.c: 64:     cmd(0x38);
  2102     0547  3038               	movlw	56
  2103     0548  120A  118A  24AA  120A  118A  	fcall	_cmd
  2104     054D                     l1107:
  2105                           
  2106                           ;main.c: 65:     cmd(0x0C);
  2107     054D  300C               	movlw	12
  2108     054E  120A  118A  24AA  120A  118A  	fcall	_cmd
  2109     0553                     l1109:
  2110                           
  2111                           ;main.c: 66:     cmd(0x06);
  2112     0553  3006               	movlw	6
  2113     0554  120A  118A  24AA  120A  118A  	fcall	_cmd
  2114     0559                     l1111:
  2115                           
  2116                           ;main.c: 67:     cmd(0x01);
  2117     0559  3001               	movlw	1
  2118     055A  120A  118A  24AA  120A  118A  	fcall	_cmd
  2119     055F                     l1113:
  2120                           
  2121                           ;main.c: 68:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2122     055F  300D               	movlw	13
  2123     0560  00F4               	movwf	??_lcd_init+1
  2124     0561  30FB               	movlw	251
  2125     0562  00F3               	movwf	??_lcd_init
  2126     0563                     u657:
  2127     0563  0BF3               	decfsz	??_lcd_init,f
  2128     0564  2D63               	goto	u657
  2129     0565  0BF4               	decfsz	??_lcd_init+1,f
  2130     0566  2D63               	goto	u657
  2131     0567  2D68               	nop2
  2132     0568                     l70:
  2133     0568  0008               	return
  2134     0569                     __end_of_lcd_init:
  2135                           
  2136                           	psect	text15
  2137     04AA                     __ptext15:	
  2138 ;; *************** function _cmd *****************
  2139 ;; Defined at:
  2140 ;;		line 75 in file "main.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  a               1    wreg     unsigned char 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  a               1    2[COMMON] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         0       0       0       0       0
  2155 ;;      Locals:         1       0       0       0       0
  2156 ;;      Temps:          2       0       0       0       0
  2157 ;;      Totals:         3       0       0       0       0
  2158 ;;Total ram usage:        3 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_main
  2164 ;;		_lcd_init
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168     04AA                     _cmd:	
  2169                           ;psect for function _cmd
  2170                           
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _cmd: [wreg]
  2174                           ;cmd@a stored from wreg
  2175     04AA  00F2               	movwf	cmd@a
  2176     04AB                     l1069:
  2177                           
  2178                           ;main.c: 76:     PORTB = a;
  2179     04AB  0872               	movf	cmd@a,w
  2180     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  2181     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  2182     04AE  0086               	movwf	6	;volatile
  2183     04AF                     l1071:
  2184                           
  2185                           ;main.c: 77:     RC0 = 0;
  2186     04AF  1007               	bcf	7,0	;volatile
  2187     04B0                     l1073:
  2188                           
  2189                           ;main.c: 78:     RC1 = 1;
  2190     04B0  1487               	bsf	7,1	;volatile
  2191                           
  2192                           ;main.c: 79:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2193     04B1  300D               	movlw	13
  2194     04B2  00F1               	movwf	??_cmd+1
  2195     04B3  30FB               	movlw	251
  2196     04B4  00F0               	movwf	??_cmd
  2197     04B5                     u667:
  2198     04B5  0BF0               	decfsz	??_cmd,f
  2199     04B6  2CB5               	goto	u667
  2200     04B7  0BF1               	decfsz	??_cmd+1,f
  2201     04B8  2CB5               	goto	u667
  2202     04B9  2CBA               	nop2
  2203     04BA                     l1075:
  2204                           
  2205                           ;main.c: 80:     RC1 = 0;
  2206     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2207     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2208     04BC  1087               	bcf	7,1	;volatile
  2209     04BD                     l76:
  2210     04BD  0008               	return
  2211     04BE                     __end_of_cmd:
  2212                           
  2213                           	psect	text16
  2214     05A1                     __ptext16:	
  2215 ;; *************** function _countvalue *****************
  2216 ;; Defined at:
  2217 ;;		line 108 in file "main.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  i               2    6[COMMON] unsigned int 
  2222 ;;  c               2    4[COMMON] unsigned int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  2    0[COMMON] unsigned int 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         2       0       0       0       0
  2233 ;;      Locals:         4       0       0       0       0
  2234 ;;      Temps:          2       0       0       0       0
  2235 ;;      Totals:         8       0       0       0       0
  2236 ;;Total ram usage:        8 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245     05A1                     _countvalue:	
  2246                           ;psect for function _countvalue
  2247                           
  2248     05A1                     l1127:	
  2249                           ;incstack = 0
  2250                           ; Regs used in _countvalue: [wreg+status,2]
  2251                           
  2252                           
  2253                           ;main.c: 109:     unsigned int c = 0;
  2254     05A1  01F4               	clrf	countvalue@c
  2255     05A2  01F5               	clrf	countvalue@c+1
  2256                           
  2257                           ;main.c: 111:     for(unsigned int i = 0;i<(9*60);i++){
  2258     05A3  01F6               	clrf	countvalue@i
  2259     05A4  01F7               	clrf	countvalue@i+1
  2260     05A5                     l1133:
  2261                           
  2262                           ;main.c: 112:         TMR1H = 0;
  2263     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2264     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2265     05A7  018F               	clrf	15	;volatile
  2266                           
  2267                           ;main.c: 113:         TMR1L = 0;
  2268     05A8  018E               	clrf	14	;volatile
  2269     05A9                     l1135:
  2270                           
  2271                           ;main.c: 114:         TMR1IF = 0;
  2272     05A9  100C               	bcf	12,0	;volatile
  2273                           
  2274                           ;main.c: 115:         while(!TMR1IF){
  2275     05AA  2DC4               	goto	l102
  2276     05AB                     l103:
  2277                           
  2278                           ;main.c: 116:             if(!RD1){
  2279     05AB  1888               	btfsc	8,1	;volatile
  2280     05AC  2DAE               	goto	u571
  2281     05AD  2DAF               	goto	u570
  2282     05AE                     u571:
  2283     05AE  2DC4               	goto	l102
  2284     05AF                     u570:
  2285     05AF                     l1137:
  2286                           
  2287                           ;main.c: 117:             _delay((unsigned long)((20)*(20000000/4000.0)));
  2288     05AF  3082               	movlw	130
  2289     05B0  00F3               	movwf	??_countvalue+1
  2290     05B1  30DD               	movlw	221
  2291     05B2  00F2               	movwf	??_countvalue
  2292     05B3                     u677:
  2293     05B3  0BF2               	decfsz	??_countvalue,f
  2294     05B4  2DB3               	goto	u677
  2295     05B5  0BF3               	decfsz	??_countvalue+1,f
  2296     05B6  2DB3               	goto	u677
  2297     05B7  2DB8               	nop2
  2298                           
  2299                           ;main.c: 118:             c++;
  2300     05B8  3001               	movlw	1
  2301     05B9  07F4               	addwf	countvalue@c,f
  2302     05BA  1803               	skipnc
  2303     05BB  0AF5               	incf	countvalue@c+1,f
  2304     05BC  3000               	movlw	0
  2305     05BD  07F5               	addwf	countvalue@c+1,f
  2306     05BE                     l105:	
  2307                           ;main.c: 119:             while(!RD1);
  2308                           
  2309     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2310     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2311     05C0  1C88               	btfss	8,1	;volatile
  2312     05C1  2DC3               	goto	u581
  2313     05C2  2DC4               	goto	u580
  2314     05C3                     u581:
  2315     05C3  2DBE               	goto	l105
  2316     05C4                     u580:
  2317     05C4                     l102:	
  2318                           ;main.c: 121:         }
  2319                           
  2320                           
  2321                           ;main.c: 115:         while(!TMR1IF){
  2322     05C4  1C0C               	btfss	12,0	;volatile
  2323     05C5  2DC7               	goto	u591
  2324     05C6  2DC8               	goto	u590
  2325     05C7                     u591:
  2326     05C7  2DAB               	goto	l103
  2327     05C8                     u590:
  2328     05C8                     l108:
  2329                           
  2330                           ;main.c: 122:         TMR1IF = 0;
  2331     05C8  100C               	bcf	12,0	;volatile
  2332     05C9                     l1139:
  2333                           
  2334                           ;main.c: 123:     }
  2335     05C9  3001               	movlw	1
  2336     05CA  07F6               	addwf	countvalue@i,f
  2337     05CB  1803               	skipnc
  2338     05CC  0AF7               	incf	countvalue@i+1,f
  2339     05CD  3000               	movlw	0
  2340     05CE  07F7               	addwf	countvalue@i+1,f
  2341     05CF  3002               	movlw	2
  2342     05D0  0277               	subwf	countvalue@i+1,w
  2343     05D1  301C               	movlw	28
  2344     05D2  1903               	skipnz
  2345     05D3  0276               	subwf	countvalue@i,w
  2346     05D4  1C03               	skipc
  2347     05D5  2DD7               	goto	u601
  2348     05D6  2DD8               	goto	u600
  2349     05D7                     u601:
  2350     05D7  2DA5               	goto	l1133
  2351     05D8                     u600:
  2352     05D8                     l1141:
  2353                           
  2354                           ;main.c: 124:     return c;
  2355     05D8  0875               	movf	countvalue@c+1,w
  2356     05D9  00F1               	movwf	?_countvalue+1
  2357     05DA  0874               	movf	countvalue@c,w
  2358     05DB  00F0               	movwf	?_countvalue
  2359     05DC                     l109:
  2360     05DC  0008               	return
  2361     05DD                     __end_of_countvalue:
  2362     0002                     ___latbits      equ	2
  2363     007E                     btemp           set	126	;btemp
  2364     007E                     wtemp0          set	126
  2365                           
  2366                           	psect	config
  2367                           
  2368                           ;Config register CONFIG @ 0x2007
  2369                           ;	Oscillator Selection bits
  2370                           ;	FOSC = HS, HS oscillator
  2371                           ;	Watchdog Timer Enable bit
  2372                           ;	WDTE = OFF, WDT disabled
  2373                           ;	Power-up Timer Enable bit
  2374                           ;	PWRTE = OFF, PWRT disabled
  2375                           ;	Brown-out Reset Enable bit
  2376                           ;	BOREN = OFF, BOR disabled
  2377                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2378                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2379                           ;	Data EEPROM Memory Code Protection bit
  2380                           ;	CPD = OFF, Data EEPROM code protection off
  2381                           ;	Flash Program Memory Write Enable bits
  2382                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2383                           ;	In-Circuit Debugger Mode bit
  2384                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  2385                           ;	Flash Program Memory Code Protection bit
  2386                           ;	CP = OFF, Code protection off
  2387     2007                     	org	8199
  2388     2007  3F3A               	dw	16186

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      53
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    S642$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    S642$source	PTR const unsigned char  size(1) Largest target is 0

    show@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    txstr@b	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_2(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_2(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_2(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _txstr->_tx
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _show->_dat
    _lcd_init->_cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    1783
                                             33 BANK0     15    15      0
                                _cmd
                         _countvalue
                           _lcd_init
                               _show
                            _sprintf
                        _timer1_init
                                 _tx
                              _txstr
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _txstr                                                1     0      1      75
                                              1 COMMON     1     0      1
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    1335
                                             16 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1128
                                             13 COMMON     1     1      0
                                             12 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1003
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _show                                                 1     0      1      75
                                              3 COMMON     1     0      1
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      29
                                              3 COMMON     2     2      0
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _countvalue                                           8     6      2      70
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _countvalue
   _lcd_init
     _cmd
   _show
     _dat
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch
   _timer1_init
   _tx
   _txstr
     _tx
   _uart_init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     48      53     66.2%
BANK1               80      0      32     40.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 25 16:15:33 2024

                      pc 0002                       l70 0568                       l73 0487  
                     l91 0499                       l67 04A9                       l76 04BD  
                     l85 04E5                       l79 04D1                       l88 0491  
                     l97 04F9                       _tx 0490                       fsr 0004  
                    l102 05C4                      l103 05AB                      l105 05BE  
                    l108 05C8                      l109 05DC                      l702 0541  
                    l714 0727                      l475 061E                      ?_tx 0070  
                    l485 05A0                      l725 0482                      l658 051C  
                    l695 07EB                      l687 0768                      l971 05EF  
                    l963 05DD                      l981 060D                      l973 05F1  
                    l965 05DF                      l983 0614                      l975 05F5  
                    l967 05E5                      l991 056F                      l977 0606  
                    l969 05E8                      l985 061A                      l993 0572  
                    l979 060C                      l995 0579                      l997 057B  
                    l989 0569                      l999 057F                      _RC0 0038  
                    _RC1 0039                      _RD1 0041                      u320 05E5  
                    u321 05E4                      u410 057F                      u411 057E  
                    u340 05F5                      u420 0589                      u500 0738  
                    u341 05F4                      u421 0588                      u405 0573  
                    u501 0737                      u510 0754                      u335 05E9  
                    u511 0753                      u600 05D8                      u360 0606  
                    u440 059C                      u520 079B                      u601 05D7  
                    u361 0605                      u441 059B                      u425 0585  
                    u521 079A                      u610 04E5                      u450 0694  
                    u530 07A0                      u611 04E4                      u355 05F6  
                    u435 0590                      u451 0693                      u531 079F  
                    u380 061A                      u460 069A                      u540 07BF  
                    u620 04F9                      u381 0619                      u365 0602  
                    u461 0699                      u541 07BE                      u621 04F8  
                    u390 056F                      u470 06B9                      u550 0497  
                    u375 060E                      u391 056E                      u471 06B8  
                    u551 0496                      u480 06EB                      u560 053D  
                    u481 06EA                      u561 053C                      u570 05AF  
                    u490 070C                      u571 05AE                      u580 05C4  
                    u581 05C3                      u485 06E7                      u637 0683  
                    u590 05C8                      u591 05C7                      u647 04C9  
                    u657 0563                      u667 04B5                      u677 05B3  
                    _dat 04BE                      _cmd 04AA                      fsr0 0004  
                    indf 0000                      tx@a 0070                     ??_tx 0070  
                   l1001 0589                     l1003 058F                     l1011 068E  
                   l1101 0545                     l1005 0596                     l1021 06EB  
                   l1013 0694                     l1111 0559                     l1103 0546  
                   l1007 059C                     l1015 069A                     l1031 0740  
                   l1113 055F                     l1105 0547                     l1017 06A1  
                   l1041 076A                     l1033 0744                     l1025 0728  
                   l1121 04A1                     l1107 054D                     l1019 06B9  
                   l1051 07B5                     l1043 0780                     l1035 0748  
                   l1027 0738                     l1123 04A5                     l1115 049A  
                   l1141 05D8                     l1133 05A5                     l1109 0553  
                   l1053 07B9                     l1045 0795                     l1037 0754  
                   l1029 073C                     l1125 0483                     l1117 049D  
                   l1135 05A9                     l1127 05A1                     l1071 04AF  
                   l1047 079B                     l1039 0762                     l1063 07D2  
                   l1151 0504                     l1119 049F                     l1137 05AF  
                   l1073 04B0                     l1081 04BF                     l1161 04D3  
                   l1049 07A1                     l1057 07C0                     l1153 0506  
                   l1145 04FA                     l1139 05C9                     l1075 04BA  
                   l1083 04C3                     l1163 04DB                     l1059 07CB  
                   l1091 0522                     l1155 0513                     l1147 04FE  
                   l1171 04EF                     l1069 04AB                     l1085 04C4  
                   l1165 04DD                     l1093 0531                     l1149 0502  
                   l1077 0491                     l1173 04F1                     l1181 0632  
                   ?_dat 0070                     l1087 04CE                     l1159 04D2  
                   l1095 053D                     l1079 0497                     l1167 04E6  
                   l1191 0668                     l1183 063D                     l1175 061F  
                   l1089 051D                     l1169 04E7                     l1193 066F  
                   l1185 0643                     l1177 0623                     ?_cmd 0070  
                   l1099 0542                     l1195 0675                     l1187 0652  
                   l1179 062D                     l1197 067B                     l1189 0659  
                   STR_1 0009                     STR_2 0010                     _TXIF 0064  
                   _dbuf 00A0                     dat@b 0072                     cmd@a 0072  
                   _main 061F                     _prec 0052                     _show 04D2  
                   btemp 007E                     start 0000                    ??_dat 0070  
                  ??_cmd 0070                    ?_main 0070                    ?_show 0073  
                  _T1CON 0010          __end_of___lwdiv 061F          __end_of___lwmod 05A1  
                  _RCSTA 0018             vfpfcnvrt@fmt 0022                    _TMR1H 000F  
                  _TMR1L 000E                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098                    _flags 0054                    _fputc 068E  
                  _width 0050                    _putch 0482                    main@c 004E  
                  _txstr 04E6                    pclath 000A                    show@s 0073  
                  status 0003                    wtemp0 007E          __end_of_sprintf 051D  
        __initialization 07EC             __end_of_main 068E             __end_of_show 04E6  
                 ??_main 0041                   ??_show 0074              countvalue@c 0074  
            countvalue@i 0076                   ?_fputc 0070                   ?_putch 0070  
                 ?_txstr 0071                   _TMR1IF 0060             vfprintf@cfmt 007D  
       __end_of_lcd_init 0569             ?_timer1_init 0070                ??___lwdiv 0074  
              ??___lwmod 0074                   fputc@c 0070                   putch@c 0070  
       __end_of_vfprintf 0542                ??_sprintf 0034                   txstr@b 0071  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_fputc 0728  
          __end_of_putch 0483            __end_of_txstr 04FA               __end_of_tx 049A  
         _OPTION_REGbits 0081                  ??_fputc 0074                  ??_putch 0070  
                ??_txstr 0072               __pbssBANK0 0050               __pbssBANK1 00A0  
             __pmaintext 061F                ?_lcd_init 0070               __stringtab 0003  
             _countvalue 05A1                  ___lwdiv 05DD                  ___lwmod 0569  
              ?_vfprintf 002C                  __ptext1 049A                  __ptext2 04E6  
                __ptext3 0490                  __ptext4 0483                  __ptext5 04FA  
                __ptext6 051D                  __ptext7 0728                  __ptext8 068E  
                __ptext9 0482                  _sprintf 04FA                  clrloop0 0489  
             ??_lcd_init 0073     end_of_initialization 07FC                  fputc@fp 0072  
      __end_of_uart_init 04AA        __end_of_vfpfcnvrt 07EC         vfpfcnvrt@convarg 0026  
             ??_vfprintf 007D                _TRISCbits 0087                _TRISDbits 0088  
             main@buffer 0044              ?_countvalue 0070              vfpfcnvrt@ap 0023  
            vfpfcnvrt@cp 002A              vfpfcnvrt@fp 0020      start_initialization 07EC  
            __end_of_dat 04D2              __end_of_cmd 04BE              vfprintf@fmt 002E  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0072  
               ?___lwdiv 0070                 ?___lwmod 0070                __pstrings 0003  
       ___lwdiv@quotient 0074                 ?_sprintf 0030                clear_ram0 0488  
              _uart_init 049A            ??_timer1_init 0070                _vfpfcnvrt 0728  
            __stringbase 0008               vfpfcnvrt@c 002B             ??_countvalue 0072  
             vfprintf@ap 002F               vfprintf@fp 002C               ?_uart_init 0070  
             ?_vfpfcnvrt 0020       __end_of__stringtab 0009      __end_of_timer1_init 0488  
             sprintf@fmt 0031          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 0569                 __ptext11 05DD                 __ptext12 04D2  
               __ptext13 04BE                 __ptext14 0542                 __ptext15 04AA  
               __ptext16 05A1       __end_of_countvalue 05DD                 _lcd_init 0542  
               _vfprintf 051D                sprintf@ap 0035         ___lwmod@dividend 0072  
              stringcode 0003              ??_uart_init 0070              _timer1_init 0483  
            ??_vfpfcnvrt 0024                 sprintf@f 0036                 sprintf@s 0030  
        ___lwmod@divisor 0070          ___lwmod@counter 0074                 stringdir 0003  
               stringtab 0003  
