

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Nov 06 18:36:41 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0004                     fsr             equ	4
    64     0004                     fsr0            equ	4
    65     0000                     indf            equ	0
    66     0000                     indf0           equ	0
    67     0002                     pc              equ	2
    68     0002                     pcl             equ	2
    69     000A                     pclath          equ	10
    70     0003                     status          equ	3
    71     0000                     INDF            equ	0	;# 
    72     0001                     TMR0            equ	1	;# 
    73     0002                     PCL             equ	2	;# 
    74     0003                     STATUS          equ	3	;# 
    75     0004                     FSR             equ	4	;# 
    76     0005                     PORTA           equ	5	;# 
    77     0006                     PORTB           equ	6	;# 
    78     0007                     PORTC           equ	7	;# 
    79     0008                     PORTD           equ	8	;# 
    80     0009                     PORTE           equ	9	;# 
    81     000A                     PCLATH          equ	10	;# 
    82     000B                     INTCON          equ	11	;# 
    83     000C                     PIR1            equ	12	;# 
    84     000D                     PIR2            equ	13	;# 
    85     000E                     TMR1            equ	14	;# 
    86     000E                     TMR1L           equ	14	;# 
    87     000F                     TMR1H           equ	15	;# 
    88     0010                     T1CON           equ	16	;# 
    89     0011                     TMR2            equ	17	;# 
    90     0012                     T2CON           equ	18	;# 
    91     0013                     SSPBUF          equ	19	;# 
    92     0014                     SSPCON          equ	20	;# 
    93     0015                     CCPR1           equ	21	;# 
    94     0015                     CCPR1L          equ	21	;# 
    95     0016                     CCPR1H          equ	22	;# 
    96     0017                     CCP1CON         equ	23	;# 
    97     0018                     RCSTA           equ	24	;# 
    98     0019                     TXREG           equ	25	;# 
    99     001A                     RCREG           equ	26	;# 
   100     001B                     CCPR2           equ	27	;# 
   101     001B                     CCPR2L          equ	27	;# 
   102     001C                     CCPR2H          equ	28	;# 
   103     001D                     CCP2CON         equ	29	;# 
   104     001E                     ADRESH          equ	30	;# 
   105     001F                     ADCON0          equ	31	;# 
   106     0081                     OPTION_REG      equ	129	;# 
   107     0085                     TRISA           equ	133	;# 
   108     0086                     TRISB           equ	134	;# 
   109     0087                     TRISC           equ	135	;# 
   110     0088                     TRISD           equ	136	;# 
   111     0089                     TRISE           equ	137	;# 
   112     008C                     PIE1            equ	140	;# 
   113     008D                     PIE2            equ	141	;# 
   114     008E                     PCON            equ	142	;# 
   115     0091                     SSPCON2         equ	145	;# 
   116     0092                     PR2             equ	146	;# 
   117     0093                     SSPADD          equ	147	;# 
   118     0094                     SSPSTAT         equ	148	;# 
   119     0098                     TXSTA           equ	152	;# 
   120     0099                     SPBRG           equ	153	;# 
   121     009C                     CMCON           equ	156	;# 
   122     009D                     CVRCON          equ	157	;# 
   123     009E                     ADRESL          equ	158	;# 
   124     009F                     ADCON1          equ	159	;# 
   125     010C                     EEDATA          equ	268	;# 
   126     010D                     EEADR           equ	269	;# 
   127     010E                     EEDATH          equ	270	;# 
   128     010F                     EEADRH          equ	271	;# 
   129     018C                     EECON1          equ	396	;# 
   130     018D                     EECON2          equ	397	;# 
   131     0000                     INDF            equ	0	;# 
   132     0001                     TMR0            equ	1	;# 
   133     0002                     PCL             equ	2	;# 
   134     0003                     STATUS          equ	3	;# 
   135     0004                     FSR             equ	4	;# 
   136     0005                     PORTA           equ	5	;# 
   137     0006                     PORTB           equ	6	;# 
   138     0007                     PORTC           equ	7	;# 
   139     0008                     PORTD           equ	8	;# 
   140     0009                     PORTE           equ	9	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000D                     PIR2            equ	13	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0011                     TMR2            equ	17	;# 
   150     0012                     T2CON           equ	18	;# 
   151     0013                     SSPBUF          equ	19	;# 
   152     0014                     SSPCON          equ	20	;# 
   153     0015                     CCPR1           equ	21	;# 
   154     0015                     CCPR1L          equ	21	;# 
   155     0016                     CCPR1H          equ	22	;# 
   156     0017                     CCP1CON         equ	23	;# 
   157     0018                     RCSTA           equ	24	;# 
   158     0019                     TXREG           equ	25	;# 
   159     001A                     RCREG           equ	26	;# 
   160     001B                     CCPR2           equ	27	;# 
   161     001B                     CCPR2L          equ	27	;# 
   162     001C                     CCPR2H          equ	28	;# 
   163     001D                     CCP2CON         equ	29	;# 
   164     001E                     ADRESH          equ	30	;# 
   165     001F                     ADCON0          equ	31	;# 
   166     0081                     OPTION_REG      equ	129	;# 
   167     0085                     TRISA           equ	133	;# 
   168     0086                     TRISB           equ	134	;# 
   169     0087                     TRISC           equ	135	;# 
   170     0088                     TRISD           equ	136	;# 
   171     0089                     TRISE           equ	137	;# 
   172     008C                     PIE1            equ	140	;# 
   173     008D                     PIE2            equ	141	;# 
   174     008E                     PCON            equ	142	;# 
   175     0091                     SSPCON2         equ	145	;# 
   176     0092                     PR2             equ	146	;# 
   177     0093                     SSPADD          equ	147	;# 
   178     0094                     SSPSTAT         equ	148	;# 
   179     0098                     TXSTA           equ	152	;# 
   180     0099                     SPBRG           equ	153	;# 
   181     009C                     CMCON           equ	156	;# 
   182     009D                     CVRCON          equ	157	;# 
   183     009E                     ADRESL          equ	158	;# 
   184     009F                     ADCON1          equ	159	;# 
   185     010C                     EEDATA          equ	268	;# 
   186     010D                     EEADR           equ	269	;# 
   187     010E                     EEDATH          equ	270	;# 
   188     010F                     EEADRH          equ	271	;# 
   189     018C                     EECON1          equ	396	;# 
   190     018D                     EECON2          equ	397	;# 
   191                           
   192                           	psect	idataBANK0
   193     03F2                     __pidataBANK0:
   194                           
   195                           ;initializer for main@F1336
   196     03F2  3417               	retlw	low ((STR_1-__stringbase)| (0+32768))
   197     03F3  341E               	retlw	low ((STR_2-__stringbase)| (0+32768))
   198     03F4  342E               	retlw	low ((STR_3-__stringbase)| (0+32768))
   199     03F5  3424               	retlw	low ((STR_4-__stringbase)| (0+32768))
   200     03F6  340F               	retlw	low ((STR_5-__stringbase)| (0+32768))
   201     03F7  342A               	retlw	low ((STR_6-__stringbase)| (0+32768))
   202     0006                     _PORTB          set	6
   203     0047                     _RD7            set	71
   204     0046                     _RD6            set	70
   205     0088                     _TRISDbits      set	136
   206     0086                     _TRISB          set	134
   207                           
   208                           	psect	strings
   209     0003                     __pstrings:
   210     0003                     stringtab:
   211     0003                     __stringtab:
   212                           
   213                           ;	String table - string pointers are 1 byte each
   214     0003  1BFF               	btfsc	btemp+1,7
   215     0004  280D               	ljmp	stringcode
   216     0005  1383               	bcf	3,7
   217     0006  187F               	btfsc	btemp+1,0
   218     0007  1783               	bsf	3,7
   219     0008  0800               	movf	0,w
   220     0009  0A84               	incf	4,f
   221     000A  1903               	skipnz
   222     000B  0AFF               	incf	btemp+1,f
   223     000C  0008               	return
   224     000D                     stringcode:
   225     000D                     stringdir:
   226     000D  3000               	movlw	high stringdir
   227     000E  008A               	movwf	10
   228     000F  0804               	movf	4,w
   229     0010  0A84               	incf	4,f
   230     0011  0782               	addwf	2,f
   231     0012                     __stringbase:
   232     0012  3400               	retlw	0
   233     0013                     __end_of__stringtab:
   234     0013                     STR_8:
   235     0013  3435               	retlw	53	;'5'
   236     0014  3420               	retlw	32	;' '
   237     0015  3452               	retlw	82	;'R'
   238     0016  3465               	retlw	101	;'e'
   239     0017  3467               	retlw	103	;'g'
   240     0018  3420               	retlw	32	;' '
   241     0019  346E               	retlw	110	;'n'
   242     001A  346F               	retlw	111	;'o'
   243     001B  3420               	retlw	32	;' '
   244     001C  346F               	retlw	111	;'o'
   245     001D  346E               	retlw	110	;'n'
   246     001E  346C               	retlw	108	;'l'
   247     001F  3479               	retlw	121	;'y'
   248     0020  3400               	retlw	0
   249     0021                     STR_5:
   250     0021  3450               	retlw	80	;'P'
   251     0022  3472               	retlw	114	;'r'
   252     0023  3461               	retlw	97	;'a'
   253     0024  346A               	retlw	106	;'j'
   254     0025  3469               	retlw	105	;'i'
   255     0026  3474               	retlw	116	;'t'
   256     0027  3468               	retlw	104	;'h'
   257     0028  3400               	retlw	0
   258     0029                     STR_1:
   259     0029  3453               	retlw	83	;'S'
   260     002A  3461               	retlw	97	;'a'
   261     002B  346E               	retlw	110	;'n'
   262     002C  346A               	retlw	106	;'j'
   263     002D  3461               	retlw	97	;'a'
   264     002E  3479               	retlw	121	;'y'
   265     002F  3400               	retlw	0
   266     0030                     STR_2:
   267     0030  3452               	retlw	82	;'R'
   268     0031  3461               	retlw	97	;'a'
   269     0032  3468               	retlw	104	;'h'
   270     0033  3475               	retlw	117	;'u'
   271     0034  346C               	retlw	108	;'l'
   272     0035  3400               	retlw	0
   273     0036                     STR_4:
   274     0036  3454               	retlw	84	;'T'
   275     0037  3461               	retlw	97	;'a'
   276     0038  3472               	retlw	114	;'r'
   277     0039  3475               	retlw	117	;'u'
   278     003A  346E               	retlw	110	;'n'
   279     003B  3400               	retlw	0
   280     003C                     STR_6:
   281     003C  3453               	retlw	83	;'S'
   282     003D  3461               	retlw	97	;'a'
   283     003E  3469               	retlw	105	;'i'
   284     003F  3400               	retlw	0
   285     0040                     STR_3:
   286     0040  3453               	retlw	83	;'S'
   287     0041  3472               	retlw	114	;'r'
   288     0042  3469               	retlw	105	;'i'
   289     0043  3400               	retlw	0
   290     0044                     STR_7:
   291     0044  3425               	retlw	37	;'%'
   292     0045  3464               	retlw	100	;'d'
   293     0046  3400               	retlw	0
   294                           
   295                           	psect	cinit
   296     07CA                     start_initialization:	
   297                           ; #config settings
   298                           
   299     07CA                     __initialization:
   300                           
   301                           ; Initialize objects allocated to BANK0
   302     07CA  120A  118A  23F2  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   303     07CF  00DB               	movwf	__pdataBANK0& (0+127)
   304     07D0  120A  118A  23F3  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   305     07D5  00DC               	movwf	(__pdataBANK0+1)& (0+127)
   306     07D6  120A  118A  23F4  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   307     07DB  00DD               	movwf	(__pdataBANK0+2)& (0+127)
   308     07DC  120A  118A  23F5  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   309     07E1  00DE               	movwf	(__pdataBANK0+3)& (0+127)
   310     07E2  120A  118A  23F6  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   311     07E7  00DF               	movwf	(__pdataBANK0+4)& (0+127)
   312     07E8  120A  118A  23F7  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   313     07ED  00E0               	movwf	(__pdataBANK0+5)& (0+127)
   314                           
   315                           ; Clear objects allocated to BANK1
   316     07EE  1383               	bcf	3,7	;select IRP bank0
   317     07EF  30A0               	movlw	low __pbssBANK1
   318     07F0  0084               	movwf	4
   319     07F1  30C0               	movlw	low (__pbssBANK1+32)
   320     07F2  120A  118A  23F8  120A  118A  	fcall	clear_ram0
   321                           
   322                           ; Clear objects allocated to BANK0
   323     07F7  01E1               	clrf	__pbssBANK0& (0+127)
   324     07F8  01E2               	clrf	(__pbssBANK0+1)& (0+127)
   325     07F9  01E3               	clrf	(__pbssBANK0+2)& (0+127)
   326     07FA  01E4               	clrf	(__pbssBANK0+3)& (0+127)
   327     07FB  01E5               	clrf	(__pbssBANK0+4)& (0+127)
   328     07FC                     end_of_initialization:	
   329                           ;End of C runtime variable initialization code
   330                           
   331     07FC                     __end_of__initialization:
   332     07FC  0183               	clrf	3
   333     07FD  120A  118A  2E1D   	ljmp	_main	;jump to C main() function
   334                           
   335                           	psect	bssBANK0
   336     0061                     __pbssBANK0:
   337     0061                     _width:
   338     0061                     	ds	2
   339     0063                     _prec:
   340     0063                     	ds	2
   341     0065                     _flags:
   342     0065                     	ds	1
   343                           
   344                           	psect	dataBANK0
   345     005B                     __pdataBANK0:
   346     005B                     main@F1336:
   347     005B                     	ds	6
   348                           
   349                           	psect	bssBANK1
   350     00A0                     __pbssBANK1:
   351     00A0                     _dbuf:
   352     00A0                     	ds	32
   353                           
   354                           	psect	clrtext
   355     03F8                     clear_ram0:	
   356                           ;	Called with FSR containing the base address, and
   357                           ;	W with the last address+1
   358                           
   359     03F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   360     03F9                     clrloop0:
   361     03F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   362     03FA  0A84               	incf	4,f	;increment pointer
   363     03FB  0604               	xorwf	4,w	;XOR with final address
   364     03FC  1903               	btfsc	3,2	;have we reached the end yet?
   365     03FD  3400               	retlw	0	;all done for this memory range, return
   366     03FE  0604               	xorwf	4,w	;XOR again to restore value
   367     03FF  2BF9               	goto	clrloop0	;do the next byte
   368                           
   369                           	psect	cstackCOMMON
   370     0070                     __pcstackCOMMON:
   371     0070                     ?_cmd:
   372     0070                     ?_putch:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_lcd_init:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_main:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?_dat:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_fputc:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ?___awdiv:	
   388                           ; 2 bytes @ 0x0
   389                           
   390     0070                     ?___awmod:	
   391                           ; 2 bytes @ 0x0
   392                           
   393     0070                     putch@c:	
   394                           ; 2 bytes @ 0x0
   395                           
   396     0070                     ___awdiv@divisor:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ___awmod@divisor:	
   400                           ; 2 bytes @ 0x0
   401                           
   402     0070                     fputc@c:	
   403                           ; 2 bytes @ 0x0
   404                           
   405     0070                     ??_cmd:	
   406                           ; 2 bytes @ 0x0
   407                           
   408     0070                     ??_putch:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ??_dat:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           ; 1 bytes @ 0x0
   416     0070                     	ds	2
   417     0072                     cmd@a:
   418     0072                     dat@b:	
   419                           ; 1 bytes @ 0x2
   420                           
   421     0072                     ___awdiv@dividend:	
   422                           ; 1 bytes @ 0x2
   423                           
   424     0072                     ___awmod@dividend:	
   425                           ; 2 bytes @ 0x2
   426                           
   427     0072                     fputc@fp:	
   428                           ; 2 bytes @ 0x2
   429                           
   430                           
   431                           ; 2 bytes @ 0x2
   432     0072                     	ds	1
   433     0073                     ?_show:
   434     0073                     show@s:	
   435                           ; 1 bytes @ 0x3
   436                           
   437     0073                     ??_lcd_init:	
   438                           ; 2 bytes @ 0x3
   439                           
   440                           
   441                           ; 1 bytes @ 0x3
   442     0073                     	ds	1
   443     0074                     ___awdiv@counter:
   444     0074                     ___awmod@counter:	
   445                           ; 1 bytes @ 0x4
   446                           
   447     0074                     ??_fputc:	
   448                           ; 1 bytes @ 0x4
   449                           
   450     0074                     ??___awdiv:	
   451                           ; 1 bytes @ 0x4
   452                           
   453     0074                     ??___awmod:	
   454                           ; 1 bytes @ 0x4
   455                           
   456                           
   457                           ; 1 bytes @ 0x4
   458     0074                     	ds	1
   459     0075                     ___awdiv@sign:
   460     0075                     ___awmod@sign:	
   461                           ; 1 bytes @ 0x5
   462                           
   463     0075                     ??_show:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 1 bytes @ 0x5
   468     0075                     	ds	1
   469     0076                     ?_abs:
   470     0076                     ___awdiv@quotient:	
   471                           ; 2 bytes @ 0x6
   472                           
   473     0076                     abs@a:	
   474                           ; 2 bytes @ 0x6
   475                           
   476                           
   477                           ; 2 bytes @ 0x6
   478     0076                     	ds	2
   479     0078                     ??_abs:
   480                           
   481                           ; 1 bytes @ 0x8
   482     0078                     	ds	5
   483     007D                     vfprintf@cfmt:
   484     007D                     ??_vfprintf:	
   485                           ; 1 bytes @ 0xD
   486                           
   487                           
   488                           ; 1 bytes @ 0xD
   489     007D                     	ds	1
   490                           
   491                           	psect	cstackBANK0
   492     0020                     __pcstackBANK0:
   493     0020                     ?_vfpfcnvrt:
   494     0020                     vfpfcnvrt@fp:	
   495                           ; 1 bytes @ 0x0
   496                           
   497                           
   498                           ; 2 bytes @ 0x0
   499     0020                     	ds	2
   500     0022                     vfpfcnvrt@fmt:
   501                           
   502                           ; 1 bytes @ 0x2
   503     0022                     	ds	1
   504     0023                     vfpfcnvrt@ap:
   505                           
   506                           ; 1 bytes @ 0x3
   507     0023                     	ds	1
   508     0024                     ??_vfpfcnvrt:
   509                           
   510                           ; 1 bytes @ 0x4
   511     0024                     	ds	2
   512     0026                     vfpfcnvrt@done:
   513                           
   514                           ; 1 bytes @ 0x6
   515     0026                     	ds	1
   516     0027                     vfpfcnvrt@cp:
   517                           
   518                           ; 1 bytes @ 0x7
   519     0027                     	ds	1
   520     0028                     vfpfcnvrt@convarg:
   521                           
   522                           ; 4 bytes @ 0x8
   523     0028                     	ds	4
   524     002C                     vfpfcnvrt@c:
   525                           
   526                           ; 1 bytes @ 0xC
   527     002C                     	ds	1
   528     002D                     ?_vfprintf:
   529     002D                     vfprintf@fp:	
   530                           ; 2 bytes @ 0xD
   531                           
   532                           
   533                           ; 2 bytes @ 0xD
   534     002D                     	ds	2
   535     002F                     vfprintf@fmt:
   536                           
   537                           ; 1 bytes @ 0xF
   538     002F                     	ds	1
   539     0030                     vfprintf@ap:
   540                           
   541                           ; 1 bytes @ 0x10
   542     0030                     	ds	1
   543     0031                     ?_sprintf:
   544     0031                     sprintf@s:	
   545                           ; 2 bytes @ 0x11
   546                           
   547                           
   548                           ; 1 bytes @ 0x11
   549     0031                     	ds	1
   550     0032                     sprintf@fmt:
   551                           
   552                           ; 1 bytes @ 0x12
   553     0032                     	ds	3
   554     0035                     ??_sprintf:
   555                           
   556                           ; 1 bytes @ 0x15
   557     0035                     	ds	1
   558     0036                     sprintf@ap:
   559                           
   560                           ; 1 bytes @ 0x16
   561     0036                     	ds	1
   562     0037                     sprintf@f:
   563                           
   564                           ; 11 bytes @ 0x17
   565     0037                     	ds	11
   566     0042                     ??_main:
   567                           
   568                           ; 1 bytes @ 0x22
   569     0042                     	ds	3
   570     0045                     main@arr1:
   571                           
   572                           ; 6 bytes @ 0x25
   573     0045                     	ds	6
   574     004B                     main@buffer:
   575                           
   576                           ; 10 bytes @ 0x2B
   577     004B                     	ds	10
   578     0055                     main@l:
   579                           
   580                           ; 2 bytes @ 0x35
   581     0055                     	ds	2
   582     0057                     main@r:
   583                           
   584                           ; 2 bytes @ 0x37
   585     0057                     	ds	2
   586     0059                     main@i:
   587                           
   588                           ; 2 bytes @ 0x39
   589     0059                     	ds	2
   590                           
   591                           	psect	maintext
   592     061D                     __pmaintext:	
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 31 in file "main.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  i               2   57[BANK0 ] int 
   603 ;;  r               2   55[BANK0 ] int 
   604 ;;  l               2   53[BANK0 ] int 
   605 ;;  stat            2    0        int 
   606 ;;  buffer         10   43[BANK0 ] unsigned char [10]
   607 ;;  arr1            6   37[BANK0 ] PTR unsigned char [6]
   608 ;;		 -> STR_6(4), STR_5(8), STR_4(6), STR_3(4), 
   609 ;;		 -> STR_2(6), STR_1(7), 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : B00/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0      22       0       0       0
   621 ;;      Temps:          0       3       0       0       0
   622 ;;      Totals:         0      25       0       0       0
   623 ;;Total ram usage:       25 bytes
   624 ;; Hardware stack levels required when called: 5
   625 ;; This function calls:
   626 ;;		_cmd
   627 ;;		_lcd_init
   628 ;;		_show
   629 ;;		_sprintf
   630 ;; This function is called by:
   631 ;;		Startup code after reset
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635     061D                     _main:	
   636                           ;psect for function _main
   637                           
   638     061D                     l1133:	
   639                           ;incstack = 0
   640                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   641                           
   642                           
   643                           ;main.c: 32:     TRISB = 0x00;
   644     061D  1683               	bsf	3,5	;RP0=1, select bank1
   645     061E  1303               	bcf	3,6	;RP1=0, select bank1
   646     061F  0186               	clrf	6	;volatile
   647     0620                     l1135:
   648                           
   649                           ;main.c: 33:     TRISDbits.TRISD6 = 0;
   650     0620  1308               	bcf	8,6	;volatile
   651     0621                     l1137:
   652                           
   653                           ;main.c: 34:     TRISDbits.TRISD7 = 0;
   654     0621  1388               	bcf	8,7	;volatile
   655     0622                     l1139:
   656                           
   657                           ;main.c: 36:     char *arr1[]={"Sanjay","Rahul","Sri","Tarun","Prajith","Sai"};
   658     0622  3045               	movlw	main@arr1& (0+255)
   659     0623  0084               	movwf	4
   660     0624  1283               	bcf	3,5	;RP0=0, select bank0
   661     0625  1303               	bcf	3,6	;RP1=0, select bank0
   662     0626  085B               	movf	main@F1336,w
   663     0627  1383               	bcf	3,7	;select IRP bank0
   664     0628  0080               	movwf	0
   665     0629  0A84               	incf	4,f
   666     062A  085C               	movf	main@F1336+1,w
   667     062B  0080               	movwf	0
   668     062C  0A84               	incf	4,f
   669     062D  085D               	movf	main@F1336+2,w
   670     062E  0080               	movwf	0
   671     062F  0A84               	incf	4,f
   672     0630  085E               	movf	main@F1336+3,w
   673     0631  0080               	movwf	0
   674     0632  0A84               	incf	4,f
   675     0633  085F               	movf	main@F1336+4,w
   676     0634  0080               	movwf	0
   677     0635  0A84               	incf	4,f
   678     0636  0860               	movf	main@F1336+5,w
   679     0637  0080               	movwf	0
   680     0638                     l1141:
   681                           
   682                           ;main.c: 37:     char buffer[10];;main.c: 39:     lcd_init();
   683     0638  120A  118A  2439  120A  118A  	fcall	_lcd_init
   684     063D                     l1143:
   685                           
   686                           ;main.c: 42:         int r = 100;
   687     063D  3064               	movlw	100
   688     063E  1283               	bcf	3,5	;RP0=0, select bank0
   689     063F  1303               	bcf	3,6	;RP1=0, select bank0
   690     0640  00D7               	movwf	main@r
   691     0641  3000               	movlw	0
   692     0642  00D8               	movwf	main@r+1
   693     0643                     l1145:
   694                           
   695                           ;main.c: 43:         int l = (sizeof(arr1)/sizeof(arr1[0]));
   696     0643  3006               	movlw	6
   697     0644  00D5               	movwf	main@l
   698     0645  3000               	movlw	0
   699     0646  00D6               	movwf	main@l+1
   700     0647                     l1147:
   701                           
   702                           ;main.c: 44:         int stat;;main.c: 46:         for(int i=0;i<l;i++){
   703     0647  01D9               	clrf	main@i
   704     0648  01DA               	clrf	main@i+1
   705     0649  2ED2               	goto	l1175
   706     064A                     l1149:
   707                           
   708                           ;main.c: 48:             _delay((unsigned long)((1000)*(20000000/4000.0)));
   709     064A  301A               	movlw	26
   710     064B  1283               	bcf	3,5	;RP0=0, select bank0
   711     064C  1303               	bcf	3,6	;RP1=0, select bank0
   712     064D  00C4               	movwf	??_main+2
   713     064E  305E               	movlw	94
   714     064F  00C3               	movwf	??_main+1
   715     0650  306D               	movlw	109
   716     0651  00C2               	movwf	??_main
   717     0652                     u797:
   718     0652  0BC2               	decfsz	??_main,f
   719     0653  2E52               	goto	u797
   720     0654  0BC3               	decfsz	??_main+1,f
   721     0655  2E52               	goto	u797
   722     0656  0BC4               	decfsz	??_main+2,f
   723     0657  2E52               	goto	u797
   724     0658  2E59               	nop2
   725     0659                     l1151:
   726                           
   727                           ;main.c: 50:             cmd(0x80);
   728     0659  3080               	movlw	128
   729     065A  120A  118A  2411  120A  118A  	fcall	_cmd
   730     065F                     l1153:
   731                           
   732                           ;main.c: 51:             show((unsigned char *) arr1[i]);
   733     065F  1283               	bcf	3,5	;RP0=0, select bank0
   734     0660  1303               	bcf	3,6	;RP1=0, select bank0
   735     0661  0859               	movf	main@i,w
   736     0662  3E45               	addlw	(low (main@arr1| 0))& (0+255)
   737     0663  0084               	movwf	4
   738     0664  1383               	bcf	3,7	;select IRP bank0
   739     0665  0800               	movf	0,w
   740     0666  00F3               	movwf	show@s
   741     0667  3000               	movlw	0
   742     0668  1D03               	btfss	3,2
   743     0669  3080               	movlw	128
   744     066A  00F4               	movwf	show@s+1
   745     066B  120A  118A  24A3  120A  118A  	fcall	_show
   746     0670                     l1155:
   747                           
   748                           ;main.c: 53:             if(i<5){
   749     0670  1283               	bcf	3,5	;RP0=0, select bank0
   750     0671  1303               	bcf	3,6	;RP1=0, select bank0
   751     0672  085A               	movf	main@i+1,w
   752     0673  3A80               	xorlw	128
   753     0674  00FF               	movwf	btemp+1
   754     0675  3080               	movlw	128
   755     0676  027F               	subwf	btemp+1,w
   756     0677  1D03               	skipz
   757     0678  2E7B               	goto	u775
   758     0679  3005               	movlw	5
   759     067A  0259               	subwf	main@i,w
   760     067B                     u775:
   761     067B  1803               	skipnc
   762     067C  2E7E               	goto	u771
   763     067D  2E7F               	goto	u770
   764     067E                     u771:
   765     067E  2EA6               	goto	l1165
   766     067F                     u770:
   767     067F                     l1157:
   768                           
   769                           ;main.c: 54:                 sprintf(buffer, "%d", r);
   770     067F  304B               	movlw	(low (main@buffer| 0))& (0+255)
   771     0680  1283               	bcf	3,5	;RP0=0, select bank0
   772     0681  1303               	bcf	3,6	;RP1=0, select bank0
   773     0682  00B1               	movwf	sprintf@s
   774     0683  3032               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   775     0684  00B2               	movwf	sprintf@fmt
   776     0685  0858               	movf	main@r+1,w
   777     0686  00B4               	movwf	?_sprintf+3
   778     0687  0857               	movf	main@r,w
   779     0688  00B3               	movwf	?_sprintf+2
   780     0689  120A  118A  245B  120A  118A  	fcall	_sprintf
   781     068E                     l1159:
   782                           
   783                           ;main.c: 55:                 cmd(0xc0);
   784     068E  30C0               	movlw	192
   785     068F  120A  118A  2411  120A  118A  	fcall	_cmd
   786     0694                     l1161:
   787                           
   788                           ;main.c: 56:                 show((unsigned char *)buffer);
   789     0694  304B               	movlw	(low (main@buffer| 0))& (0+255)
   790     0695  00F3               	movwf	show@s
   791     0696  3000               	movlw	0
   792     0697  00F4               	movwf	show@s+1
   793     0698  120A  118A  24A3  120A  118A  	fcall	_show
   794     069D                     l1163:
   795                           
   796                           ;main.c: 57:                 r += 1;
   797     069D  3001               	movlw	1
   798     069E  1283               	bcf	3,5	;RP0=0, select bank0
   799     069F  1303               	bcf	3,6	;RP1=0, select bank0
   800     06A0  07D7               	addwf	main@r,f
   801     06A1  1803               	skipnc
   802     06A2  0AD8               	incf	main@r+1,f
   803     06A3  3000               	movlw	0
   804     06A4  07D8               	addwf	main@r+1,f
   805                           
   806                           ;main.c: 58:             }else{
   807     06A5  2EB5               	goto	l1169
   808     06A6                     l1165:
   809                           
   810                           ;main.c: 59:                 cmd(0xc0);
   811     06A6  30C0               	movlw	192
   812     06A7  120A  118A  2411  120A  118A  	fcall	_cmd
   813     06AC                     l1167:
   814                           
   815                           ;main.c: 60:                 show((unsigned char *) "5 Reg no only");
   816     06AC  3001               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
   817     06AD  00F3               	movwf	show@s
   818     06AE  3080               	movlw	128
   819     06AF  00F4               	movwf	show@s+1
   820     06B0  120A  118A  24A3  120A  118A  	fcall	_show
   821     06B5                     l1169:
   822                           
   823                           ;main.c: 63:             _delay((unsigned long)((1000)*(20000000/4000.0)));
   824     06B5  301A               	movlw	26
   825     06B6  1283               	bcf	3,5	;RP0=0, select bank0
   826     06B7  1303               	bcf	3,6	;RP1=0, select bank0
   827     06B8  00C4               	movwf	??_main+2
   828     06B9  305E               	movlw	94
   829     06BA  00C3               	movwf	??_main+1
   830     06BB  306D               	movlw	109
   831     06BC  00C2               	movwf	??_main
   832     06BD                     u807:
   833     06BD  0BC2               	decfsz	??_main,f
   834     06BE  2EBD               	goto	u807
   835     06BF  0BC3               	decfsz	??_main+1,f
   836     06C0  2EBD               	goto	u807
   837     06C1  0BC4               	decfsz	??_main+2,f
   838     06C2  2EBD               	goto	u807
   839     06C3  2EC4               	nop2
   840     06C4                     l1171:
   841                           
   842                           ;main.c: 64:             cmd(0x01);
   843     06C4  3001               	movlw	1
   844     06C5  120A  118A  2411  120A  118A  	fcall	_cmd
   845     06CA                     l1173:
   846                           
   847                           ;main.c: 66:         }
   848     06CA  3001               	movlw	1
   849     06CB  1283               	bcf	3,5	;RP0=0, select bank0
   850     06CC  1303               	bcf	3,6	;RP1=0, select bank0
   851     06CD  07D9               	addwf	main@i,f
   852     06CE  1803               	skipnc
   853     06CF  0ADA               	incf	main@i+1,f
   854     06D0  3000               	movlw	0
   855     06D1  07DA               	addwf	main@i+1,f
   856     06D2                     l1175:
   857     06D2  085A               	movf	main@i+1,w
   858     06D3  3A80               	xorlw	128
   859     06D4  00C2               	movwf	??_main
   860     06D5  0856               	movf	main@l+1,w
   861     06D6  3A80               	xorlw	128
   862     06D7  0242               	subwf	??_main,w
   863     06D8  1D03               	skipz
   864     06D9  2EDC               	goto	u785
   865     06DA  0855               	movf	main@l,w
   866     06DB  0259               	subwf	main@i,w
   867     06DC                     u785:
   868     06DC  1C03               	skipc
   869     06DD  2EDF               	goto	u781
   870     06DE  2EE0               	goto	u780
   871     06DF                     u781:
   872     06DF  2E4A               	goto	l1149
   873     06E0                     u780:
   874     06E0  2E3D               	goto	l1143
   875     06E1  120A  118A  2800   	ljmp	start
   876     06E4                     __end_of_main:
   877                           
   878                           	psect	text1
   879     045B                     __ptext1:	
   880 ;; *************** function _sprintf *****************
   881 ;; Defined at:
   882 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  s               1   17[BANK0 ] PTR unsigned char 
   885 ;;		 -> main@buffer(10), 
   886 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
   887 ;;		 -> STR_7(3), 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  f              11   23[BANK0 ] struct _IO_FILE
   890 ;;  ret             2    0        int 
   891 ;;  ap              1   22[BANK0 ] PTR void [1]
   892 ;;		 -> ?_sprintf(2), 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2   17[BANK0 ] int 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       4       0       0       0
   903 ;;      Locals:         0      12       0       0       0
   904 ;;      Temps:          0       1       0       0       0
   905 ;;      Totals:         0      17       0       0       0
   906 ;;Total ram usage:       17 bytes
   907 ;; Hardware stack levels used: 1
   908 ;; Hardware stack levels required when called: 4
   909 ;; This function calls:
   910 ;;		_vfprintf
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916     045B                     _sprintf:	
   917                           ;psect for function _sprintf
   918                           
   919     045B                     l1119:	
   920                           ;incstack = 0
   921                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   922                           
   923     045B  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
   924     045C  1283               	bcf	3,5	;RP0=0, select bank0
   925     045D  1303               	bcf	3,6	;RP1=0, select bank0
   926     045E  00B6               	movwf	sprintf@ap
   927     045F                     l1121:
   928     045F  0831               	movf	sprintf@s,w
   929     0460  00B7               	movwf	sprintf@f
   930     0461  3000               	movlw	0
   931     0462  00B8               	movwf	sprintf@f+1
   932     0463                     l1123:
   933     0463  01B9               	clrf	sprintf@f+2
   934     0464  01BA               	clrf	sprintf@f+3
   935     0465                     l1125:
   936     0465  01C0               	clrf	sprintf@f+9
   937     0466  01C1               	clrf	sprintf@f+10
   938     0467                     l1127:
   939     0467  3037               	movlw	low sprintf@f
   940     0468  00AD               	movwf	vfprintf@fp
   941     0469  3000               	movlw	high sprintf@f
   942     046A  00AE               	movwf	vfprintf@fp+1
   943     046B  0832               	movf	sprintf@fmt,w
   944     046C  00AF               	movwf	vfprintf@fmt
   945     046D  3036               	movlw	(low (sprintf@ap| 0))& (0+255)
   946     046E  00B0               	movwf	vfprintf@ap
   947     046F  120A  118A  247E  120A  118A  	fcall	_vfprintf
   948     0474                     l1129:
   949     0474  1283               	bcf	3,5	;RP0=0, select bank0
   950     0475  1303               	bcf	3,6	;RP1=0, select bank0
   951     0476  0839               	movf	sprintf@f+2,w
   952     0477  0731               	addwf	sprintf@s,w
   953     0478  00B5               	movwf	??_sprintf
   954     0479  0835               	movf	??_sprintf,w
   955     047A  0084               	movwf	4
   956     047B  1383               	bcf	3,7	;select IRP bank0
   957     047C  0180               	clrf	0
   958     047D                     l597:
   959     047D  0008               	return
   960     047E                     __end_of_sprintf:
   961                           
   962                           	psect	text2
   963     047E                     __ptext2:	
   964 ;; *************** function _vfprintf *****************
   965 ;; Defined at:
   966 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
   969 ;;		 -> sprintf@f(11), 
   970 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
   971 ;;		 -> STR_7(3), 
   972 ;;  ap              1   16[BANK0 ] PTR PTR void 
   973 ;;		 -> sprintf@ap(1), 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  cfmt            1   13[COMMON] PTR unsigned char 
   976 ;;		 -> STR_7(3), 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  2   13[BANK0 ] int 
   979 ;; Registers used:
   980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         0       4       0       0       0
   987 ;;      Locals:         1       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         1       4       0       0       0
   990 ;;Total ram usage:        5 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 3
   993 ;; This function calls:
   994 ;;		_vfpfcnvrt
   995 ;; This function is called by:
   996 ;;		_sprintf
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000     047E                     _vfprintf:	
  1001                           ;psect for function _vfprintf
  1002                           
  1003     047E                     l1097:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1006                           
  1007                           
  1008                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1009     047E  1283               	bcf	3,5	;RP0=0, select bank0
  1010     047F  1303               	bcf	3,6	;RP1=0, select bank0
  1011     0480  082F               	movf	vfprintf@fmt,w
  1012     0481  00FD               	movwf	vfprintf@cfmt
  1013                           
  1014                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1015     0482  2C92               	goto	l1101
  1016     0483                     l1099:
  1017                           
  1018                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1019     0483  1283               	bcf	3,5	;RP0=0, select bank0
  1020     0484  1303               	bcf	3,6	;RP1=0, select bank0
  1021     0485  082D               	movf	vfprintf@fp,w
  1022     0486  00A0               	movwf	vfpfcnvrt@fp
  1023     0487  082E               	movf	vfprintf@fp+1,w
  1024     0488  00A1               	movwf	vfpfcnvrt@fp+1
  1025     0489  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1026     048A  00A2               	movwf	vfpfcnvrt@fmt
  1027     048B  0830               	movf	vfprintf@ap,w
  1028     048C  00A3               	movwf	vfpfcnvrt@ap
  1029     048D  120A  118A  26E4  120A  118A  	fcall	_vfpfcnvrt
  1030     0492                     l1101:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1033     0492  087D               	movf	vfprintf@cfmt,w
  1034     0493  0084               	movwf	4
  1035     0494  120A  118A  200D  120A  118A  	fcall	stringdir
  1036     0499  3A00               	xorlw	0
  1037     049A  1D03               	skipz
  1038     049B  2C9D               	goto	u751
  1039     049C  2C9E               	goto	u750
  1040     049D                     u751:
  1041     049D  2C83               	goto	l1099
  1042     049E                     u750:
  1043     049E                     l1103:
  1044                           
  1045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1046     049E  1283               	bcf	3,5	;RP0=0, select bank0
  1047     049F  1303               	bcf	3,6	;RP1=0, select bank0
  1048     04A0  01AD               	clrf	?_vfprintf
  1049     04A1  01AE               	clrf	?_vfprintf+1
  1050     04A2                     l641:
  1051     04A2  0008               	return
  1052     04A3                     __end_of_vfprintf:
  1053                           
  1054                           	psect	text3
  1055     06E4                     __ptext3:	
  1056 ;; *************** function _vfpfcnvrt *****************
  1057 ;; Defined at:
  1058 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1061 ;;		 -> sprintf@f(11), 
  1062 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1063 ;;		 -> vfprintf@cfmt(1), 
  1064 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1065 ;;		 -> sprintf@ap(1), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  convarg         4    8[BANK0 ] struct .
  1068 ;;  c               1   12[BANK0 ] unsigned char 
  1069 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  1070 ;;		 -> STR_7(3), 
  1071 ;;  done            1    6[BANK0 ] _Bool 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       4       0       0       0
  1082 ;;      Locals:         0       7       0       0       0
  1083 ;;      Temps:          0       2       0       0       0
  1084 ;;      Totals:         0      13       0       0       0
  1085 ;;Total ram usage:       13 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 2
  1088 ;; This function calls:
  1089 ;;		___awdiv
  1090 ;;		___awmod
  1091 ;;		_abs
  1092 ;;		_fputc
  1093 ;; This function is called by:
  1094 ;;		_vfprintf
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098     06E4                     _vfpfcnvrt:	
  1099                           ;psect for function _vfpfcnvrt
  1100                           
  1101     06E4                     l1029:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1104                           
  1105                           
  1106                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1107     06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1108     06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1109     06E6  0822               	movf	vfpfcnvrt@fmt,w
  1110     06E7  0084               	movwf	4
  1111     06E8  0800               	movf	0,w
  1112     06E9  0084               	movwf	4
  1113     06EA  120A  118A  200D  120A  118A  	fcall	stringdir
  1114     06EF  3A25               	xorlw	37
  1115     06F0  1D03               	skipz
  1116     06F1  2EF3               	goto	u651
  1117     06F2  2EF4               	goto	u650
  1118     06F3                     u651:
  1119     06F3  2FB0               	goto	l1075
  1120     06F4                     u650:
  1121     06F4                     l1031:
  1122                           
  1123                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1124     06F4  0822               	movf	vfpfcnvrt@fmt,w
  1125     06F5  0084               	movwf	4
  1126     06F6  3001               	movlw	1
  1127     06F7  0780               	addwf	0,f
  1128     06F8                     l1033:
  1129                           
  1130                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1131     06F8  01E1               	clrf	_width
  1132     06F9  01E2               	clrf	_width+1
  1133     06FA  3000               	movlw	0
  1134     06FB  00E5               	movwf	_flags
  1135     06FC                     l1035:
  1136                           
  1137                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1138     06FC  30FF               	movlw	255
  1139     06FD  00E3               	movwf	_prec
  1140     06FE  30FF               	movlw	255
  1141     06FF  00E4               	movwf	_prec+1
  1142     0700                     l1037:
  1143                           
  1144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1145     0700  0822               	movf	vfpfcnvrt@fmt,w
  1146     0701  0084               	movwf	4
  1147     0702  0800               	movf	0,w
  1148     0703  00A7               	movwf	vfpfcnvrt@cp
  1149     0704                     l1039:
  1150                           
  1151                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1152     0704  0827               	movf	vfpfcnvrt@cp,w
  1153     0705  0084               	movwf	4
  1154     0706  120A  118A  200D  120A  118A  	fcall	stringdir
  1155     070B  3A64               	xorlw	100
  1156     070C  1903               	skipnz
  1157     070D  2F0F               	goto	u661
  1158     070E  2F10               	goto	u660
  1159     070F                     u661:
  1160     070F  2F1C               	goto	l1043
  1161     0710                     u660:
  1162     0710                     l1041:
  1163     0710  0827               	movf	vfpfcnvrt@cp,w
  1164     0711  0084               	movwf	4
  1165     0712  120A  118A  200D  120A  118A  	fcall	stringdir
  1166     0717  3A69               	xorlw	105
  1167     0718  1D03               	skipz
  1168     0719  2F1B               	goto	u671
  1169     071A  2F1C               	goto	u670
  1170     071B                     u671:
  1171     071B  2FA9               	goto	l1071
  1172     071C                     u670:
  1173     071C                     l1043:
  1174                           
  1175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1176     071C  0823               	movf	vfpfcnvrt@ap,w
  1177     071D  0084               	movwf	4
  1178     071E  1383               	bcf	3,7	;select IRP bank0
  1179     071F  0800               	movf	0,w
  1180     0720  00FF               	movwf	btemp+1
  1181     0721  3002               	movlw	2
  1182     0722  0780               	addwf	0,f
  1183     0723  087F               	movf	btemp+1,w
  1184     0724  0084               	movwf	4
  1185     0725  0800               	movf	0,w
  1186     0726  00A8               	movwf	vfpfcnvrt@convarg
  1187     0727  0A84               	incf	4,f
  1188     0728  0800               	movf	0,w
  1189     0729  00A9               	movwf	vfpfcnvrt@convarg+1
  1190     072A                     l1045:
  1191                           
  1192                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1193     072A  0822               	movf	vfpfcnvrt@fmt,w
  1194     072B  0084               	movwf	4
  1195     072C  0827               	movf	vfpfcnvrt@cp,w
  1196     072D  3E01               	addlw	1
  1197     072E  0080               	movwf	0
  1198     072F                     l1047:
  1199                           
  1200                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1201     072F  3020               	movlw	32
  1202     0730  00AC               	movwf	vfpfcnvrt@c
  1203     0731                     l1049:
  1204                           
  1205                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1206     0731  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  1207     0732  2F34               	goto	u681
  1208     0733  2F36               	goto	u680
  1209     0734                     u681:
  1210     0734  3001               	movlw	1
  1211     0735  2F37               	goto	u690
  1212     0736                     u680:
  1213     0736  3000               	movlw	0
  1214     0737                     u690:
  1215     0737  00A6               	movwf	vfpfcnvrt@done
  1216     0738                     l1051:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1219     0738  3001               	movlw	1
  1220     0739  02AC               	subwf	vfpfcnvrt@c,f
  1221     073A  082C               	movf	vfpfcnvrt@c,w
  1222     073B  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1223     073C  0084               	movwf	4
  1224     073D  300A               	movlw	10
  1225     073E  00F0               	movwf	___awmod@divisor
  1226     073F  3000               	movlw	0
  1227     0740  00F1               	movwf	___awmod@divisor+1
  1228     0741  0829               	movf	vfpfcnvrt@convarg+1,w
  1229     0742  00F3               	movwf	___awmod@dividend+1
  1230     0743  0828               	movf	vfpfcnvrt@convarg,w
  1231     0744  00F2               	movwf	___awmod@dividend
  1232     0745  120A  118A  24C9  120A  118A  	fcall	___awmod
  1233     074A  0871               	movf	?___awmod+1,w
  1234     074B  00F7               	movwf	abs@a+1
  1235     074C  0870               	movf	?___awmod,w
  1236     074D  00F6               	movwf	abs@a
  1237     074E  120A  118A  2400  120A  118A  	fcall	_abs
  1238     0753  0876               	movf	?_abs,w
  1239     0754  3E30               	addlw	48
  1240     0755  1383               	bcf	3,7	;select IRP bank1
  1241     0756  0080               	movwf	0
  1242     0757                     l1053:
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1245     0757  300A               	movlw	10
  1246     0758  00F0               	movwf	___awdiv@divisor
  1247     0759  3000               	movlw	0
  1248     075A  00F1               	movwf	___awdiv@divisor+1
  1249     075B  1283               	bcf	3,5	;RP0=0, select bank0
  1250     075C  1303               	bcf	3,6	;RP1=0, select bank0
  1251     075D  0829               	movf	vfpfcnvrt@convarg+1,w
  1252     075E  00F3               	movwf	___awdiv@dividend+1
  1253     075F  0828               	movf	vfpfcnvrt@convarg,w
  1254     0760  00F2               	movwf	___awdiv@dividend
  1255     0761  120A  118A  2520  120A  118A  	fcall	___awdiv
  1256     0766  0871               	movf	?___awdiv+1,w
  1257     0767  1283               	bcf	3,5	;RP0=0, select bank0
  1258     0768  1303               	bcf	3,6	;RP1=0, select bank0
  1259     0769  00A9               	movwf	vfpfcnvrt@convarg+1
  1260     076A  0870               	movf	?___awdiv,w
  1261     076B  00A8               	movwf	vfpfcnvrt@convarg
  1262     076C                     l1055:
  1263                           
  1264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1265     076C  0828               	movf	vfpfcnvrt@convarg,w
  1266     076D  0429               	iorwf	vfpfcnvrt@convarg+1,w
  1267     076E  1903               	btfsc	3,2
  1268     076F  2F71               	goto	u701
  1269     0770  2F72               	goto	u700
  1270     0771                     u701:
  1271     0771  2F77               	goto	l1059
  1272     0772                     u700:
  1273     0772                     l1057:
  1274     0772  082C               	movf	vfpfcnvrt@c,w
  1275     0773  1D03               	btfss	3,2
  1276     0774  2F76               	goto	u711
  1277     0775  2F77               	goto	u710
  1278     0776                     u711:
  1279     0776  2F38               	goto	l1051
  1280     0777                     u710:
  1281     0777                     l1059:
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1284     0777  082C               	movf	vfpfcnvrt@c,w
  1285     0778  1903               	btfsc	3,2
  1286     0779  2F7B               	goto	u721
  1287     077A  2F7C               	goto	u720
  1288     077B                     u721:
  1289     077B  2FA2               	goto	l1069
  1290     077C                     u720:
  1291     077C                     l1061:
  1292     077C  0826               	movf	vfpfcnvrt@done,w
  1293     077D  1903               	btfsc	3,2
  1294     077E  2F80               	goto	u731
  1295     077F  2F81               	goto	u730
  1296     0780                     u731:
  1297     0780  2FA2               	goto	l1069
  1298     0781                     u730:
  1299     0781                     l1063:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1302     0781  3001               	movlw	1
  1303     0782  02AC               	subwf	vfpfcnvrt@c,f
  1304     0783  082C               	movf	vfpfcnvrt@c,w
  1305     0784  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1306     0785  0084               	movwf	4
  1307     0786  302D               	movlw	45
  1308     0787  1383               	bcf	3,7	;select IRP bank1
  1309     0788  0080               	movwf	0
  1310     0789  2FA2               	goto	l1069
  1311     078A                     l1065:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1314     078A  082C               	movf	vfpfcnvrt@c,w
  1315     078B  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1316     078C  0084               	movwf	4
  1317     078D  1383               	bcf	3,7	;select IRP bank1
  1318     078E  0800               	movf	0,w
  1319     078F  00A4               	movwf	??_vfpfcnvrt
  1320     0790  01A5               	clrf	??_vfpfcnvrt+1
  1321     0791  0824               	movf	??_vfpfcnvrt,w
  1322     0792  00F0               	movwf	fputc@c
  1323     0793  0825               	movf	??_vfpfcnvrt+1,w
  1324     0794  00F1               	movwf	fputc@c+1
  1325     0795  0820               	movf	vfpfcnvrt@fp,w
  1326     0796  00F2               	movwf	fputc@fp
  1327     0797  0821               	movf	vfpfcnvrt@fp+1,w
  1328     0798  00F3               	movwf	fputc@fp+1
  1329     0799  120A  118A  2583  120A  118A  	fcall	_fputc
  1330     079E                     l1067:
  1331     079E  3001               	movlw	1
  1332     079F  1283               	bcf	3,5	;RP0=0, select bank0
  1333     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1334     07A1  07AC               	addwf	vfpfcnvrt@c,f
  1335     07A2                     l1069:
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1338     07A2  3020               	movlw	32
  1339     07A3  062C               	xorwf	vfpfcnvrt@c,w
  1340     07A4  1D03               	btfss	3,2
  1341     07A5  2FA7               	goto	u741
  1342     07A6  2FA8               	goto	u740
  1343     07A7                     u741:
  1344     07A7  2F8A               	goto	l1065
  1345     07A8                     u740:
  1346     07A8  2FC9               	goto	l635
  1347     07A9                     l1071:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1350     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1351     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1352     07AB  0822               	movf	vfpfcnvrt@fmt,w
  1353     07AC  0084               	movwf	4
  1354     07AD  3001               	movlw	1
  1355     07AE  0780               	addwf	0,f
  1356     07AF  2FC9               	goto	l635
  1357     07B0                     l1075:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1360     07B0  0822               	movf	vfpfcnvrt@fmt,w
  1361     07B1  0084               	movwf	4
  1362     07B2  0800               	movf	0,w
  1363     07B3  0084               	movwf	4
  1364     07B4  120A  118A  200D  120A  118A  	fcall	stringdir
  1365     07B9  00A4               	movwf	??_vfpfcnvrt
  1366     07BA  01A5               	clrf	??_vfpfcnvrt+1
  1367     07BB  0824               	movf	??_vfpfcnvrt,w
  1368     07BC  00F0               	movwf	fputc@c
  1369     07BD  0825               	movf	??_vfpfcnvrt+1,w
  1370     07BE  00F1               	movwf	fputc@c+1
  1371     07BF  0820               	movf	vfpfcnvrt@fp,w
  1372     07C0  00F2               	movwf	fputc@fp
  1373     07C1  0821               	movf	vfpfcnvrt@fp+1,w
  1374     07C2  00F3               	movwf	fputc@fp+1
  1375     07C3  120A  118A  2583  120A  118A  	fcall	_fputc
  1376     07C8  2FA9               	goto	l1071
  1377     07C9                     l635:
  1378     07C9  0008               	return
  1379     07CA                     __end_of_vfpfcnvrt:
  1380                           
  1381                           	psect	text4
  1382     0583                     __ptext4:	
  1383 ;; *************** function _fputc *****************
  1384 ;; Defined at:
  1385 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  c               2    0[COMMON] int 
  1388 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1389 ;;		 -> sprintf@f(11), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  2    0[COMMON] int 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         4       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0
  1403 ;;      Temps:          9       0       0       0       0
  1404 ;;      Totals:        13       0       0       0       0
  1405 ;;Total ram usage:       13 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 1
  1408 ;; This function calls:
  1409 ;;		_putch
  1410 ;; This function is called by:
  1411 ;;		_vfpfcnvrt
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415     0583                     _fputc:	
  1416                           ;psect for function _fputc
  1417                           
  1418     0583                     l1007:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1421                           
  1422     0583  0872               	movf	fputc@fp,w
  1423     0584  0473               	iorwf	fputc@fp+1,w
  1424     0585  1903               	btfsc	3,2
  1425     0586  2D88               	goto	u591
  1426     0587  2D89               	goto	u590
  1427     0588                     u591:
  1428     0588  2D8F               	goto	l1011
  1429     0589                     u590:
  1430     0589                     l1009:
  1431     0589  0872               	movf	fputc@fp,w
  1432     058A  0473               	iorwf	fputc@fp+1,w
  1433     058B  1D03               	btfss	3,2
  1434     058C  2D8E               	goto	u601
  1435     058D  2D8F               	goto	u600
  1436     058E                     u601:
  1437     058E  2D96               	goto	l1013
  1438     058F                     u600:
  1439     058F                     l1011:
  1440     058F  0870               	movf	fputc@c,w
  1441     0590  120A  118A  23F1  120A  118A  	fcall	_putch
  1442     0595  2E1C               	goto	l660
  1443     0596                     l1013:
  1444     0596  0872               	movf	fputc@fp,w
  1445     0597  3E09               	addlw	9
  1446     0598  00F4               	movwf	??_fputc
  1447     0599  0873               	movf	fputc@fp+1,w
  1448     059A  1803               	skipnc
  1449     059B  3E01               	addlw	1
  1450     059C  3E00               	addlw	0
  1451     059D  00F5               	movwf	??_fputc+1
  1452     059E  0874               	movf	??_fputc,w
  1453     059F  0084               	movwf	4
  1454     05A0  1783               	bsf	3,7
  1455     05A1  1C75               	btfss	??_fputc+1,0
  1456     05A2  1383               	bcf	3,7
  1457     05A3  0800               	movf	0,w
  1458     05A4  00F6               	movwf	??_fputc+2
  1459     05A5  0A84               	incf	4,f
  1460     05A6  0800               	movf	0,w
  1461     05A7  00F7               	movwf	??_fputc+3
  1462     05A8  0876               	movf	??_fputc+2,w
  1463     05A9  0477               	iorwf	??_fputc+3,w
  1464     05AA  1903               	btfsc	3,2
  1465     05AB  2DAD               	goto	u611
  1466     05AC  2DAE               	goto	u610
  1467     05AD                     u611:
  1468     05AD  2DE0               	goto	l1017
  1469     05AE                     u610:
  1470     05AE                     l1015:
  1471     05AE  0872               	movf	fputc@fp,w
  1472     05AF  3E09               	addlw	9
  1473     05B0  00F4               	movwf	??_fputc
  1474     05B1  0873               	movf	fputc@fp+1,w
  1475     05B2  1803               	skipnc
  1476     05B3  3E01               	addlw	1
  1477     05B4  3E00               	addlw	0
  1478     05B5  00F5               	movwf	??_fputc+1
  1479     05B6  0874               	movf	??_fputc,w
  1480     05B7  0084               	movwf	4
  1481     05B8  1783               	bsf	3,7
  1482     05B9  1C75               	btfss	??_fputc+1,0
  1483     05BA  1383               	bcf	3,7
  1484     05BB  0800               	movf	0,w
  1485     05BC  00F6               	movwf	??_fputc+2
  1486     05BD  0A84               	incf	4,f
  1487     05BE  0800               	movf	0,w
  1488     05BF  00F7               	movwf	??_fputc+3
  1489     05C0  0872               	movf	fputc@fp,w
  1490     05C1  3E02               	addlw	2
  1491     05C2  00F8               	movwf	??_fputc+4
  1492     05C3  0873               	movf	fputc@fp+1,w
  1493     05C4  1803               	skipnc
  1494     05C5  3E01               	addlw	1
  1495     05C6  3E00               	addlw	0
  1496     05C7  00F9               	movwf	??_fputc+5
  1497     05C8  0878               	movf	??_fputc+4,w
  1498     05C9  0084               	movwf	4
  1499     05CA  1783               	bsf	3,7
  1500     05CB  1C79               	btfss	??_fputc+5,0
  1501     05CC  1383               	bcf	3,7
  1502     05CD  0800               	movf	0,w
  1503     05CE  00FA               	movwf	??_fputc+6
  1504     05CF  0A84               	incf	4,f
  1505     05D0  0800               	movf	0,w
  1506     05D1  00FB               	movwf	??_fputc+7
  1507     05D2  087B               	movf	??_fputc+7,w
  1508     05D3  3A80               	xorlw	128
  1509     05D4  00FC               	movwf	??_fputc+8
  1510     05D5  0877               	movf	??_fputc+3,w
  1511     05D6  3A80               	xorlw	128
  1512     05D7  027C               	subwf	??_fputc+8,w
  1513     05D8  1D03               	skipz
  1514     05D9  2DDC               	goto	u625
  1515     05DA  0876               	movf	??_fputc+2,w
  1516     05DB  027A               	subwf	??_fputc+6,w
  1517     05DC                     u625:
  1518     05DC  1803               	skipnc
  1519     05DD  2DDF               	goto	u621
  1520     05DE  2DE0               	goto	u620
  1521     05DF                     u621:
  1522     05DF  2E1C               	goto	l660
  1523     05E0                     u620:
  1524     05E0                     l1017:
  1525     05E0  0872               	movf	fputc@fp,w
  1526     05E1  0084               	movwf	4
  1527     05E2  1783               	bsf	3,7
  1528     05E3  1C73               	btfss	fputc@fp+1,0
  1529     05E4  1383               	bcf	3,7
  1530     05E5  0800               	movf	0,w
  1531     05E6  00F4               	movwf	??_fputc
  1532     05E7  0A84               	incf	4,f
  1533     05E8  0800               	movf	0,w
  1534     05E9  00F5               	movwf	??_fputc+1
  1535     05EA  0872               	movf	fputc@fp,w
  1536     05EB  3E02               	addlw	2
  1537     05EC  00F6               	movwf	??_fputc+2
  1538     05ED  0873               	movf	fputc@fp+1,w
  1539     05EE  1803               	skipnc
  1540     05EF  3E01               	addlw	1
  1541     05F0  3E00               	addlw	0
  1542     05F1  00F7               	movwf	??_fputc+3
  1543     05F2  0876               	movf	??_fputc+2,w
  1544     05F3  0084               	movwf	4
  1545     05F4  1783               	bsf	3,7
  1546     05F5  1C77               	btfss	??_fputc+3,0
  1547     05F6  1383               	bcf	3,7
  1548     05F7  0800               	movf	0,w
  1549     05F8  0774               	addwf	??_fputc,w
  1550     05F9  00F9               	movwf	??_fputc+5
  1551     05FA  0875               	movf	??_fputc+1,w
  1552     05FB  00F8               	movwf	??_fputc+4
  1553     05FC  1803               	skipnc
  1554     05FD  0AF8               	incf	??_fputc+4,f
  1555     05FE  1F80               	btfss	0,7
  1556     05FF  2E01               	goto	u630
  1557     0600  03F8               	decf	??_fputc+4,f
  1558     0601                     u630:
  1559     0601  0878               	movf	??_fputc+4,w
  1560     0602  00FA               	movwf	??_fputc+6
  1561     0603  0879               	movf	??_fputc+5,w
  1562     0604  0084               	movwf	4
  1563     0605  1783               	bsf	3,7
  1564     0606  1C7A               	btfss	??_fputc+6,0
  1565     0607  1383               	bcf	3,7
  1566     0608  0870               	movf	fputc@c,w
  1567     0609  0080               	movwf	0
  1568     060A  0872               	movf	fputc@fp,w
  1569     060B  3E02               	addlw	2
  1570     060C  00F4               	movwf	??_fputc
  1571     060D  0873               	movf	fputc@fp+1,w
  1572     060E  1803               	skipnc
  1573     060F  3E01               	addlw	1
  1574     0610  3E00               	addlw	0
  1575     0611  00F5               	movwf	??_fputc+1
  1576     0612  0874               	movf	??_fputc,w
  1577     0613  0084               	movwf	4
  1578     0614  1783               	bsf	3,7
  1579     0615  1C75               	btfss	??_fputc+1,0
  1580     0616  1383               	bcf	3,7
  1581     0617  3001               	movlw	1
  1582     0618  0780               	addwf	0,f
  1583     0619  0A84               	incf	4,f
  1584     061A  1803               	skipnc
  1585     061B  0A80               	incf	0,f
  1586     061C                     l660:
  1587     061C  0008               	return
  1588     061D                     __end_of_fputc:
  1589                           
  1590                           	psect	text5
  1591     03F1                     __ptext5:	
  1592 ;; *************** function _putch *****************
  1593 ;; Defined at:
  1594 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  c               1    wreg     unsigned char 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  c               1    0[COMMON] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; This function calls:
  1615 ;;		Nothing
  1616 ;; This function is called by:
  1617 ;;		_fputc
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621     03F1                     _putch:	
  1622                           ;psect for function _putch
  1623                           
  1624     03F1                     l671:	
  1625                           ;incstack = 0
  1626                           ; Regs used in _putch: [wreg]
  1627                           
  1628     03F1  0008               	return
  1629     03F2                     __end_of_putch:
  1630                           
  1631                           	psect	text6
  1632     0400                     __ptext6:	
  1633 ;; *************** function _abs *****************
  1634 ;; Defined at:
  1635 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  a               2    6[COMMON] int 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2    6[COMMON] int 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2, status,0
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1649 ;;      Params:         2       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0
  1651 ;;      Temps:          2       0       0       0       0
  1652 ;;      Totals:         4       0       0       0       0
  1653 ;;Total ram usage:        4 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_vfpfcnvrt
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662     0400                     _abs:	
  1663                           ;psect for function _abs
  1664                           
  1665     0400                     l1021:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _abs: [wreg+status,2+status,0]
  1668                           
  1669     0400  1BF7               	btfsc	abs@a+1,7
  1670     0401  2C03               	goto	u641
  1671     0402  2C04               	goto	u640
  1672     0403                     u641:
  1673     0403  2C05               	goto	l1025
  1674     0404                     u640:
  1675     0404                     l1023:
  1676     0404  2C10               	goto	l648
  1677     0405                     l1025:
  1678     0405  0976               	comf	abs@a,w
  1679     0406  00F8               	movwf	??_abs
  1680     0407  0977               	comf	abs@a+1,w
  1681     0408  00F9               	movwf	??_abs+1
  1682     0409  0AF8               	incf	??_abs,f
  1683     040A  1903               	skipnz
  1684     040B  0AF9               	incf	??_abs+1,f
  1685     040C  0878               	movf	??_abs,w
  1686     040D  00F6               	movwf	?_abs
  1687     040E  0879               	movf	??_abs+1,w
  1688     040F  00F7               	movwf	?_abs+1
  1689     0410                     l648:
  1690     0410  0008               	return
  1691     0411                     __end_of_abs:
  1692                           
  1693                           	psect	text7
  1694     04C9                     __ptext7:	
  1695 ;; *************** function ___awmod *****************
  1696 ;; Defined at:
  1697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  divisor         2    0[COMMON] int 
  1700 ;;  dividend        2    2[COMMON] int 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  sign            1    5[COMMON] unsigned char 
  1703 ;;  counter         1    4[COMMON] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    0[COMMON] int 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         4       0       0       0       0
  1714 ;;      Locals:         2       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         6       0       0       0       0
  1717 ;;Total ram usage:        6 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_vfpfcnvrt
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726     04C9                     ___awmod:	
  1727                           ;psect for function ___awmod
  1728                           
  1729     04C9                     l969:	
  1730                           ;incstack = 0
  1731                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1732                           
  1733     04C9  01F5               	clrf	___awmod@sign
  1734     04CA                     l971:
  1735     04CA  1FF3               	btfss	___awmod@dividend+1,7
  1736     04CB  2CCD               	goto	u501
  1737     04CC  2CCE               	goto	u500
  1738     04CD                     u501:
  1739     04CD  2CD5               	goto	l977
  1740     04CE                     u500:
  1741     04CE                     l973:
  1742     04CE  09F2               	comf	___awmod@dividend,f
  1743     04CF  09F3               	comf	___awmod@dividend+1,f
  1744     04D0  0AF2               	incf	___awmod@dividend,f
  1745     04D1  1903               	skipnz
  1746     04D2  0AF3               	incf	___awmod@dividend+1,f
  1747     04D3                     l975:
  1748     04D3  3001               	movlw	1
  1749     04D4  00F5               	movwf	___awmod@sign
  1750     04D5                     l977:
  1751     04D5  1FF1               	btfss	___awmod@divisor+1,7
  1752     04D6  2CD8               	goto	u511
  1753     04D7  2CD9               	goto	u510
  1754     04D8                     u511:
  1755     04D8  2CDE               	goto	l981
  1756     04D9                     u510:
  1757     04D9                     l979:
  1758     04D9  09F0               	comf	___awmod@divisor,f
  1759     04DA  09F1               	comf	___awmod@divisor+1,f
  1760     04DB  0AF0               	incf	___awmod@divisor,f
  1761     04DC  1903               	skipnz
  1762     04DD  0AF1               	incf	___awmod@divisor+1,f
  1763     04DE                     l981:
  1764     04DE  0870               	movf	___awmod@divisor,w
  1765     04DF  0471               	iorwf	___awmod@divisor+1,w
  1766     04E0  1903               	btfsc	3,2
  1767     04E1  2CE3               	goto	u521
  1768     04E2  2CE4               	goto	u520
  1769     04E3                     u521:
  1770     04E3  2D11               	goto	l999
  1771     04E4                     u520:
  1772     04E4                     l983:
  1773     04E4  3001               	movlw	1
  1774     04E5  00F4               	movwf	___awmod@counter
  1775     04E6  2CF0               	goto	l989
  1776     04E7                     l985:
  1777     04E7  3001               	movlw	1
  1778     04E8                     u535:
  1779     04E8  1003               	clrc
  1780     04E9  0DF0               	rlf	___awmod@divisor,f
  1781     04EA  0DF1               	rlf	___awmod@divisor+1,f
  1782     04EB  3EFF               	addlw	-1
  1783     04EC  1D03               	skipz
  1784     04ED  2CE8               	goto	u535
  1785     04EE                     l987:
  1786     04EE  3001               	movlw	1
  1787     04EF  07F4               	addwf	___awmod@counter,f
  1788     04F0                     l989:
  1789     04F0  1FF1               	btfss	___awmod@divisor+1,7
  1790     04F1  2CF3               	goto	u541
  1791     04F2  2CF4               	goto	u540
  1792     04F3                     u541:
  1793     04F3  2CE7               	goto	l985
  1794     04F4                     u540:
  1795     04F4                     l991:
  1796     04F4  0871               	movf	___awmod@divisor+1,w
  1797     04F5  0273               	subwf	___awmod@dividend+1,w
  1798     04F6  1D03               	skipz
  1799     04F7  2CFA               	goto	u555
  1800     04F8  0870               	movf	___awmod@divisor,w
  1801     04F9  0272               	subwf	___awmod@dividend,w
  1802     04FA                     u555:
  1803     04FA  1C03               	skipc
  1804     04FB  2CFD               	goto	u551
  1805     04FC  2CFE               	goto	u550
  1806     04FD                     u551:
  1807     04FD  2D04               	goto	l995
  1808     04FE                     u550:
  1809     04FE                     l993:
  1810     04FE  0870               	movf	___awmod@divisor,w
  1811     04FF  02F2               	subwf	___awmod@dividend,f
  1812     0500  0871               	movf	___awmod@divisor+1,w
  1813     0501  1C03               	skipc
  1814     0502  03F3               	decf	___awmod@dividend+1,f
  1815     0503  02F3               	subwf	___awmod@dividend+1,f
  1816     0504                     l995:
  1817     0504  3001               	movlw	1
  1818     0505                     u565:
  1819     0505  1003               	clrc
  1820     0506  0CF1               	rrf	___awmod@divisor+1,f
  1821     0507  0CF0               	rrf	___awmod@divisor,f
  1822     0508  3EFF               	addlw	-1
  1823     0509  1D03               	skipz
  1824     050A  2D05               	goto	u565
  1825     050B                     l997:
  1826     050B  3001               	movlw	1
  1827     050C  02F4               	subwf	___awmod@counter,f
  1828     050D  1D03               	btfss	3,2
  1829     050E  2D10               	goto	u571
  1830     050F  2D11               	goto	u570
  1831     0510                     u571:
  1832     0510  2CF4               	goto	l991
  1833     0511                     u570:
  1834     0511                     l999:
  1835     0511  0875               	movf	___awmod@sign,w
  1836     0512  1903               	btfsc	3,2
  1837     0513  2D15               	goto	u581
  1838     0514  2D16               	goto	u580
  1839     0515                     u581:
  1840     0515  2D1B               	goto	l1003
  1841     0516                     u580:
  1842     0516                     l1001:
  1843     0516  09F2               	comf	___awmod@dividend,f
  1844     0517  09F3               	comf	___awmod@dividend+1,f
  1845     0518  0AF2               	incf	___awmod@dividend,f
  1846     0519  1903               	skipnz
  1847     051A  0AF3               	incf	___awmod@dividend+1,f
  1848     051B                     l1003:
  1849     051B  0873               	movf	___awmod@dividend+1,w
  1850     051C  00F1               	movwf	?___awmod+1
  1851     051D  0872               	movf	___awmod@dividend,w
  1852     051E  00F0               	movwf	?___awmod
  1853     051F                     l300:
  1854     051F  0008               	return
  1855     0520                     __end_of___awmod:
  1856                           
  1857                           	psect	text8
  1858     0520                     __ptext8:	
  1859 ;; *************** function ___awdiv *****************
  1860 ;; Defined at:
  1861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  divisor         2    0[COMMON] int 
  1864 ;;  dividend        2    2[COMMON] int 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  quotient        2    6[COMMON] int 
  1867 ;;  sign            1    5[COMMON] unsigned char 
  1868 ;;  counter         1    4[COMMON] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2    0[COMMON] int 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1878 ;;      Params:         4       0       0       0       0
  1879 ;;      Locals:         4       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0
  1881 ;;      Totals:         8       0       0       0       0
  1882 ;;Total ram usage:        8 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_vfpfcnvrt
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891     0520                     ___awdiv:	
  1892                           ;psect for function ___awdiv
  1893                           
  1894     0520                     l925:	
  1895                           ;incstack = 0
  1896                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1897                           
  1898     0520  01F5               	clrf	___awdiv@sign
  1899     0521                     l927:
  1900     0521  1FF1               	btfss	___awdiv@divisor+1,7
  1901     0522  2D24               	goto	u401
  1902     0523  2D25               	goto	u400
  1903     0524                     u401:
  1904     0524  2D2C               	goto	l933
  1905     0525                     u400:
  1906     0525                     l929:
  1907     0525  09F0               	comf	___awdiv@divisor,f
  1908     0526  09F1               	comf	___awdiv@divisor+1,f
  1909     0527  0AF0               	incf	___awdiv@divisor,f
  1910     0528  1903               	skipnz
  1911     0529  0AF1               	incf	___awdiv@divisor+1,f
  1912     052A                     l931:
  1913     052A  3001               	movlw	1
  1914     052B  00F5               	movwf	___awdiv@sign
  1915     052C                     l933:
  1916     052C  1FF3               	btfss	___awdiv@dividend+1,7
  1917     052D  2D2F               	goto	u411
  1918     052E  2D30               	goto	u410
  1919     052F                     u411:
  1920     052F  2D37               	goto	l939
  1921     0530                     u410:
  1922     0530                     l935:
  1923     0530  09F2               	comf	___awdiv@dividend,f
  1924     0531  09F3               	comf	___awdiv@dividend+1,f
  1925     0532  0AF2               	incf	___awdiv@dividend,f
  1926     0533  1903               	skipnz
  1927     0534  0AF3               	incf	___awdiv@dividend+1,f
  1928     0535                     l937:
  1929     0535  3001               	movlw	1
  1930     0536  06F5               	xorwf	___awdiv@sign,f
  1931     0537                     l939:
  1932     0537  01F6               	clrf	___awdiv@quotient
  1933     0538  01F7               	clrf	___awdiv@quotient+1
  1934     0539                     l941:
  1935     0539  0870               	movf	___awdiv@divisor,w
  1936     053A  0471               	iorwf	___awdiv@divisor+1,w
  1937     053B  1903               	btfsc	3,2
  1938     053C  2D3E               	goto	u421
  1939     053D  2D3F               	goto	u420
  1940     053E                     u421:
  1941     053E  2D74               	goto	l961
  1942     053F                     u420:
  1943     053F                     l943:
  1944     053F  3001               	movlw	1
  1945     0540  00F4               	movwf	___awdiv@counter
  1946     0541  2D4B               	goto	l949
  1947     0542                     l945:
  1948     0542  3001               	movlw	1
  1949     0543                     u435:
  1950     0543  1003               	clrc
  1951     0544  0DF0               	rlf	___awdiv@divisor,f
  1952     0545  0DF1               	rlf	___awdiv@divisor+1,f
  1953     0546  3EFF               	addlw	-1
  1954     0547  1D03               	skipz
  1955     0548  2D43               	goto	u435
  1956     0549                     l947:
  1957     0549  3001               	movlw	1
  1958     054A  07F4               	addwf	___awdiv@counter,f
  1959     054B                     l949:
  1960     054B  1FF1               	btfss	___awdiv@divisor+1,7
  1961     054C  2D4E               	goto	u441
  1962     054D  2D4F               	goto	u440
  1963     054E                     u441:
  1964     054E  2D42               	goto	l945
  1965     054F                     u440:
  1966     054F                     l951:
  1967     054F  3001               	movlw	1
  1968     0550                     u455:
  1969     0550  1003               	clrc
  1970     0551  0DF6               	rlf	___awdiv@quotient,f
  1971     0552  0DF7               	rlf	___awdiv@quotient+1,f
  1972     0553  3EFF               	addlw	-1
  1973     0554  1D03               	skipz
  1974     0555  2D50               	goto	u455
  1975     0556  0871               	movf	___awdiv@divisor+1,w
  1976     0557  0273               	subwf	___awdiv@dividend+1,w
  1977     0558  1D03               	skipz
  1978     0559  2D5C               	goto	u465
  1979     055A  0870               	movf	___awdiv@divisor,w
  1980     055B  0272               	subwf	___awdiv@dividend,w
  1981     055C                     u465:
  1982     055C  1C03               	skipc
  1983     055D  2D5F               	goto	u461
  1984     055E  2D60               	goto	u460
  1985     055F                     u461:
  1986     055F  2D67               	goto	l957
  1987     0560                     u460:
  1988     0560                     l953:
  1989     0560  0870               	movf	___awdiv@divisor,w
  1990     0561  02F2               	subwf	___awdiv@dividend,f
  1991     0562  0871               	movf	___awdiv@divisor+1,w
  1992     0563  1C03               	skipc
  1993     0564  03F3               	decf	___awdiv@dividend+1,f
  1994     0565  02F3               	subwf	___awdiv@dividend+1,f
  1995     0566                     l955:
  1996     0566  1476               	bsf	___awdiv@quotient,0
  1997     0567                     l957:
  1998     0567  3001               	movlw	1
  1999     0568                     u475:
  2000     0568  1003               	clrc
  2001     0569  0CF1               	rrf	___awdiv@divisor+1,f
  2002     056A  0CF0               	rrf	___awdiv@divisor,f
  2003     056B  3EFF               	addlw	-1
  2004     056C  1D03               	skipz
  2005     056D  2D68               	goto	u475
  2006     056E                     l959:
  2007     056E  3001               	movlw	1
  2008     056F  02F4               	subwf	___awdiv@counter,f
  2009     0570  1D03               	btfss	3,2
  2010     0571  2D73               	goto	u481
  2011     0572  2D74               	goto	u480
  2012     0573                     u481:
  2013     0573  2D4F               	goto	l951
  2014     0574                     u480:
  2015     0574                     l961:
  2016     0574  0875               	movf	___awdiv@sign,w
  2017     0575  1903               	btfsc	3,2
  2018     0576  2D78               	goto	u491
  2019     0577  2D79               	goto	u490
  2020     0578                     u491:
  2021     0578  2D7E               	goto	l965
  2022     0579                     u490:
  2023     0579                     l963:
  2024     0579  09F6               	comf	___awdiv@quotient,f
  2025     057A  09F7               	comf	___awdiv@quotient+1,f
  2026     057B  0AF6               	incf	___awdiv@quotient,f
  2027     057C  1903               	skipnz
  2028     057D  0AF7               	incf	___awdiv@quotient+1,f
  2029     057E                     l965:
  2030     057E  0877               	movf	___awdiv@quotient+1,w
  2031     057F  00F1               	movwf	?___awdiv+1
  2032     0580  0876               	movf	___awdiv@quotient,w
  2033     0581  00F0               	movwf	?___awdiv
  2034     0582                     l287:
  2035     0582  0008               	return
  2036     0583                     __end_of___awdiv:
  2037                           
  2038                           	psect	text9
  2039     04A3                     __ptext9:	
  2040 ;; *************** function _show *****************
  2041 ;; Defined at:
  2042 ;;		line 88 in file "main.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  s               2    3[COMMON] PTR unsigned char 
  2045 ;;		 -> STR_8(14), main@buffer(10), STR_6(4), STR_5(8), 
  2046 ;;		 -> STR_4(6), STR_3(4), STR_2(6), STR_1(7), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         2       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         2       0       0       0       0
  2062 ;;Total ram usage:        2 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 1
  2065 ;; This function calls:
  2066 ;;		_dat
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072     04A3                     _show:	
  2073                           ;psect for function _show
  2074                           
  2075     04A3                     l1111:	
  2076                           ;incstack = 0
  2077                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2078                           
  2079                           
  2080                           ;main.c: 89:     while(*s) {
  2081     04A3  2CB8               	goto	l1117
  2082     04A4                     l1113:
  2083                           
  2084                           ;main.c: 90:         dat(*s++);
  2085     04A4  0874               	movf	show@s+1,w
  2086     04A5  00FF               	movwf	btemp+1
  2087     04A6  0873               	movf	show@s,w
  2088     04A7  0084               	movwf	4
  2089     04A8  120A  118A  2003  120A  118A  	fcall	stringtab
  2090     04AD  120A  118A  2425  120A  118A  	fcall	_dat
  2091     04B2                     l1115:
  2092     04B2  3001               	movlw	1
  2093     04B3  07F3               	addwf	show@s,f
  2094     04B4  1803               	skipnc
  2095     04B5  0AF4               	incf	show@s+1,f
  2096     04B6  3000               	movlw	0
  2097     04B7  07F4               	addwf	show@s+1,f
  2098     04B8                     l1117:
  2099                           
  2100                           ;main.c: 89:     while(*s) {
  2101     04B8  0874               	movf	show@s+1,w
  2102     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2103     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2104     04BB  00FF               	movwf	btemp+1
  2105     04BC  0873               	movf	show@s,w
  2106     04BD  0084               	movwf	4
  2107     04BE  120A  118A  2003  120A  118A  	fcall	stringtab
  2108     04C3  3A00               	xorlw	0
  2109     04C4  1D03               	skipz
  2110     04C5  2CC7               	goto	u761
  2111     04C6  2CC8               	goto	u760
  2112     04C7                     u761:
  2113     04C7  2CA4               	goto	l1113
  2114     04C8                     u760:
  2115     04C8                     l48:
  2116     04C8  0008               	return
  2117     04C9                     __end_of_show:
  2118                           
  2119                           	psect	text10
  2120     0425                     __ptext10:	
  2121 ;; *************** function _dat *****************
  2122 ;; Defined at:
  2123 ;;		line 80 in file "main.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  b               1    wreg     unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  b               1    2[COMMON] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         3       0       0       0       0
  2141 ;;Total ram usage:        3 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_show
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150     0425                     _dat:	
  2151                           ;psect for function _dat
  2152                           
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _dat: [wreg]
  2156                           ;dat@b stored from wreg
  2157     0425  00F2               	movwf	dat@b
  2158     0426                     l1089:
  2159                           
  2160                           ;main.c: 81:     PORTB = b;
  2161     0426  0872               	movf	dat@b,w
  2162     0427  1283               	bcf	3,5	;RP0=0, select bank0
  2163     0428  1303               	bcf	3,6	;RP1=0, select bank0
  2164     0429  0086               	movwf	6	;volatile
  2165     042A                     l1091:
  2166                           
  2167                           ;main.c: 82:     RD6 = 1;
  2168     042A  1708               	bsf	8,6	;volatile
  2169     042B                     l1093:
  2170                           
  2171                           ;main.c: 83:     RD7 = 1;
  2172     042B  1788               	bsf	8,7	;volatile
  2173                           
  2174                           ;main.c: 84:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2175     042C  300D               	movlw	13
  2176     042D  00F1               	movwf	??_dat+1
  2177     042E  30FB               	movlw	251
  2178     042F  00F0               	movwf	??_dat
  2179     0430                     u817:
  2180     0430  0BF0               	decfsz	??_dat,f
  2181     0431  2C30               	goto	u817
  2182     0432  0BF1               	decfsz	??_dat+1,f
  2183     0433  2C30               	goto	u817
  2184     0434  2C35               	nop2
  2185     0435                     l1095:
  2186                           
  2187                           ;main.c: 85:     RD7 = 0;
  2188     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2189     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2190     0437  1388               	bcf	8,7	;volatile
  2191     0438                     l42:
  2192     0438  0008               	return
  2193     0439                     __end_of_dat:
  2194                           
  2195                           	psect	text11
  2196     0439                     __ptext11:	
  2197 ;; *************** function _lcd_init *****************
  2198 ;; Defined at:
  2199 ;;		line 23 in file "main.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0
  2215 ;;      Temps:          2       0       0       0       0
  2216 ;;      Totals:         2       0       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 1
  2220 ;; This function calls:
  2221 ;;		_cmd
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227     0439                     _lcd_init:	
  2228                           ;psect for function _lcd_init
  2229                           
  2230     0439                     l1107:	
  2231                           ;incstack = 0
  2232                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2233                           
  2234                           
  2235                           ;main.c: 24:     cmd(0x38);
  2236     0439  3038               	movlw	56
  2237     043A  120A  118A  2411  120A  118A  	fcall	_cmd
  2238                           
  2239                           ;main.c: 25:     cmd(0x0c);
  2240     043F  300C               	movlw	12
  2241     0440  120A  118A  2411  120A  118A  	fcall	_cmd
  2242                           
  2243                           ;main.c: 26:     cmd(0x06);
  2244     0445  3006               	movlw	6
  2245     0446  120A  118A  2411  120A  118A  	fcall	_cmd
  2246                           
  2247                           ;main.c: 27:     cmd(0x01);
  2248     044B  3001               	movlw	1
  2249     044C  120A  118A  2411  120A  118A  	fcall	_cmd
  2250     0451                     l1109:
  2251                           
  2252                           ;main.c: 28:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2253     0451  300D               	movlw	13
  2254     0452  00F4               	movwf	??_lcd_init+1
  2255     0453  30FB               	movlw	251
  2256     0454  00F3               	movwf	??_lcd_init
  2257     0455                     u827:
  2258     0455  0BF3               	decfsz	??_lcd_init,f
  2259     0456  2C55               	goto	u827
  2260     0457  0BF4               	decfsz	??_lcd_init+1,f
  2261     0458  2C55               	goto	u827
  2262     0459  2C5A               	nop2
  2263     045A                     l21:
  2264     045A  0008               	return
  2265     045B                     __end_of_lcd_init:
  2266                           
  2267                           	psect	text12
  2268     0411                     __ptext12:	
  2269 ;; *************** function _cmd *****************
  2270 ;; Defined at:
  2271 ;;		line 72 in file "main.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  a               1    wreg     unsigned char 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  a               1    2[COMMON] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         1       0       0       0       0
  2287 ;;      Temps:          2       0       0       0       0
  2288 ;;      Totals:         3       0       0       0       0
  2289 ;;Total ram usage:        3 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_lcd_init
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299     0411                     _cmd:	
  2300                           ;psect for function _cmd
  2301                           
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _cmd: [wreg]
  2305                           ;cmd@a stored from wreg
  2306     0411  00F2               	movwf	cmd@a
  2307     0412                     l1081:
  2308                           
  2309                           ;main.c: 73:     PORTB = a;
  2310     0412  0872               	movf	cmd@a,w
  2311     0413  1283               	bcf	3,5	;RP0=0, select bank0
  2312     0414  1303               	bcf	3,6	;RP1=0, select bank0
  2313     0415  0086               	movwf	6	;volatile
  2314     0416                     l1083:
  2315                           
  2316                           ;main.c: 74:     RD6 = 0;
  2317     0416  1308               	bcf	8,6	;volatile
  2318     0417                     l1085:
  2319                           
  2320                           ;main.c: 75:     RD7 = 1;
  2321     0417  1788               	bsf	8,7	;volatile
  2322                           
  2323                           ;main.c: 76:     _delay((unsigned long)((2)*(20000000/4000.0)));
  2324     0418  300D               	movlw	13
  2325     0419  00F1               	movwf	??_cmd+1
  2326     041A  30FB               	movlw	251
  2327     041B  00F0               	movwf	??_cmd
  2328     041C                     u837:
  2329     041C  0BF0               	decfsz	??_cmd,f
  2330     041D  2C1C               	goto	u837
  2331     041E  0BF1               	decfsz	??_cmd+1,f
  2332     041F  2C1C               	goto	u837
  2333     0420  2C21               	nop2
  2334     0421                     l1087:
  2335                           
  2336                           ;main.c: 77:     RD7 = 0;
  2337     0421  1283               	bcf	3,5	;RP0=0, select bank0
  2338     0422  1303               	bcf	3,6	;RP1=0, select bank0
  2339     0423  1388               	bcf	8,7	;volatile
  2340     0424                     l39:
  2341     0424  0008               	return
  2342     0425                     __end_of_cmd:
  2343     0002                     ___latbits      equ	2
  2344     007E                     btemp           set	126	;btemp
  2345     007E                     wtemp0          set	126
  2346                           
  2347                           	psect	config
  2348                           
  2349                           ;Config register CONFIG @ 0x2007
  2350                           ;	Oscillator Selection bits
  2351                           ;	FOSC = HS, HS oscillator
  2352                           ;	Watchdog Timer Enable bit
  2353                           ;	WDTE = OFF, WDT disabled
  2354                           ;	Power-up Timer Enable bit
  2355                           ;	PWRTE = OFF, PWRT disabled
  2356                           ;	Brown-out Reset Enable bit
  2357                           ;	BOREN = ON, BOR enabled
  2358                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2359                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2360                           ;	Data EEPROM Memory Code Protection bit
  2361                           ;	CPD = OFF, Data EEPROM code protection off
  2362                           ;	Flash Program Memory Write Enable bits
  2363                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2364                           ;	In-Circuit Debugger Mode bit
  2365                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  2366                           ;	Flash Program Memory Code Protection bit
  2367                           ;	CP = OFF, Code protection off
  2368     2007                     	org	8199
  2369     2007  3F7A               	dw	16250

Data Sizes:
    Strings     52
    Constant    0
    Data        6
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     59      70
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    main@arr1	PTR unsigned char [6] size(1) Largest target is 8
		 -> STR_1(CODE[7]), STR_2(CODE[6]), STR_3(CODE[4]), STR_4(CODE[6]), 
		 -> STR_5(CODE[8]), STR_6(CODE[4]), 

    main@F1336	PTR unsigned char [6] size(1) Largest target is 8
		 -> STR_1(CODE[7]), STR_2(CODE[6]), STR_3(CODE[4]), STR_4(CODE[6]), 
		 -> STR_5(CODE[8]), STR_6(CODE[4]), 

    S547$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    S547$source	PTR const unsigned char  size(1) Largest target is 0

    show@s	PTR unsigned char  size(2) Largest target is 14
		 -> main@buffer(BANK0[10]), STR_1(CODE[7]), STR_2(CODE[6]), STR_3(CODE[4]), 
		 -> STR_4(CODE[6]), STR_5(CODE[8]), STR_6(CODE[4]), STR_8(CODE[14]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@buffer(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _show->_dat
    _lcd_init->_cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0    2088
                                             34 BANK0     25    25      0
                                _cmd
                           _lcd_init
                               _show
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    15      4    1764
                                             17 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1559
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1434
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2      77
                                              3 COMMON     2     0      2
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      29
                                              3 COMMON     2     2      0
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_init
     _cmd
   _show
     _dat
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      32     40.0%
BITBANK1            80      0       0      0.0%
BANK0               80     59      70     87.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     116      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Nov 06 18:36:41 2024

                      pc 0002                       l21 045A                       l42 0438  
                     l39 0424                       l48 04C8             ___awdiv@sign 0075  
                     fsr 0004                      l300 051F                      l287 0582  
                    l641 04A2                      l635 07C9                      l660 061C  
                    l671 03F1                      l648 0410                      l931 052A  
                    l941 0539                      l933 052C                      l925 0520  
                    l597 047D                      l951 054F                      l943 053F  
                    l935 0530                      l927 0521                      l953 0560  
                    l945 0542                      l961 0574                      l937 0535  
                    l929 0525                      l963 0579                      l955 0566  
                    l947 0549                      l939 0537                      l971 04CA  
                    l965 057E                      l957 0567                      l949 054B  
                    l981 04DE                      l973 04CE                      l959 056E  
                    l991 04F4                      l983 04E4                      l975 04D3  
                    l993 04FE                      l985 04E7                      l977 04D5  
                    l969 04C9                      l995 0504                      l987 04EE  
                    l979 04D9                      l997 050B                      l989 04F0  
                    l999 0511                      _RD6 0046                      _RD7 0047  
                    u400 0525                      u401 0524                      u410 0530  
                    u411 052F                      u420 053F                      u500 04CE  
                    u421 053E                      u501 04CD                      u510 04D9  
                    u511 04D8                      u440 054F                      u520 04E4  
                    u600 058F                      u441 054E                      u521 04E3  
                    u601 058E                      u610 05AE                      u435 0543  
                    u611 05AD                      u460 0560                      u540 04F4  
                    u620 05E0                      u700 0772                      u461 055F  
                    u541 04F3                      u621 05DF                      u701 0771  
                    u550 04FE                      u630 0601                      u710 0777  
                    u455 0550                      u551 04FD                      u535 04E8  
                    u711 0776                      u480 0574                      u640 0404  
                    u720 077C                      u481 0573                      u465 055C  
                    u641 0403                      u625 05DC                      u721 077B  
                    u490 0579                      u570 0511                      u730 0781  
                    u650 06F4                      u491 0578                      u475 0568  
                    u571 0510                      u555 04FA                      u731 0780  
                    u651 06F3                      u580 0516                      u740 07A8  
                    u660 0710                      u581 0515                      u565 0505  
                    u741 07A7                      u661 070F                      u590 0589  
                    u670 071C                      u750 049E                      u591 0588  
                    u671 071B                      u751 049D                      u807 06BD  
                    u760 04C8                      u680 0736                      u817 0430  
                    u761 04C7                      u681 0734                      u690 0737  
                    u770 067F                      u827 0455                      u771 067E  
                    u780 06E0                      u837 041C                      u781 06DF  
                    u775 067B                      u785 06DC                      u797 0652  
                    _abs 0400                      _dat 0425                      _cmd 0411  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   l1001 0516                     l1003 051B                     l1011 058F  
                   l1021 0400                     l1013 0596                     l1101 0492  
                   l1111 04A3                     l1023 0404                     l1015 05AE  
                   l1007 0583                     l1031 06F4                     l1103 049E  
                   l1113 04A4                     l1025 0405                     l1017 05E0  
                   l1009 0589                     l1041 0710                     l1033 06F8  
                   l1121 045F                     l1107 0439                     l1115 04B2  
                   l1051 0738                     l1043 071C                     l1035 06FC  
                   l1123 0463                     ?_abs 0076                     l1109 0451  
                   l1117 04B8                     l1061 077C                     l1053 0757  
                   l1045 072A                     l1037 0700                     l1029 06E4  
                   l1125 0465                     l1141 0638                     l1133 061D  
                   l1063 0781                     l1055 076C                     l1047 072F  
                   l1071 07A9                     l1039 0704                     l1127 0467  
                   l1119 045B                     l1151 0659                     l1143 063D  
                   l1135 0620                     l1081 0412                     l1065 078A  
                   l1057 0772                     l1049 0731                     l1129 0474  
                   l1161 0694                     l1153 065F                     l1145 0643  
                   l1137 0621                     l1083 0416                     l1091 042A  
                   l1067 079E                     l1059 0777                     l1075 07B0  
                   l1171 06C4                     l1163 069D                     l1155 0670  
                   l1147 0647                     l1139 0622                     l1085 0417  
                   l1093 042B                     l1069 07A2                     l1173 06CA  
                   l1157 067F                     l1165 06A6                     l1149 064A  
                   ?_dat 0070                     l1087 0421                     l1095 0435  
                   l1167 06AC                     l1159 068E                     l1175 06D2  
                   l1089 0426                     l1097 047E                     l1169 06B5  
                   ?_cmd 0070                     l1099 0483                     STR_1 0029  
                   STR_2 0030                     STR_3 0040                     STR_4 0036  
                   STR_5 0021                     STR_6 003C                     STR_7 0044  
                   STR_8 0013                     abs@a 0076                     _dbuf 00A0  
                   dat@b 0072                     cmd@a 0072                     _main 061D  
                   _prec 0063                     _show 04A3                     btemp 007E  
                   start 0000                    ??_abs 0078                    ??_dat 0070  
                  ??_cmd 0070                    ?_main 0070          __end_of___awdiv 0583  
        __end_of___awmod 0520                    ?_show 0073          ___awdiv@divisor 0070  
        ___awdiv@counter 0074             vfpfcnvrt@fmt 0022                    _PORTB 0006  
                  _TRISB 0086                    _flags 0065                    _fputc 0583  
                  _width 0061                    _putch 03F1                    main@i 0059  
                  main@l 0055                    main@r 0057                    pclath 000A  
                  show@s 0073                    status 0003                    wtemp0 007E  
        __end_of_sprintf 047E          __initialization 07CA             __end_of_main 06E4  
           __end_of_show 04C9                   ??_main 0042                   ??_show 0075  
                 ?_fputc 0070         ___awdiv@dividend 0072                   ?_putch 0070  
          vfpfcnvrt@done 0026             vfprintf@cfmt 007D         __end_of_lcd_init 045B  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0076  
        ___awmod@divisor 0070          ___awmod@counter 0074                   fputc@c 0070  
                 putch@c 0070         __end_of_vfprintf 04A3                ??_sprintf 0035  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 03F2  
          __end_of_fputc 061D            __end_of_putch 03F2                  ??_fputc 0074  
                ??_putch 0070               __pbssBANK0 0061               __pbssBANK1 00A0  
             __pmaintext 061D                ?_lcd_init 0070               __stringtab 0003  
                ___awdiv 0520                  ___awmod 04C9                ?_vfprintf 002D  
                __ptext1 045B                  __ptext2 047E                  __ptext3 06E4  
                __ptext4 0583                  __ptext5 03F1                  __ptext6 0400  
                __ptext7 04C9                  __ptext8 0520                  __ptext9 04A3  
       ___awmod@dividend 0072                  _sprintf 045B                  clrloop0 03F9  
             ??_lcd_init 0073     end_of_initialization 07FC                  fputc@fp 0072  
      __end_of_vfpfcnvrt 07CA         vfpfcnvrt@convarg 0028               ??_vfprintf 007D  
              _TRISDbits 0088               main@buffer 004B              vfpfcnvrt@ap 0023  
            vfpfcnvrt@cp 0027              vfpfcnvrt@fp 0020      start_initialization 07CA  
            __end_of_abs 0411              __end_of_dat 0439              __end_of_cmd 0425  
            vfprintf@fmt 002F              __pdataBANK0 005B                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0070                 ?___awmod 0070  
              __pstrings 0003                 ?_sprintf 0031                clear_ram0 03F8  
              main@F1336 005B                _vfpfcnvrt 06E4              __stringbase 0012  
             vfpfcnvrt@c 002C               vfprintf@ap 0030               vfprintf@fp 002D  
             ?_vfpfcnvrt 0020       __end_of__stringtab 0013               sprintf@fmt 0032  
               __ptext10 0425                 __ptext11 0439                 __ptext12 0411  
               _lcd_init 0439                 _vfprintf 047E                 main@arr1 0045  
              sprintf@ap 0036                stringcode 000D              ??_vfpfcnvrt 0024  
               sprintf@f 0037                 sprintf@s 0031                 stringdir 000D  
               stringtab 0003  
