

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 11:45:29 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     8                           	dabs	1,0x7E,2
     9     0000                     
    10                           ; Generated 12/10/2023 GMT
    11                           ; 
    12                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution. Publication is not required when
    26                           ;        this file is used in an embedded application.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44     0004                     fsr             equ	4
    45     0004                     fsr0            equ	4
    46     0000                     indf            equ	0
    47     0000                     indf0           equ	0
    48     0002                     pc              equ	2
    49     0002                     pcl             equ	2
    50     000A                     pclath          equ	10
    51     0003                     status          equ	3
    52     0000                     INDF            equ	0	;# 
    53     0001                     TMR0            equ	1	;# 
    54     0002                     PCL             equ	2	;# 
    55     0003                     STATUS          equ	3	;# 
    56     0004                     FSR             equ	4	;# 
    57     0005                     PORTA           equ	5	;# 
    58     0006                     PORTB           equ	6	;# 
    59     0007                     PORTC           equ	7	;# 
    60     0008                     PORTD           equ	8	;# 
    61     0009                     PORTE           equ	9	;# 
    62     000A                     PCLATH          equ	10	;# 
    63     000B                     INTCON          equ	11	;# 
    64     000C                     PIR1            equ	12	;# 
    65     000D                     PIR2            equ	13	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0011                     TMR2            equ	17	;# 
    71     0012                     T2CON           equ	18	;# 
    72     0013                     SSPBUF          equ	19	;# 
    73     0014                     SSPCON          equ	20	;# 
    74     0015                     CCPR1           equ	21	;# 
    75     0015                     CCPR1L          equ	21	;# 
    76     0016                     CCPR1H          equ	22	;# 
    77     0017                     CCP1CON         equ	23	;# 
    78     0018                     RCSTA           equ	24	;# 
    79     0019                     TXREG           equ	25	;# 
    80     001A                     RCREG           equ	26	;# 
    81     001B                     CCPR2           equ	27	;# 
    82     001B                     CCPR2L          equ	27	;# 
    83     001C                     CCPR2H          equ	28	;# 
    84     001D                     CCP2CON         equ	29	;# 
    85     001E                     ADRESH          equ	30	;# 
    86     001F                     ADCON0          equ	31	;# 
    87     0081                     OPTION_REG      equ	129	;# 
    88     0085                     TRISA           equ	133	;# 
    89     0086                     TRISB           equ	134	;# 
    90     0087                     TRISC           equ	135	;# 
    91     0088                     TRISD           equ	136	;# 
    92     0089                     TRISE           equ	137	;# 
    93     008C                     PIE1            equ	140	;# 
    94     008D                     PIE2            equ	141	;# 
    95     008E                     PCON            equ	142	;# 
    96     0091                     SSPCON2         equ	145	;# 
    97     0092                     PR2             equ	146	;# 
    98     0093                     SSPADD          equ	147	;# 
    99     0094                     SSPSTAT         equ	148	;# 
   100     0098                     TXSTA           equ	152	;# 
   101     0099                     SPBRG           equ	153	;# 
   102     009C                     CMCON           equ	156	;# 
   103     009D                     CVRCON          equ	157	;# 
   104     009E                     ADRESL          equ	158	;# 
   105     009F                     ADCON1          equ	159	;# 
   106     010C                     EEDATA          equ	268	;# 
   107     010D                     EEADR           equ	269	;# 
   108     010E                     EEDATH          equ	270	;# 
   109     010F                     EEADRH          equ	271	;# 
   110     018C                     EECON1          equ	396	;# 
   111     018D                     EECON2          equ	397	;# 
   112     0000                     INDF            equ	0	;# 
   113     0001                     TMR0            equ	1	;# 
   114     0002                     PCL             equ	2	;# 
   115     0003                     STATUS          equ	3	;# 
   116     0004                     FSR             equ	4	;# 
   117     0005                     PORTA           equ	5	;# 
   118     0006                     PORTB           equ	6	;# 
   119     0007                     PORTC           equ	7	;# 
   120     0008                     PORTD           equ	8	;# 
   121     0009                     PORTE           equ	9	;# 
   122     000A                     PCLATH          equ	10	;# 
   123     000B                     INTCON          equ	11	;# 
   124     000C                     PIR1            equ	12	;# 
   125     000D                     PIR2            equ	13	;# 
   126     000E                     TMR1            equ	14	;# 
   127     000E                     TMR1L           equ	14	;# 
   128     000F                     TMR1H           equ	15	;# 
   129     0010                     T1CON           equ	16	;# 
   130     0011                     TMR2            equ	17	;# 
   131     0012                     T2CON           equ	18	;# 
   132     0013                     SSPBUF          equ	19	;# 
   133     0014                     SSPCON          equ	20	;# 
   134     0015                     CCPR1           equ	21	;# 
   135     0015                     CCPR1L          equ	21	;# 
   136     0016                     CCPR1H          equ	22	;# 
   137     0017                     CCP1CON         equ	23	;# 
   138     0018                     RCSTA           equ	24	;# 
   139     0019                     TXREG           equ	25	;# 
   140     001A                     RCREG           equ	26	;# 
   141     001B                     CCPR2           equ	27	;# 
   142     001B                     CCPR2L          equ	27	;# 
   143     001C                     CCPR2H          equ	28	;# 
   144     001D                     CCP2CON         equ	29	;# 
   145     001E                     ADRESH          equ	30	;# 
   146     001F                     ADCON0          equ	31	;# 
   147     0081                     OPTION_REG      equ	129	;# 
   148     0085                     TRISA           equ	133	;# 
   149     0086                     TRISB           equ	134	;# 
   150     0087                     TRISC           equ	135	;# 
   151     0088                     TRISD           equ	136	;# 
   152     0089                     TRISE           equ	137	;# 
   153     008C                     PIE1            equ	140	;# 
   154     008D                     PIE2            equ	141	;# 
   155     008E                     PCON            equ	142	;# 
   156     0091                     SSPCON2         equ	145	;# 
   157     0092                     PR2             equ	146	;# 
   158     0093                     SSPADD          equ	147	;# 
   159     0094                     SSPSTAT         equ	148	;# 
   160     0098                     TXSTA           equ	152	;# 
   161     0099                     SPBRG           equ	153	;# 
   162     009C                     CMCON           equ	156	;# 
   163     009D                     CVRCON          equ	157	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0041                     _RD1            set	65
   173     0040                     _RD0            set	64
   174     0088                     _TRISDbits      set	136
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2F9F   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0070                     __pcstackCOMMON:
   190     0070                     ?_main:
   191     0070                     ??_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196     0070                     	ds	3
   197     0073                     main@j:
   198                           
   199                           ; 2 bytes @ 0x3
   200     0073                     	ds	2
   201     0075                     main@i:
   202                           
   203                           ; 2 bytes @ 0x5
   204     0075                     	ds	2
   205                           
   206                           	psect	maintext
   207     079F                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 18 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  j               2    3[COMMON] unsigned int 
   218 ;;  i               2    5[COMMON] unsigned int 
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2
   223 ;; Tracked objects:
   224 ;;		On entry : B00/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   228 ;;      Params:         0       0       0       0       0
   229 ;;      Locals:         4       0       0       0       0
   230 ;;      Temps:          3       0       0       0       0
   231 ;;      Totals:         7       0       0       0       0
   232 ;;Total ram usage:        7 bytes
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		Startup code after reset
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240     079F                     _main:	
   241                           ;psect for function _main
   242                           
   243     079F                     l565:	
   244                           ;incstack = 0
   245                           ; Regs used in _main: [wreg+status,2]
   246                           
   247                           
   248                           ;main.c: 20:     TRISDbits.TRISD0 = 0;
   249     079F  1683               	bsf	3,5	;RP0=1, select bank1
   250     07A0  1303               	bcf	3,6	;RP1=0, select bank1
   251     07A1  1008               	bcf	8,0	;volatile
   252                           
   253                           ;main.c: 21:     TRISDbits.TRISD1 = 0;
   254     07A2  1088               	bcf	8,1	;volatile
   255     07A3                     l567:
   256                           
   257                           ;main.c: 25:         for(unsigned int i=1;i<=10;i++){
   258     07A3  3001               	movlw	1
   259     07A4  00F5               	movwf	main@i
   260     07A5  3000               	movlw	0
   261     07A6  00F6               	movwf	main@i+1
   262     07A7                     l571:
   263                           
   264                           ;main.c: 26:             for(unsigned int j=0;j<i;j++){
   265     07A7  01F3               	clrf	main@j
   266     07A8  01F4               	clrf	main@j+1
   267     07A9  2FD2               	goto	l16
   268     07AA                     l17:
   269                           
   270                           ;main.c: 27:                 RD0 = 1;
   271     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   272     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   273     07AC  1408               	bsf	8,0	;volatile
   274                           
   275                           ;main.c: 28:                 RD1 = 1;
   276     07AD  1488               	bsf	8,1	;volatile
   277     07AE                     l573:
   278                           
   279                           ;main.c: 29:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   280     07AE  3008               	movlw	8
   281     07AF  00F2               	movwf	??_main+2
   282     07B0  309D               	movlw	157
   283     07B1  00F1               	movwf	??_main+1
   284     07B2  3005               	movlw	5
   285     07B3  00F0               	movwf	??_main
   286     07B4                     u37:
   287     07B4  0BF0               	decfsz	??_main,f
   288     07B5  2FB4               	goto	u37
   289     07B6  0BF1               	decfsz	??_main+1,f
   290     07B7  2FB4               	goto	u37
   291     07B8  0BF2               	decfsz	??_main+2,f
   292     07B9  2FB4               	goto	u37
   293     07BA  2FBB               	nop2
   294     07BB                     l575:
   295                           
   296                           ;main.c: 31:                 RD0 = 0;
   297     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   298     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   299     07BD  1008               	bcf	8,0	;volatile
   300     07BE                     l577:
   301                           
   302                           ;main.c: 32:                 RD1 = 0;
   303     07BE  1088               	bcf	8,1	;volatile
   304                           
   305                           ;main.c: 33:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   306     07BF  3008               	movlw	8
   307     07C0  00F2               	movwf	??_main+2
   308     07C1  309D               	movlw	157
   309     07C2  00F1               	movwf	??_main+1
   310     07C3  3005               	movlw	5
   311     07C4  00F0               	movwf	??_main
   312     07C5                     u47:
   313     07C5  0BF0               	decfsz	??_main,f
   314     07C6  2FC5               	goto	u47
   315     07C7  0BF1               	decfsz	??_main+1,f
   316     07C8  2FC5               	goto	u47
   317     07C9  0BF2               	decfsz	??_main+2,f
   318     07CA  2FC5               	goto	u47
   319     07CB  2FCC               	nop2
   320                           
   321                           ;main.c: 34:             }
   322     07CC  3001               	movlw	1
   323     07CD  07F3               	addwf	main@j,f
   324     07CE  1803               	skipnc
   325     07CF  0AF4               	incf	main@j+1,f
   326     07D0  3000               	movlw	0
   327     07D1  07F4               	addwf	main@j+1,f
   328     07D2                     l16:
   329     07D2  0876               	movf	main@i+1,w
   330     07D3  0274               	subwf	main@j+1,w
   331     07D4  1D03               	skipz
   332     07D5  2FD8               	goto	u15
   333     07D6  0875               	movf	main@i,w
   334     07D7  0273               	subwf	main@j,w
   335     07D8                     u15:
   336     07D8  1C03               	skipc
   337     07D9  2FDB               	goto	u11
   338     07DA  2FDC               	goto	u10
   339     07DB                     u11:
   340     07DB  2FAA               	goto	l17
   341     07DC                     u10:
   342     07DC                     l579:
   343                           
   344                           ;main.c: 35:             _delay((unsigned long)((2000)*(20000000/4000.0)));
   345     07DC  3033               	movlw	51
   346     07DD  00F2               	movwf	??_main+2
   347     07DE  30BB               	movlw	187
   348     07DF  00F1               	movwf	??_main+1
   349     07E0  30DF               	movlw	223
   350     07E1  00F0               	movwf	??_main
   351     07E2                     u57:
   352     07E2  0BF0               	decfsz	??_main,f
   353     07E3  2FE2               	goto	u57
   354     07E4  0BF1               	decfsz	??_main+1,f
   355     07E5  2FE2               	goto	u57
   356     07E6  0BF2               	decfsz	??_main+2,f
   357     07E7  2FE2               	goto	u57
   358     07E8  2FE9               	nop2
   359                           
   360                           ;main.c: 36:         }
   361     07E9  3001               	movlw	1
   362     07EA  07F5               	addwf	main@i,f
   363     07EB  1803               	skipnc
   364     07EC  0AF6               	incf	main@i+1,f
   365     07ED  3000               	movlw	0
   366     07EE  07F6               	addwf	main@i+1,f
   367     07EF  3000               	movlw	0
   368     07F0  0276               	subwf	main@i+1,w
   369     07F1  300B               	movlw	11
   370     07F2  1903               	skipnz
   371     07F3  0275               	subwf	main@i,w
   372     07F4  1C03               	skipc
   373     07F5  2FF7               	goto	u21
   374     07F6  2FF8               	goto	u20
   375     07F7                     u21:
   376     07F7  2FA7               	goto	l571
   377     07F8                     u20:
   378     07F8  2FA3               	goto	l567
   379     07F9  120A  118A  2800   	ljmp	start
   380     07FC                     __end_of_main:
   381     0002                     ___latbits      equ	2
   382     007E                     btemp           set	126	;btemp
   383     007E                     wtemp0          set	126
   384                           
   385                           	psect	config
   386                           
   387                           ;Config register CONFIG @ 0x2007
   388                           ;	Oscillator Selection bits
   389                           ;	FOSC = HS, HS oscillator
   390                           ;	Watchdog Timer Enable bit
   391                           ;	WDTE = OFF, WDT disabled
   392                           ;	Power-up Timer Enable bit
   393                           ;	PWRTE = OFF, PWRT disabled
   394                           ;	Brown-out Reset Enable bit
   395                           ;	BOREN = ON, BOR enabled
   396                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   397                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   398                           ;	Data EEPROM Memory Code Protection bit
   399                           ;	CPD = OFF, Data EEPROM code protection off
   400                           ;	Flash Program Memory Write Enable bits
   401                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   402                           ;	In-Circuit Debugger Mode bit
   403                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
   404                           ;	Flash Program Memory Code Protection bit
   405                           ;	CP = OFF, Code protection off
   406     2007                     	org	8199
   407     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0      60
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 11:45:29 2024

                     l16 07D2                       l17 07AA                       u10 07DC  
                     u11 07DB                       u20 07F8                       u21 07F7  
                     u15 07D8                       u37 07B4                       u47 07C5  
                     u57 07E2                      l571 07A7                      l573 07AE  
                    l565 079F                      l575 07BB                      l567 07A3  
                    l577 07BE                      l579 07DC                      _RD0 0040  
                    _RD1 0041                     _main 079F                     btemp 007E  
                   start 0000                    ?_main 0070                    main@i 0075  
                  main@j 0073                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 079F  
   end_of_initialization 07FC                _TRISDbits 0088      start_initialization 07FC  
              ___latbits 0002  
